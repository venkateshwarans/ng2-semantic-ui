{"version":3,"file":"ng2-semantic-ui.js.map","sources":["ng://ng2-semantic-ui/behaviors/localization/locales/en-GB.ts","ng://ng2-semantic-ui/behaviors/localization/services/localization.service.ts","ng://ng2-semantic-ui/behaviors/localization/localization.module.ts","ng://ng2-semantic-ui/modules/transition/classes/transition.ts","ng://ng2-semantic-ui/modules/transition/classes/transition-controller.ts","ng://ng2-semantic-ui/modules/transition/directives/transition.ts","ng://ng2-semantic-ui/modules/transition/transition.module.ts","ng://ng2-semantic-ui/collections/message/components/message.ts","ng://ng2-semantic-ui/collections/message/message.module.ts","ng://ng2-semantic-ui/collections/pagination/components/pagination.ts","ng://ng2-semantic-ui/collections/pagination/pagination.module.ts","ng://ng2-semantic-ui/modules/accordion/components/accordion-panel.ts","ng://ng2-semantic-ui/modules/accordion/services/accordion.service.ts","ng://ng2-semantic-ui/modules/accordion/components/accordion.ts","ng://ng2-semantic-ui/modules/collapse/directives/collapse.ts","ng://ng2-semantic-ui/modules/collapse/collapse.module.ts","ng://ng2-semantic-ui/modules/accordion/accordion.module.ts","ng://ng2-semantic-ui/misc/util/helpers/custom-validator.ts","ng://ng2-semantic-ui/misc/util/helpers/custom-value-accessor.ts","ng://ng2-semantic-ui/misc/util/helpers/util.ts","ng://ng2-semantic-ui/misc/util/helpers/date.ts","ng://ng2-semantic-ui/misc/util/services/component-factory.service.ts","ng://ng2-semantic-ui/misc/util/services/positioning.service.ts","ng://ng2-semantic-ui/misc/util/util.module.ts","ng://ng2-semantic-ui/modules/checkbox/components/checkbox.ts","ng://ng2-semantic-ui/modules/checkbox/components/radio.ts","ng://ng2-semantic-ui/modules/checkbox/directives/radio-manager.ts","ng://ng2-semantic-ui/modules/checkbox/checkbox.module.ts","ng://ng2-semantic-ui/modules/datepicker/services/calendar.service.ts","ng://ng2-semantic-ui/modules/datepicker/directives/calendar-item.ts","ng://ng2-semantic-ui/modules/datepicker/views/calendar-view.ts","ng://ng2-semantic-ui/modules/datepicker/classes/calendar-mappings.ts","ng://ng2-semantic-ui/modules/datepicker/classes/calendar-config.ts","ng://ng2-semantic-ui/modules/datepicker/classes/date-comparer.ts","ng://ng2-semantic-ui/modules/datepicker/helpers/date-fns.ts","ng://ng2-semantic-ui/modules/datepicker/classes/date-parser.ts","ng://ng2-semantic-ui/modules/datepicker/services/calendar-range.service.ts","ng://ng2-semantic-ui/modules/datepicker/components/calendar-view-title.ts","ng://ng2-semantic-ui/modules/datepicker/components/datepicker.ts","ng://ng2-semantic-ui/modules/popup/classes/popup-config.ts","ng://ng2-semantic-ui/modules/popup/components/popup.ts","ng://ng2-semantic-ui/modules/popup/classes/popup-controller.ts","ng://ng2-semantic-ui/modules/popup/classes/popup-component-controller.ts","ng://ng2-semantic-ui/modules/popup/classes/popup-template-controller.ts","ng://ng2-semantic-ui/modules/popup/components/popup-arrow.ts","ng://ng2-semantic-ui/modules/popup/services/popup.service.ts","ng://ng2-semantic-ui/modules/popup/directives/popup.directive.ts","ng://ng2-semantic-ui/modules/popup/popup.module.ts","ng://ng2-semantic-ui/modules/datepicker/directives/datepicker.directive.ts","ng://ng2-semantic-ui/modules/datepicker/directives/input.directive.ts","ng://ng2-semantic-ui/modules/datepicker/views/date-view.ts","ng://ng2-semantic-ui/modules/datepicker/views/hour-view.ts","ng://ng2-semantic-ui/modules/datepicker/views/minute-view.ts","ng://ng2-semantic-ui/modules/datepicker/views/month-view.ts","ng://ng2-semantic-ui/modules/datepicker/views/year-view.ts","ng://ng2-semantic-ui/modules/datepicker/datepicker.module.ts","ng://ng2-semantic-ui/modules/dimmer/components/dimmer.ts","ng://ng2-semantic-ui/modules/dimmer/dimmer.module.ts","ng://ng2-semantic-ui/modules/dropdown/services/dropdown.service.ts","ng://ng2-semantic-ui/modules/dropdown/directives/dropdown-menu.ts","ng://ng2-semantic-ui/modules/dropdown/directives/dropdown.ts","ng://ng2-semantic-ui/modules/dropdown/dropdown.module.ts","ng://ng2-semantic-ui/modules/modal/classes/active-modal.ts","ng://ng2-semantic-ui/modules/modal/classes/modal-config.ts","ng://ng2-semantic-ui/modules/modal/classes/modal-controls.ts","ng://ng2-semantic-ui/modules/modal/classes/modal-template.ts","ng://ng2-semantic-ui/modules/modal/components/modal.ts","ng://ng2-semantic-ui/modules/modal/services/modal.service.ts","ng://ng2-semantic-ui/modules/modal/components/dimmer.ts","ng://ng2-semantic-ui/modules/modal/modal.module.ts","ng://ng2-semantic-ui/modules/progress/components/progress.ts","ng://ng2-semantic-ui/modules/progress/progress.module.ts","ng://ng2-semantic-ui/modules/rating/components/rating.ts","ng://ng2-semantic-ui/modules/rating/rating.module.ts","ng://ng2-semantic-ui/modules/search/components/search-result.ts","ng://ng2-semantic-ui/modules/search/services/search.service.ts","ng://ng2-semantic-ui/modules/search/components/search.ts","ng://ng2-semantic-ui/modules/search/search.module.ts","ng://ng2-semantic-ui/modules/select/components/select-option.ts","ng://ng2-semantic-ui/modules/select/directives/select-search.ts","ng://ng2-semantic-ui/modules/select/classes/select-base.ts","ng://ng2-semantic-ui/modules/select/components/multi-select-label.ts","ng://ng2-semantic-ui/modules/select/components/multi-select.ts","ng://ng2-semantic-ui/modules/select/components/select.ts","ng://ng2-semantic-ui/modules/select/select.module.ts","ng://ng2-semantic-ui/modules/sidebar/services/sidebar.service.ts","ng://ng2-semantic-ui/modules/sidebar/components/sidebar.ts","ng://ng2-semantic-ui/modules/sidebar/components/sidebar-sibling.ts","ng://ng2-semantic-ui/modules/sidebar/components/sidebar-container.ts","ng://ng2-semantic-ui/modules/sidebar/sidebar.module.ts","ng://ng2-semantic-ui/modules/tabs/classes/tab.ts","ng://ng2-semantic-ui/modules/tabs/directives/tab-header.ts","ng://ng2-semantic-ui/modules/tabs/directives/tab-content.ts","ng://ng2-semantic-ui/modules/tabs/components/tabset.ts","ng://ng2-semantic-ui/modules/tabs/tab.module.ts","ng://ng2-semantic-ui/sui.module.ts"],"sourcesContent":["import { ILocaleValues } from \"./interfaces/values\";\n\nconst enGB:ILocaleValues = {\n    datepicker: {\n        months: [\n            \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\n        ],\n        monthsShort: [\n            \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"\n        ],\n        weekdays: [\n            \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"\n        ],\n        weekdaysShort: [\n            \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"\n        ],\n        weekdaysNarrow: [\n            \"S\", \"M\", \"T\", \"W\", \"T\", \"F\", \"S\"\n        ],\n        timesOfDay: [\n            \"a.m.\", \"p.m.\"\n        ],\n        timesOfDayUppercase: [\n            \"AM\", \"PM\"\n        ],\n        timesOfDayLowercase: [\n            \"am\", \"pm\"\n        ],\n        formats: {\n            time: \"h:mm A\",\n            datetime: \"D MMMM YYYY h:mm A\",\n            date: \"D MMMM YYYY\",\n            month: \"MMMM YYYY\",\n            year: \"YYYY\"\n        },\n        firstDayOfWeek: 1\n    },\n    search: {\n        placeholder: \"Search...\",\n        noResults: {\n            header: \"No Results\",\n            message: \"Your search returned no results.\"\n        }\n    },\n    select: {\n        noResultsMessage: \"No results\",\n        single: {\n            placeholder: \"Select one\"\n        },\n        multi: {\n            placeholder: \"Select...\",\n            maxSelectedMessage: \"Max #{max} selections\",\n            selectedMessage: \"#{count} selections\"\n        }\n    }\n};\n\nexport default enGB;\n","import { Injectable, EventEmitter } from \"@angular/core\";\nimport { ILocaleValues, IPartialLocaleValues, RecursivePartial } from \"../locales/interfaces/values\";\nimport enGB from \"../locales/en-GB\";\nimport * as $extend from \"extend\";\n\nfunction deepClone<T>(obj:T):T {\n    return JSON.parse(JSON.stringify(obj));\n}\n\nfunction deepExtend<T, U>(target:T, source:U):T & U {\n    // Rollup...\n    const extend = ($extend as any).default || $extend;\n    return extend(true, target, source);\n}\n\nfunction lang(language:string):string {\n    return language.toLowerCase().replace(\"-\", \"\");\n}\n\ninterface ILocalizationValuesContainer {\n    [name:string]:IPartialLocaleValues;\n}\n\n@Injectable()\nexport class SuiLocalizationService {\n    private _language:string;\n\n    private _fallbackValues:ILocaleValues;\n    private _values:ILocalizationValuesContainer;\n\n    public get language():string {\n        return this._language;\n    }\n\n    public onLanguageUpdate:EventEmitter<void>;\n\n    constructor() {\n        this.onLanguageUpdate = new EventEmitter<void>();\n\n        this._fallbackValues = enGB;\n        this._values = {};\n        this._language = \"en-GB\";\n        this.load(\"en-GB\", enGB);\n    }\n\n    public setLanguage(language:string):void {\n        if (lang(this._language) !== lang(language)) {\n            this._language = language;\n            this.onLanguageUpdate.emit();\n        }\n    }\n\n    public get(language:string = this.language):ILocaleValues {\n        const values = deepClone(this._fallbackValues);\n        if (!this._values[lang(language)]) {\n            throw new Error(`Locale ${language} is not loaded`);\n        }\n        deepExtend(values, this._values[lang(language)]);\n        return deepClone(values);\n    }\n\n    public override<T extends keyof ILocaleValues>(\n        values:ILocaleValues[T],\n        overrides:RecursivePartial<ILocaleValues[T]>\n    ):ILocaleValues[T] {\n        return deepExtend(deepClone(values), overrides);\n    }\n\n    public load(language:string, values:IPartialLocaleValues):void {\n        this._values[lang(language)] = deepClone(values);\n        this.onLanguageUpdate.emit();\n    }\n\n    public patch(language:string, values:IPartialLocaleValues):void {\n        deepExtend(this._values[lang(language)], values);\n    }\n\n    public interpolate(value:string, variables:[string, string][]):string {\n        return variables.reduce((s, [k, v]) => s.replace(new RegExp(`#{${k}}`, \"g\"), v), value);\n    }\n}\n","\nimport { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { SuiLocalizationService } from \"./services/localization.service\";\n\n@NgModule({\n    imports: [CommonModule],\n    providers: [SuiLocalizationService]\n})\nexport class SuiLocalizationModule {}\n","// Possible directions for a transition.\nexport enum TransitionDirection {\n    In,\n    Out,\n    Either,\n    Static\n}\n\nexport class Transition {\n    public readonly type:string;\n\n    public readonly duration:number;\n\n    public direction:TransitionDirection;\n\n    // Converts TransitionDirection to class name.\n    public get directionClass():string {\n        switch (this.direction) {\n            case TransitionDirection.In: return \"in\";\n            case TransitionDirection.Out: return \"out\";\n        }\n\n        return \"\";\n    }\n\n    // Stores the individual classes for the transition, e.g. \"fade out\" -> [\"fade\", \"out\"].\n    public readonly classes:string[];\n\n    public onComplete:() => void;\n\n    constructor(name:string,\n                duration:number = 250,\n                direction:TransitionDirection = TransitionDirection.Either,\n                onComplete:(() => void) = () => {}) {\n\n        this.type = name;\n\n        // We set a minimum duration of 1ms, to give the appearance of an immediate transition\n        // whilst allowing positioning calculations to happen without a visible flicker.\n        this.duration = Math.max(duration, 1);\n\n        this.direction = direction;\n        this.classes = this.type.split(\" \");\n        this.onComplete = onComplete;\n    }\n}\n","import { Renderer2, ElementRef, ChangeDetectorRef } from \"@angular/core\";\nimport { Transition, TransitionDirection } from \"./transition\";\n\nexport class TransitionController {\n    private _renderer:Renderer2;\n\n    private _element:ElementRef;\n\n    private _changeDetector:ChangeDetectorRef;\n\n    // Used to delay animations until we have an element to animate.\n    private get _isReady():boolean {\n        return this._renderer != undefined && this._element != undefined && this._changeDetector != undefined;\n    }\n\n    // Sets the 'display' style when visible.\n    private _display:string;\n\n    // Stores queued transitions.\n    private _queue:Transition[];\n\n    private _isAnimating:boolean;\n\n    public get isAnimating():boolean {\n        return this._isAnimating;\n    }\n\n    // Set when the element is visible, and while it is transitioning out.\n    private _isVisible:boolean;\n\n    public get isVisible():boolean {\n        return this._isVisible;\n    }\n\n    // Set when the element is hidden, and not while it is transitioning.\n    private _isHidden:boolean;\n\n    public get isHidden():boolean {\n        return this._isHidden;\n    }\n\n    // Gets the first transition in the queue.\n    private get _queueFirst():Transition {\n        return this._queue[0];\n    }\n\n    // Gets the last transition in the queue.\n    private get _queueLast():Transition {\n        return this._queue[this._queue.length - 1];\n    }\n\n    // Stores the setTimeout pointer for cancelling the animation callback.\n    private _animationTimeout:number;\n\n    constructor(isInitiallyVisible:boolean = true, display:string = \"block\") {\n        // isInitiallyVisible sets whether the element starts out visible.\n        this._isVisible = isInitiallyVisible;\n        this._isHidden = !this._isVisible;\n\n        this._display = display;\n        this._queue = [];\n\n        this._isAnimating = false;\n    }\n\n    // Sets the renderer to be used for animating.\n    public registerRenderer(renderer:Renderer2):void {\n        this._renderer = renderer;\n        this.performTransition();\n    }\n\n    // Sets the element to perform the animations on.\n    public registerElement(element:ElementRef):void {\n        this._element = element;\n        this.performTransition();\n    }\n\n    // Sets the change detector to detect changes when using ChangeDetectionStrategy.OnPush.\n    public registerChangeDetector(changeDetector:ChangeDetectorRef):void {\n        this._changeDetector = changeDetector;\n        this.performTransition();\n    }\n\n    public animate(transition:Transition):void {\n        // Test if transition is one of the list that doesn't change the visible state.\n        // Should these eventually become classes?\n        const isDirectionless = [\"jiggle\", \"flash\", \"shake\", \"pulse\", \"tada\", \"bounce\"].indexOf(transition.type) !== -1;\n        if (isDirectionless) {\n            transition.direction = TransitionDirection.Static;\n        } else if (transition.direction == undefined || transition.direction === TransitionDirection.Either) {\n            // Set the direction to the opposite of the current visible state automatically if not set, or set to either direction.\n            transition.direction = this._isVisible ? TransitionDirection.Out : TransitionDirection.In;\n            if (this._queueLast) {\n                // If there is an transition in the queue already, set the direction to the opposite of the direction of that transition.\n                if (this._queueLast.direction === TransitionDirection.In) {\n                    transition.direction = TransitionDirection.Out;\n                } else if (this._queueLast.direction === TransitionDirection.Out) {\n                    transition.direction = TransitionDirection.In;\n                }\n            }\n        }\n\n        // Store the transition in the queue before attempting to perform it.\n        this._queue.push(transition);\n\n        this.performTransition();\n    }\n\n    private performTransition():void {\n        if (!this._isReady || this._isAnimating || !this._queueFirst) {\n            // Don't transition until we are ready, or if we are animating, or if there aren't any transitions in the queue.\n            return;\n        }\n\n        this._isAnimating = true;\n\n        const transition = this._queueFirst;\n\n        // Set the Semantic UI classes for transitioning.\n        transition.classes.forEach(c => this._renderer.addClass(this._element, c));\n        this._renderer.addClass(this._element, `animating`);\n        this._renderer.addClass(this._element, transition.directionClass);\n\n        // Set the Semantic UI styles for transitioning.\n        this._renderer.setStyle(this._element, `animationDuration`, `${transition.duration}ms`);\n        this._renderer.setStyle(this._element, `display`, this._display);\n\n        if (transition.direction === TransitionDirection.In) {\n            // Unset hidden if we are transitioning in.\n            this._isHidden = false;\n        }\n\n        // Wait the length of the animation before calling the complete callback.\n        this._animationTimeout = window.setTimeout(() => this.finishTransition(transition), transition.duration);\n    }\n\n    // Called when a transition has completed.\n    private finishTransition(transition:Transition):void {\n        // Unset the Semantic UI classes & styles for transitioning.\n        transition.classes.forEach(c => this._renderer.removeClass(this._element, c));\n        this._renderer.removeClass(this._element, `animating`);\n        this._renderer.removeClass(this._element, transition.directionClass);\n\n        this._renderer.removeStyle(this._element, `animationDuration`);\n        this._renderer.removeStyle(this._element, `display`);\n\n        if (transition.direction === TransitionDirection.In) {\n            // If we have just animated in, we are now visible.\n            this._isVisible = true;\n        } else if (transition.direction === TransitionDirection.Out) {\n            // If we have transitioned out, we should be invisible and hidden.\n            this._isVisible = false;\n            this._isHidden = true;\n        }\n\n        if (transition.onComplete) {\n            // Call the user-defined transition callback.\n            transition.onComplete();\n        }\n\n        // Delete the transition from the queue.\n        this._queue.shift();\n        this._isAnimating = false;\n\n        this._changeDetector.markForCheck();\n\n        // Immediately attempt to perform another transition.\n        this.performTransition();\n    }\n\n    // Stops the current transition, leaves the rest of the queue intact.\n    public stop(transition:Transition = this._queueFirst):void {\n        if (!transition || !this._isAnimating) {\n            return;\n        }\n\n        clearTimeout(this._animationTimeout);\n        this.finishTransition(transition);\n    }\n\n    // Stops the current transition, and empties the queue.\n    public stopAll():void {\n        this.clearQueue();\n        this.stop();\n    }\n\n    // Empties the transition queue but carries on with the current transition.\n    public clearQueue():void {\n        if (this.isAnimating) {\n            this._queue = [this._queueFirst];\n            return;\n        }\n        this._queue = [];\n    }\n}\n","import { Renderer2, ElementRef, Directive, Input, HostBinding, ChangeDetectorRef } from \"@angular/core\";\nimport { TransitionController } from \"../classes/transition-controller\";\n\n@Directive({\n    selector: \"[suiTransition]\",\n    exportAs: \"transition\"\n})\nexport class SuiTransition {\n    // Each transition must have a controller associated that dispatches the transitions.\n    private _controller:TransitionController;\n\n    @Input()\n    public set suiTransition(tC:TransitionController) {\n        // Set the transition controller (e.g. '<div [suiTransition]=\"transitionController\"></div>').\n        this.setTransitionController(tC);\n    }\n\n    @HostBinding(\"class.transition\")\n    public transitionClass:boolean = true;\n\n    @HostBinding(\"class.visible\")\n    public get isVisible():boolean {\n        if (this._controller) {\n            return this._controller.isVisible;\n        }\n        return false;\n    }\n\n    @HostBinding(\"class.hidden\")\n    public get isHidden():boolean {\n        if (this._controller) {\n            return this._controller.isHidden;\n        }\n        return false;\n    }\n\n    constructor(protected _renderer:Renderer2, protected _element:ElementRef, private _changeDetector:ChangeDetectorRef) {}\n\n    // Initialises the controller with the injected renderer and elementRef.\n    public setTransitionController(transitionController:TransitionController):void {\n        this._controller = transitionController;\n        this._controller.registerRenderer(this._renderer);\n        this._controller.registerElement(this._element.nativeElement);\n        this._controller.registerChangeDetector(this._changeDetector);\n    }\n}\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { SuiTransition } from \"./directives/transition\";\n\n@NgModule({\n    imports: [CommonModule],\n    declarations: [\n        SuiTransition\n    ],\n    exports: [\n        SuiTransition\n    ],\n    providers: []\n})\nexport class SuiTransitionModule {}\n","import { Component, Input, Output, EventEmitter } from \"@angular/core\";\nimport { TransitionController, Transition, TransitionDirection } from \"../../../modules/transition/internal\";\n\nexport interface IMessage {\n    dismiss():void;\n}\n\n@Component({\n    selector: \"sui-message\",\n    template: `\n<div class=\"ui message {{ class }}\" *ngIf=\"!isDismissed\" [suiTransition]=\"transitionController\">\n    <i class=\"close icon\" *ngIf=\"isDismissable\" (click)=\"dismiss()\"></i>\n    <ng-content></ng-content>\n</div>\n`,\n    styles: [`\n/* Fix for CSS Bug */\n.ui.icon.visible.message {\n    display: flex !important;\n}\n`]\n})\nexport class SuiMessage implements IMessage {\n    @Input()\n    public isDismissable:boolean;\n\n    @Output(\"dismiss\")\n    public onDismiss:EventEmitter<SuiMessage>;\n\n    public isDismissed:boolean;\n\n    public transitionController:TransitionController;\n\n    @Input()\n    public transition:string;\n\n    @Input()\n    public transitionDuration:number;\n\n    @Input(\"class\")\n    public class:string;\n\n    constructor() {\n        this.isDismissable = true;\n        this.onDismiss = new EventEmitter<SuiMessage>();\n\n        this.isDismissed = false;\n\n        this.transitionController = new TransitionController();\n        this.transition = \"fade\";\n        this.transitionDuration = 300;\n\n        this.class = \"\";\n    }\n\n    public dismiss():void {\n        this.transitionController.animate(new Transition(this.transition, this.transitionDuration, TransitionDirection.Out, () => {\n            this.isDismissed = true;\n            this.onDismiss.emit(this);\n        }));\n    }\n}\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { SuiTransitionModule } from \"../../modules/transition/internal\";\nimport { SuiMessage } from \"./components/message\";\n\n@NgModule({\n    imports: [\n        CommonModule,\n        SuiTransitionModule\n    ],\n    declarations: [\n        SuiMessage\n    ],\n    exports: [\n        SuiMessage\n    ]\n})\nexport class SuiMessageModule {}\n","import { Component, Input, Output, OnChanges, EventEmitter, HostBinding } from \"@angular/core\";\n\n@Component({\n    selector: \"sui-pagination\",\n    template: `\n<a *ngIf=\"hasBoundaryLinks\" class=\"item\"  (click)=\"setPage(1)\" [class.disabled]=\"page===1\">\n    <span><i class=\"angle double left icon\"></i></span>\n</a>\n<a *ngIf=\"hasNavigationLinks\" class=\"item\" (click)=\"setPage(page-1)\" [class.disabled]=\"!hasPrevious()\">\n    <span><i class=\"angle left icon\"></i></span>\n</a>\n<ng-container *ngIf=\"hasEllipses\">\n    <a class=\"item\" (click)=\"setPage(1)\" *ngIf=\"pages[0] !== 1\">\n        <span>1</span>\n    </a>\n    <a class=\"disabled item\" *ngIf=\"pages[0] > 2\">...</a>\n</ng-container>\n<a *ngFor=\"let p of pages\" class=\"item\" [class.active]=\"p===page\" (click)=\"setPage(p)\">\n    {{ p }}\n</a>\n<ng-container *ngIf=\"hasEllipses\">\n    <a class=\"disabled item\" *ngIf=\"pages[pages.length - 1] < pageCount - 1\">...</a>\n    <a class=\"item\" (click)=\"setPage(pageCount)\" *ngIf=\"pages[pages.length - 1] !== pageCount\">\n        <span>{{ pageCount }}</span>\n    </a>\n</ng-container>\n<a *ngIf=\"hasNavigationLinks\" class=\"item\" (click)=\"setPage(page+1)\" [class.disabled]=\"!hasNext()\">\n    <span><i class=\"angle right icon\"></i></span>\n</a>\n<a *ngIf=\"hasBoundaryLinks\" class=\"item\"  (click)=\"setPage(pageCount)\" [class.disabled]=\"page===pageCount\">\n    <span><i class=\"angle double right icon\"></i></span>\n</a>\n`,\n    styles: [`\n:host .item {\n    transition: none;\n}\n`]\n})\nexport class SuiPagination implements OnChanges {\n\n    @HostBinding(\"class.ui\")\n    @HostBinding(\"class.pagination\")\n    @HostBinding(\"class.menu\")\n    public readonly hasClasses:boolean;\n\n    // Public members\n    public pageCount:number;\n\n    @Output()\n    public pageChange:EventEmitter<number>;\n\n    // Private members\n    private _maxSize?:number;\n    private _collectionSize:number;\n    private _page:number;\n    private _pages:number[];\n    private _hasNavigationLinks:boolean;\n\n    @Input()\n    public get maxSize():number|undefined {\n        return this._maxSize;\n    }\n\n    public set maxSize(value:number | undefined) {\n        this._maxSize = (value != undefined) ? Math.max(value, 1) : undefined;\n    }\n\n    @Input()\n    public pageSize:number;\n\n    @Input()\n    public get collectionSize():number {\n        return this._collectionSize;\n    }\n\n    public set collectionSize(value:number) {\n        this._collectionSize = Math.max(value, 0);\n        this.pageCount = Math.max(1, Math.ceil(this._collectionSize / this.pageSize));\n    }\n\n    @Input()\n    public get hasNavigationLinks():boolean {\n        const maxSize = this._maxSize || this.pageCount;\n        return this._hasNavigationLinks || maxSize < this.pageCount;\n    }\n\n    public set hasNavigationLinks(value:boolean) {\n        this._hasNavigationLinks = value;\n    }\n\n    @Input()\n    public hasBoundaryLinks:boolean;\n\n    @Input()\n    public canRotate:boolean;\n\n    @Input()\n    public hasEllipses:boolean;\n\n    @Input()\n    public get page():number {\n        return this._page;\n    }\n\n    public set page(value:number) {\n        this.setPage(value);\n    }\n\n    public get pages():number[] {\n        return this._pages;\n    }\n\n    constructor() {\n        this.hasClasses = true;\n        this.pageChange = new EventEmitter<number>();\n\n        this.pageSize = 10;\n        this._page = 1;\n        this._pages = [];\n        this.pageCount = 1;\n        this.hasNavigationLinks = true;\n        this.hasBoundaryLinks = false;\n        this.canRotate = false;\n        this.hasEllipses = true;\n    }\n\n    // Public methods\n    public hasPrevious():boolean {\n        return this.page > 1;\n    }\n\n    public hasNext():boolean {\n        return this.page < this.pageCount;\n    }\n\n    public setPage(newPage:number):void {\n        const value:number = (Number.isInteger(newPage)) ? Math.min(Math.max(newPage, 1), this.pageCount) : 1;\n        if (value !== this._page) {\n            this._page = value;\n            this.pageChange.emit(this._page);\n        }\n    }\n\n    // Lifecycle hooks\n    public ngOnChanges():void {\n        this.updatePages();\n    }\n\n    // Private methods\n    private updatePages():void {\n        this.pageCount = Math.max(1, Math.ceil(this._collectionSize / this.pageSize));\n\n        const [start, end] = this.applyPagination();\n\n        this._pages = Array<number>(end - start)\n            .fill(start + 1)\n            .map((s, i) => s + i);\n    }\n\n    private applyPagination():[number, number] {\n        const maxSize = (this.maxSize != undefined) ? Math.min(this.maxSize, this.pageCount) : this.pageCount;\n\n        const page = Math.ceil(this.page / maxSize) - 1;\n        let start = 0;\n        let end = this.pageCount;\n\n        if (this.canRotate) {\n            const leftOffset = Math.floor(maxSize / 2);\n            const rightOffset = maxSize % 2 === 0 ? leftOffset - 1 : leftOffset;\n\n            if (this.page <= leftOffset) {\n                end = maxSize;\n            } else if (this.pageCount - this.page < leftOffset) {\n                start = this.pageCount - maxSize;\n            } else {\n                start = this.page - leftOffset - 1;\n                end = this.page + rightOffset;\n            }\n        } else {\n            start = page * maxSize;\n            end = start + maxSize;\n        }\n\n        return [start, Math.min(end, this.pageCount)];\n    }\n}\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\n\nimport { SuiPagination } from \"./components/pagination\";\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [SuiPagination],\n    declarations: [SuiPagination],\n    providers: []\n})\nexport class SuiPaginationModule { }\n","import { Component, Input, Output, EventEmitter, ChangeDetectorRef } from \"@angular/core\";\nimport { SuiAccordionService } from \"../services/accordion.service\";\nimport { TransitionController, Transition } from \"../../transition/internal\";\n\n@Component({\n    selector: \"sui-accordion-panel\",\n    exportAs: \"suiAccordionPanel\",\n    template: `\n<!-- Title -->\n<div class=\"title\" [class.active]=\"isOpen\" (click)=\"toggle()\" >\n    <ng-content select=\"[title]\"></ng-content>\n</div>\n<!-- Content -->\n<div [suiCollapse]=\"!isOpen\" [collapseDuration]=\"transitionDuration\">\n    <div class=\"content\" [class.active]=\"isOpen\" [suiTransition]=\"transitionController\">\n        <ng-content select=\"[content]\"></ng-content>\n    </div>\n</div>\n`,\n    styles: [`\n/* Manual style as Semantic UI relies on > selector */\n.content {\n    padding: .5em 0 1em;\n}\n\n/* Another > selector fix */\n:host:first-child .title {\n    border-top: none;\n}\n`]\n})\nexport class SuiAccordionPanel {\n    private _service:SuiAccordionService;\n\n    public transitionController:TransitionController;\n\n    public set service(service:SuiAccordionService) {\n        this._service = service;\n        this._changeDetector.detectChanges();\n    }\n\n    @Input()\n    public isDisabled:boolean;\n\n    private _isOpen:boolean;\n\n    @Input()\n    public get isOpen():boolean {\n        return this._isOpen;\n    }\n\n    public set isOpen(value:boolean) {\n        // Convert to boolean (fixes false != undefined)\n        const isOpen = !!value;\n\n        if (isOpen !== this.isOpen) {\n            // Only update if the value has changed.\n            this._isOpen = isOpen;\n\n            if (isOpen && this._service) {\n                // If we are opening this panel, we must close the other ones.\n                this._service.closeOtherPanels(this);\n            }\n            this.isOpenChange.emit(this.isOpen);\n\n            // Cancel all current animations, and fade the contents. The direction is automatic.\n            this.transitionController.stopAll();\n            this.transitionController.animate(new Transition(this.transition, this.transitionDuration));\n        }\n    }\n\n    public get transition():string {\n        if (this._service) {\n            return this._service.transition;\n        }\n\n        return \"fade\";\n    }\n\n    public get transitionDuration():number {\n        if (this._service) {\n            // Return the service defined transition duration.\n            return this._service.transitionDuration;\n        }\n        // Revert to instantaneous if the service is not yet loaded.\n        return 0;\n    }\n\n    @Output()\n    public isOpenChange:EventEmitter<boolean>;\n\n    constructor(private _changeDetector:ChangeDetectorRef) {\n        this.transitionController = new TransitionController(false);\n\n        this._isOpen = false;\n        this.isOpenChange = new EventEmitter<boolean>(false);\n    }\n\n    public toggle():void {\n        if (!this.isDisabled) {\n            this.isOpen = !this.isOpen;\n        }\n    }\n}\n","import { SuiAccordionPanel } from \"../components/accordion-panel\";\n\nexport class SuiAccordionService {\n    public closeOthers:boolean;\n\n    public transition:string;\n    public transitionDuration:number;\n\n    public panels:SuiAccordionPanel[];\n\n    constructor() {\n        this.closeOthers = true;\n\n        this.transition = \"fade\";\n        this.transitionDuration = 350;\n\n        this.panels = [];\n    }\n\n    public addPanel(panel:SuiAccordionPanel):void {\n        panel.service = this;\n        this.panels.push(panel);\n    }\n\n    public closeOtherPanels(panel:SuiAccordionPanel):void {\n        if (!this.closeOthers) {\n            return;\n        }\n\n        this.panels.forEach(p => {\n            if (p !== panel) {\n                p.isOpen = false;\n            }\n        });\n    }\n}\n","import { Component, Input, HostBinding, ContentChildren, QueryList, AfterContentInit } from \"@angular/core\";\nimport { SuiAccordionPanel } from \"./accordion-panel\";\nimport { SuiAccordionService } from \"../services/accordion.service\";\n\n@Component({\n    selector: \"sui-accordion\",\n    template: `\n<ng-content></ng-content>\n`,\n    styles: [`\n/* Fix for general styling issues */\n:host {\n    display: block;\n}\n\n/* Fix for styled border issue */\n:host.styled sui-accordion-panel:first-child .title {\n    border-top: none\n}\n`]\n})\nexport class SuiAccordion implements AfterContentInit {\n    @HostBinding(\"class.ui\")\n    @HostBinding(\"class.accordion\")\n    public readonly hasClasses:boolean;\n\n    @Input()\n    public get closeOthers():boolean {\n        return this._service.closeOthers;\n    }\n\n    public set closeOthers(value:boolean) {\n        this._service.closeOthers = value;\n    }\n\n    @Input()\n    public set transition(transition:string) {\n        this._service.transition = transition;\n    }\n\n    @Input()\n    public set transitionDuration(duration:number) {\n        this._service.transitionDuration = duration;\n    }\n\n    protected _service:SuiAccordionService;\n\n    @ContentChildren(SuiAccordionPanel, {descendants: true})\n    protected _panels:QueryList<SuiAccordionPanel>;\n\n    constructor() {\n        // Accordion service is unique to each set of panels.\n        this._service = new SuiAccordionService();\n\n        this.hasClasses = true;\n    }\n\n    public ngAfterContentInit():void {\n        this.updatePanels();\n\n        // Reconnect panels after they have updated.\n        this._panels.changes.subscribe(() => this.updatePanels());\n    }\n\n    public updatePanels():void {\n        this._panels.forEach(p => this._service.addPanel(p));\n    }\n}\n","import { Directive, ElementRef, Input, HostBinding, Renderer2 } from \"@angular/core\";\n\n@Directive({\n    selector: \"[suiCollapse]\"\n})\nexport class SuiCollapse {\n    // Set when the collapse is open, and not animating.\n    @HostBinding(\"class.expanded\")\n    public get isExpanded():boolean {\n        return this._isExpanded;\n    }\n\n    private _isExpanded:boolean;\n\n    // Set when the collapse is closed, and not animating.\n    @HostBinding(\"class.collapsed\")\n    public get isCollapsed():boolean {\n        return !this.isExpanded && !this.isCollapsing;\n    }\n\n    // Set when the collapse is animating.\n    @HostBinding(\"class.collapsing\")\n    public get isCollapsing():boolean {\n        return this._isCollapsing;\n    }\n\n    private _isCollapsing:boolean;\n\n    // Flag that is initially true, to make the 1st animation instantaneous.\n    private _pristine:boolean;\n\n    @Input()\n    public get suiCollapse():boolean {\n        return this._isExpanded;\n    }\n\n    // Sets the state of the collapse, `true` is collapsed.\n    public set suiCollapse(value:boolean) {\n        if (value) {\n            this.hide();\n        } else {\n            this.show();\n        }\n    }\n\n    @Input()\n    public collapseDuration:number;\n\n    private get _animationDuration():number {\n        return this._pristine ? 0 : this.collapseDuration;\n    }\n\n    public constructor(private _element:ElementRef, private _renderer:Renderer2) {\n        this._pristine = true;\n\n        // Collapse animation duration is 350ms by default.\n        this.collapseDuration = 350;\n\n        this._isExpanded = false;\n        this._isCollapsing = false;\n    }\n\n    public hide():void {\n        this._isCollapsing = true;\n        this._isExpanded = false;\n\n        // Forcibly hide the overflow so that content is not visible past the boundaries of its container.\n        this._renderer.setStyle(this._element.nativeElement, \"overflow\", \"hidden\");\n\n        // Animate the host element from its scroll height to 0.\n        this.animate(this._element.nativeElement.scrollHeight, 0, false, () => {\n            this._isCollapsing = false;\n        });\n    }\n\n    public show():void {\n        this._isCollapsing = true;\n\n        // Animate the host element from its offset height to its scroll height.\n        this.animate(this._element.nativeElement.offsetHeight, this._element.nativeElement.scrollHeight, true, () => {\n            // Remove the overflow override to enable user styling once again.\n            this._renderer.removeStyle(this._element.nativeElement, \"overflow\");\n\n            this._isCollapsing = false;\n            this._isExpanded = true;\n        });\n    }\n\n    private animate(startHeight:number, endHeight:number, removeOnComplete:boolean = false, callback:() => void = () => {}):void {\n        const heightFrames = [\n            {\n                offset: 0,\n                height: `${startHeight}px`\n            },\n            {\n                offset: 1,\n                height: `${endHeight}px`\n            }\n        ];\n\n        if (removeOnComplete) {\n            heightFrames.push({\n                offset: 1,\n                height: `auto`\n            });\n        }\n\n        // Animate the collapse using the web animations API.\n        // Using directly because Renderer2 doesn't have invokeElementMethod method anymore.\n        this._element.nativeElement.animate(\n            heightFrames,\n            {\n                delay: 0,\n                // Disable animation on 1st collapse / expansion.\n                duration: this._animationDuration,\n                iterations: 1,\n                easing: \"ease\",\n                fill: \"both\"\n            }\n        );\n\n        if (this._pristine) {\n            // Remove pristine flag when first hit.\n            this._pristine = false;\n        }\n\n        setTimeout(() => callback(), this.collapseDuration);\n    }\n}\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { SuiCollapse } from \"./directives/collapse\";\n\n@NgModule({\n    imports: [\n        CommonModule\n    ],\n    declarations: [\n        SuiCollapse\n    ],\n    exports: [\n        SuiCollapse\n    ]\n})\nexport class SuiCollapseModule {}\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { SuiCollapseModule } from \"../collapse/internal\";\nimport { SuiTransitionModule } from \"../transition/internal\";\nimport { SuiAccordion } from \"./components/accordion\";\nimport { SuiAccordionPanel } from \"./components/accordion-panel\";\n\n@NgModule({\n    imports: [\n        CommonModule,\n        SuiCollapseModule,\n        SuiTransitionModule\n    ],\n    declarations: [\n        SuiAccordion,\n        SuiAccordionPanel\n    ],\n    exports: [\n        SuiAccordion,\n        SuiAccordionPanel\n    ],\n    providers: []\n})\nexport class SuiAccordionModule {}\n","import { NG_VALIDATORS, AbstractControl, ValidationErrors, Validator } from \"@angular/forms\";\nimport { forwardRef, InjectionToken, Type } from \"@angular/core\";\n\nexport interface ICustomValidatorHost {\n    validate(c:AbstractControl):ValidationErrors | null;\n}\n\nexport class CustomValidator<T extends ICustomValidatorHost> implements Validator {\n    constructor(private _host:T) {}\n\n    public onValidatorChange = () => {};\n\n    public validate(c:AbstractControl):ValidationErrors | null {\n        return this._host.validate(c);\n    }\n\n    public registerOnValidatorChange(fn:() => void):void {\n        this.onValidatorChange = fn;\n    }\n}\n\nexport interface IValidationProvider {\n    provide:InjectionToken<(Function | Validator)[]>;\n    useExisting:Type<any>;\n    multi:boolean;\n}\n\nexport function customValidatorFactory(type:Function):IValidationProvider {\n    return {\n        provide: NG_VALIDATORS,\n        useExisting: forwardRef(() => type),\n        multi: true\n    };\n}\n","import { NG_VALUE_ACCESSOR, ControlValueAccessor } from \"@angular/forms\";\nimport { forwardRef, InjectionToken, Type } from \"@angular/core\";\n\nexport interface ICustomValueAccessorHost<T> {\n    writeValue(value:T):void;\n}\n\nexport class CustomValueAccessor<U, T extends ICustomValueAccessorHost<U>> implements ControlValueAccessor {\n    constructor(private _host:T) {}\n\n    public onChange = (e) => {};\n    public onTouched = () => {};\n\n    public writeValue(value:U):void {\n        this._host.writeValue(value);\n    }\n\n    public registerOnChange(fn:(e) => void):void {\n        this.onChange = fn;\n    }\n\n    public registerOnTouched(fn:() => void):void {\n        this.onTouched = fn;\n    }\n}\n\nexport interface IValueAccessorProvider {\n    provide:InjectionToken<ControlValueAccessor>;\n    useExisting:Type<any>;\n    multi:boolean;\n}\n\nexport function customValueAccessorFactory(type:Function):IValueAccessorProvider {\n    return {\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: forwardRef(() => type),\n        multi: true\n    };\n}\n","// Keyboard keycodes.\nexport enum KeyCode {\n    Left = 37,\n    Up = 38,\n    Right = 39,\n    Down = 40,\n\n    Escape = 27,\n    Enter = 13,\n\n    Space = 32,\n    Backspace = 8\n}\n\ninterface IRecursiveObject { [name:string]:IRecursiveObject; }\n\nexport interface ITemplateRefContext<T> { $implicit:T; }\n\nexport interface IAugmentedElement extends Element {\n    closest(selector:string):IAugmentedElement;\n}\n\nexport class HandledEvent {\n    public eventHandled:boolean;\n}\n\nexport interface IDynamicClasses {\n    [name:string]:true;\n}\n\nexport const Util = {\n    Array: {\n        range(n:number, offset:number = 0):number[] {\n            return Array(n).fill(0).map((z, i) => i + offset);\n        },\n        group<T>(items:T[], groupLength:number):T[][] {\n            const mutable = items.slice(0);\n\n            const groups:T[][] = [];\n            while (mutable.length > 0) {\n                groups.push(mutable.splice(0, groupLength));\n            }\n            return groups;\n        },\n        groupBy<T>(items:T[], field:keyof T):{ [name:string]:T[] } {\n            return items.reduce<{ [name:string]:T[] }>(\n                (groups, i) => {\n                    const fieldValue = i[field].toString();\n                    groups[fieldValue] = groups[fieldValue] || [];\n                    groups[fieldValue].push(i);\n                    return groups;\n                },\n                Object());\n        },\n        flatten<T>(items:T[][]):T[] {\n            return items.reduce((is, i) => is.concat(i), []);\n        }\n    },\n\n    String: {\n        padLeft(str:string, length:number, padding:string):string {\n            let s = str;\n            while (s.length < length) {\n                s = padding + s;\n            }\n            return s;\n        }\n    },\n\n    DOM: {\n        parseBooleanAttribute(attributeValue:boolean):boolean {\n            let value = attributeValue;\n            if (typeof attributeValue === \"string\") {\n                value = true;\n            }\n\n            return value;\n        }\n    },\n\n    Object: {\n        readValue<T, U>(object:T, path?:string):U {\n            if (!path) {\n                return object as any as U;\n            }\n\n            let recursed = object as any as IRecursiveObject;\n\n            for (let i = 0, p = path.split(\".\"), len = p.length; i < len; i++) {\n                recursed = (recursed as any as IRecursiveObject)[p[i]];\n            }\n\n            return recursed as any as U;\n        }\n    },\n\n    Math: {\n        round(r:number, n:number):number {\n            return Math.round(r / n) * n;\n        },\n        roundUp(r:number, n:number):number {\n            return Math.ceil(r / n) * n;\n        },\n        roundDown(r:number, n:number):number {\n            return Math.floor(r / n) * n;\n        },\n        mod(r:number, n:number):number {\n            const rem = r % n;\n            if (rem < 0) {\n                return rem + n;\n            }\n            return rem;\n        }\n    }\n};\n","import { Util } from \"./util\";\n\nexport enum DatePrecision {\n    Decade = 0,\n    Year = 1,\n    Month = 2,\n    Date = 3,\n    Hour = 4,\n    Minute = 5\n}\n\nexport const DateUtil = {\n    startOf(precision:DatePrecision, date:Date, resetAll:boolean = false):Date {\n        switch (precision) {\n            case DatePrecision.Decade:\n                const start = Math.floor(date.getFullYear() / 10) * 10 + 1;\n                date.setFullYear(start);\n                if (!resetAll) {\n                    break;\n                }\n                // falls through\n            case DatePrecision.Year:\n                date.setMonth(0);\n                if (!resetAll) {\n                    break;\n                }\n                // falls through\n            case DatePrecision.Month:\n                date.setDate(1);\n                if (!resetAll) {\n                    break;\n                }\n                // falls through\n            case DatePrecision.Date:\n                date.setHours(0);\n                if (!resetAll) {\n                    break;\n                }\n                // falls through\n            case DatePrecision.Hour:\n                date.setMinutes(0);\n                if (!resetAll) {\n                    break;\n                }\n                // falls through\n            case DatePrecision.Minute:\n                date.setSeconds(0, 0);\n        }\n\n        return date;\n    },\n\n    endOf(precision:DatePrecision, date:Date):Date {\n        switch (precision) {\n            case DatePrecision.Year:\n                date.setMonth(12, 0);\n                // falls through\n            case DatePrecision.Month:\n                date.setMonth(date.getMonth() + 1, 0);\n                // falls through\n            case DatePrecision.Date:\n                date.setHours(23, 59, 59, 999);\n                break;\n            case DatePrecision.Hour:\n                date.setMinutes(59, 59, 999);\n                break;\n            case DatePrecision.Minute:\n                date.setSeconds(59, 999);\n                break;\n        }\n\n        return date;\n    },\n\n    equal(precision:DatePrecision, a:Date, b:Date):boolean {\n        let equal = true;\n        switch (precision) {\n            case DatePrecision.Minute:\n                equal = equal && a.getMinutes() === b.getMinutes();\n                // falls through\n            case DatePrecision.Hour:\n                equal = equal && a.getHours() === b.getHours();\n                // falls through\n            case DatePrecision.Date:\n                equal = equal && a.getDate() === b.getDate();\n                // falls through\n            case DatePrecision.Month:\n                equal = equal && a.getMonth() === b.getMonth();\n                // falls through\n            case DatePrecision.Year:\n                equal = equal && a.getFullYear() === b.getFullYear();\n        }\n        return equal;\n    },\n\n    next(precision:DatePrecision, date:Date):Date {\n        return DateUtil.add(precision, date, 1);\n    },\n\n    add(precision:DatePrecision, date:Date, i:number):Date {\n        const year = date.getFullYear();\n        const month = date.getMonth();\n        const day = date.getDate();\n\n        switch (precision) {\n            case DatePrecision.Decade:\n                date.setFullYear(year + i * 10);\n                if (date.getMonth() !== month) {\n                    date.setDate(0);\n                }\n                break;\n            case DatePrecision.Year:\n                date.setFullYear(year + i);\n                if (date.getMonth() !== month) {\n                    date.setDate(0);\n                }\n                break;\n            case DatePrecision.Month:\n                date.setMonth(month + i);\n                if (date.getMonth() !== Util.Math.mod(month + i, 12)) {\n                    date.setDate(0);\n                }\n                break;\n            case DatePrecision.Date:\n                date.setDate(day + i);\n                break;\n            case DatePrecision.Hour:\n                date.setHours(date.getHours() + i);\n                break;\n            case DatePrecision.Minute:\n                date.setMinutes(date.getMinutes() + i);\n                break;\n        }\n        return date;\n    },\n\n    previous(precision:DatePrecision, date:Date):Date {\n        const year = date.getFullYear();\n        const month = date.getMonth();\n        const day = date.getDate();\n\n        switch (precision) {\n            case DatePrecision.Decade:\n                date.setFullYear(year - 10);\n                if (date.getMonth() !== month) {\n                    date.setDate(0);\n                }\n                break;\n            case DatePrecision.Year:\n                date.setFullYear(year - 1);\n                if (date.getMonth() !== month) {\n                    date.setDate(0);\n                }\n                break;\n            case DatePrecision.Month:\n                date.setMonth(month - 1);\n                if (date.getMonth() !== Util.Math.mod(month - 1, 12)) {\n                    date.setDate(0);\n                }\n                break;\n            case DatePrecision.Date:\n                date.setDate(day - 1);\n                break;\n            case DatePrecision.Hour:\n                const hours = date.getHours();\n                date.setHours(hours - 1);\n                if (date.getHours() !== Util.Math.mod(hours - 1, 24)) {\n                    date.setHours(hours - 2);\n                }\n                break;\n            case DatePrecision.Minute:\n                const minutes = date.getMinutes();\n                date.setMinutes(minutes - 1);\n        }\n        return date;\n    },\n\n    clone(date:Date):Date {\n        return new Date(date.getTime());\n    }\n};\n","import {\n    Injectable, ApplicationRef, ComponentFactoryResolver, Injector, ComponentRef,\n    ReflectiveInjector, Provider, Type, ViewContainerRef, TemplateRef\n} from \"@angular/core\";\n\nexport interface IImplicitContext<T> {\n    $implicit?:T;\n}\n\n@Injectable()\nexport class SuiComponentFactory {\n    constructor(private _applicationRef:ApplicationRef,\n                private _componentFactoryResolver:ComponentFactoryResolver,\n                private _injector:Injector) {}\n\n    public createComponent<T>(type:Type<T>, providers:Provider[] = []):ComponentRef<T> {\n        // Resolve a factory for creating components of type `type`.\n        const factory = this._componentFactoryResolver.resolveComponentFactory(type as Type<T>);\n\n        // Resolve and create an injector with the specified providers.\n        const injector = ReflectiveInjector.resolveAndCreate(\n            providers,\n            this._injector\n        );\n\n        // Create a component using the previously resolved factory & injector.\n        const componentRef = factory.create(injector);\n\n        return componentRef;\n    }\n\n    public createView<T, U extends IImplicitContext<T>>(viewContainer:ViewContainerRef, template:TemplateRef<U>, context:U):void {\n        viewContainer.createEmbeddedView<U>(template, context);\n    }\n\n    // Inserts the component into the specified view container.\n    public attachToView<T>(componentRef:ComponentRef<T>, viewContainer:ViewContainerRef):void {\n        viewContainer.insert(componentRef.hostView, 0);\n    }\n\n    // Inserts the component in the root application node.\n    public attachToApplication<T>(componentRef:ComponentRef<T>):void {\n        this._applicationRef.attachView(componentRef.hostView);\n    }\n\n    // Detaches the component from the root application node.\n    public detachFromApplication<T>(componentRef:ComponentRef<T>):void {\n        this._applicationRef.detachView(componentRef.hostView);\n    }\n\n    // Moves the component to the specified DOM element.\n    public moveToElement<T>(componentRef:ComponentRef<T>, element:Element):void {\n        element.appendChild(componentRef.location.nativeElement);\n    }\n\n    // Moves the component to the document body.\n    public moveToDocumentBody<T>(componentRef:ComponentRef<T>):void {\n        this.moveToElement(componentRef, document.querySelector(\"body\")!);\n    }\n\n    public detachFromDocument<T>(componentRef:ComponentRef<T>):void {\n        const element = componentRef.location.nativeElement as Element;\n        // We can't use `element.remove()` due to lack of IE11 support.\n        if (element.parentNode) {\n            element.parentNode.removeChild(element);\n        }\n    }\n}\n","import { ElementRef } from \"@angular/core\";\nimport Popper, { Modifiers, PopperOptions, Placement, Data } from \"popper.js\";\n\ntype PopperModifiers = Modifiers & {\n    computeStyle?:{\n        gpuAcceleration:boolean;\n    };\n};\ntype PopperInstance = Popper & {\n    options:PopperOptions & {\n        modifiers:PopperModifiers;\n    };\n};\n\nexport type PositioningPlacement = \"auto\" |\n                                   \"top left\" | \"top\" | \"top right\" |\n                                   \"bottom left\" | \"bottom\" | \"bottom right\" |\n                                   \"left top\" | \"left\" | \"left bottom\" |\n                                   \"right top\" | \"right\" | \"right bottom\";\n\nexport const PositioningPlacement = {\n    Auto: \"auto\" as PositioningPlacement,\n    TopLeft: \"top left\" as PositioningPlacement,\n    Top: \"top\" as PositioningPlacement,\n    TopRight: \"top right\" as PositioningPlacement,\n    LeftTop: \"left top\" as PositioningPlacement,\n    Left: \"left\" as PositioningPlacement,\n    LeftBottom: \"left bottom\" as PositioningPlacement,\n    BottomLeft: \"bottom left\" as PositioningPlacement,\n    Bottom: \"bottom\" as PositioningPlacement,\n    BottomRight: \"bottom right\" as PositioningPlacement,\n    RightTop: \"right top\" as PositioningPlacement,\n    Right: \"right\" as PositioningPlacement,\n    RightBottom: \"right bottom\" as PositioningPlacement\n};\n\nexport interface IPositionBoundingBox {\n    width:number;\n    height:number;\n    top:number;\n    left:number;\n    bottom:number;\n    right:number;\n}\n\nfunction placementToPopper(placement:PositioningPlacement):Placement {\n    if (!placement || placement === PositioningPlacement.Auto) {\n        return \"auto\";\n    }\n\n    // All placements of the format: `direction alignment`, e.g. `top left`.\n    const [direction, alignment] = placement.split(\" \");\n\n    // Direction alone covers case of just `top`, `left`, `bottom`, `right`.\n    const chosenPlacement = [direction];\n\n    // Add `start` / `end` to placement, depending on alignment direction.\n    switch (alignment) {\n        case \"top\":\n        case \"left\":\n            chosenPlacement.push(\"start\");\n            break;\n        case \"bottom\":\n        case \"right\":\n            chosenPlacement.push(\"end\");\n            break;\n    }\n\n    // Join with hyphen to create Popper compatible placement.\n    return chosenPlacement.join(\"-\") as Placement;\n}\n\nfunction popperToPlacement(popper:string):PositioningPlacement {\n    if (!popper || popper === \"auto\") {\n        return \"auto\";\n    }\n\n    const [direction, alignment] = popper.split(\"-\");\n\n    const chosenPlacement = [direction];\n\n    switch (direction) {\n        case \"top\":\n        case \"bottom\":\n            switch (alignment) {\n                case \"start\":\n                    chosenPlacement.push(\"left\");\n                    break;\n                case \"end\":\n                    chosenPlacement.push(\"right\");\n                    break;\n            }\n            break;\n        case \"left\":\n        case \"right\":\n            switch (alignment) {\n                case \"start\":\n                    chosenPlacement.push(\"top\");\n                    break;\n                case \"end\":\n                    chosenPlacement.push(\"bottom\");\n                    break;\n            }\n            break;\n    }\n\n    return chosenPlacement.join(\" \") as PositioningPlacement;\n}\n\nexport class PositioningService {\n    public readonly anchor:ElementRef;\n    public readonly subject:ElementRef;\n\n    private _popper:PopperInstance;\n    private _popperState:Data;\n    private _placement:PositioningPlacement;\n    private _hasArrow:boolean;\n    private _arrowSelector:string | undefined;\n\n    public get placement():PositioningPlacement {\n        return this._placement;\n    }\n\n    public set placement(placement:PositioningPlacement) {\n        this._placement = placement;\n        if (this._popper) {\n            this._popper.options.placement = placementToPopper(placement);\n        }\n    }\n\n    public set hasArrow(hasArrow:boolean) {\n        this._hasArrow = hasArrow;\n    }\n\n    public get actualPlacement():PositioningPlacement {\n        if (!this._popperState) {\n            return PositioningPlacement.Auto;\n        }\n\n        return popperToPlacement(this._popperState.placement);\n    }\n\n    public get state():Data {\n        return this._popperState;\n    }\n\n    constructor(anchor:ElementRef, subject:ElementRef, placement:PositioningPlacement, arrowSelector?:string) {\n        this.anchor = anchor;\n        this.subject = subject;\n        this._placement = placement;\n        this._arrowSelector = arrowSelector;\n        this.init();\n    }\n\n    public init():void {\n        const modifiers:PopperModifiers = {\n            computeStyle: {\n                gpuAcceleration: false\n            },\n            preventOverflow: {\n                escapeWithReference: true,\n                boundariesElement: document.body\n            },\n            arrow: {\n                element: this._arrowSelector\n            },\n            offset: {\n                fn: (data:Popper.Data) => {\n                    if (this._hasArrow) {\n                        const offsets = this.calculateOffsets();\n                        data.offsets.popper.left += offsets.left;\n                        data.offsets.popper.top += offsets.top;\n                    }\n                    return data;\n                }\n            }\n        };\n\n        if (!this._arrowSelector) {\n            delete modifiers.arrow;\n        }\n\n        this._popper = new Popper(\n            this.anchor.nativeElement,\n            this.subject.nativeElement,\n            {\n                placement: placementToPopper(this._placement),\n                modifiers,\n                onCreate: initial => this._popperState = initial,\n                onUpdate: update => this._popperState = update\n            }) as PopperInstance;\n    }\n\n    public update():void {\n        this._popper.update();\n    }\n\n    public destroy():void {\n        this._popper.destroy();\n    }\n\n    private calculateOffsets():Popper.Offset {\n        let left = 0; let top = 0;\n\n        // To support correct positioning for all popup sizes we should calculate offset using em\n        const fontSize = parseFloat(window.getComputedStyle(this.subject.nativeElement).getPropertyValue(\"font-size\"));\n        // The Semantic UI popup arrow width and height are 0.71428571em and the margin from the popup edge is 1em\n        const arrowCenter = (0.71428571 / 2 + 1) * fontSize;\n\n        if (this.anchor.nativeElement.offsetWidth <= arrowCenter * 2) {\n            const anchorCenterWidth = this.anchor.nativeElement.offsetWidth / 2;\n            if (this._placement === PositioningPlacement.TopLeft || this._placement === PositioningPlacement.BottomLeft) {\n                left = anchorCenterWidth - arrowCenter;\n            }\n            if (this._placement === PositioningPlacement.TopRight || this._placement === PositioningPlacement.BottomRight) {\n                left = arrowCenter - anchorCenterWidth;\n            }\n        }\n\n        if (this.anchor.nativeElement.offsetHeight <= arrowCenter * 2) {\n            const anchorCenterHeight = this.anchor.nativeElement.offsetHeight / 2;\n            if (this._placement === PositioningPlacement.LeftTop || this._placement === PositioningPlacement.RightTop) {\n                top = anchorCenterHeight - arrowCenter;\n            }\n            if (this._placement === PositioningPlacement.LeftBottom || this._placement === PositioningPlacement.RightBottom) {\n                top = arrowCenter - anchorCenterHeight;\n            }\n        }\n        return { top, left, width: 0, height: 0 };\n    }\n\n}\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { SuiComponentFactory } from \"./services/component-factory.service\";\n\n@NgModule({\n    imports: [CommonModule],\n    providers: [\n        SuiComponentFactory\n    ]\n})\nexport class SuiUtilityModule {}\n","import {\n    Component, Directive, Input, Output, HostListener, HostBinding,\n    EventEmitter, ViewChild, ElementRef\n} from \"@angular/core\";\nimport { ICustomValueAccessorHost, customValueAccessorFactory, CustomValueAccessor } from \"../../../misc/util/internal\";\n\n@Component({\n    selector: \"sui-checkbox\",\n    exportAs: \"suiCheckbox\",\n    template: `\n<input class=\"hidden\"\n       type=\"checkbox\"\n       [attr.name]=\"name\"\n       [attr.checked]=\"checkedAttribute\"\n       [attr.disabled]=\"isDisabledAttribute\"\n       [(ngModel)]=\"isChecked\"\n       #checkbox>\n<label>\n    <ng-content></ng-content>\n</label>\n`\n})\nexport class SuiCheckbox implements ICustomValueAccessorHost<boolean> {\n    @HostBinding(\"class.ui\")\n    @HostBinding(\"class.checkbox\")\n    public readonly hasClasses:boolean;\n\n    @Input()\n    public name:string;\n\n    @HostBinding(\"class.checked\")\n    public isChecked:boolean;\n\n    @Output(\"checkChange\")\n    public onCheckChange:EventEmitter<boolean>;\n\n    @Output(\"touched\")\n    public onTouched:EventEmitter<void>;\n\n    @Input()\n    public isDisabled:boolean;\n\n    @HostBinding(\"class.read-only\")\n    @Input()\n    public isReadonly:boolean;\n\n    public get checkedAttribute():string | undefined {\n        return this.isChecked ? \"\" : undefined;\n    }\n\n    public get isDisabledAttribute():string | undefined {\n        return this.isDisabled ? \"disabled\" : undefined;\n    }\n\n    @ViewChild(\"checkbox\")\n    private _checkboxElement:ElementRef;\n\n    constructor() {\n        this.isChecked = false;\n        this.onCheckChange = new EventEmitter<boolean>();\n        this.onTouched = new EventEmitter<void>();\n\n        this.isDisabled = false;\n        this.isReadonly = false;\n\n        this.hasClasses = true;\n    }\n\n    @HostListener(\"mousedown\", [\"$event\"])\n    public onMouseDown(event):void {\n        event.preventDefault();\n    }\n\n    @HostListener(\"click\", [\"$event\"])\n    public onClick(e):void {\n        if (!this.isDisabled && !this.isReadonly) {\n            this.toggle();\n            this.focusCheckbox();\n        }\n    }\n\n    @HostListener(\"focusout\", [\"$event\"])\n    public onFocusOut(e):void {\n        this.onTouched.emit();\n    }\n\n    public toggle():void {\n        this.isChecked = !this.isChecked;\n        this.onCheckChange.emit(this.isChecked);\n    }\n\n    public writeValue(value:boolean):void {\n        this.isChecked = value;\n    }\n\n    private focusCheckbox():void {\n        this._checkboxElement.nativeElement.focus();\n    }\n}\n\n@Directive({\n    selector: \"sui-checkbox\",\n    host: {\n        \"(checkChange)\": \"onChange($event)\",\n        \"(touched)\": \"onTouched()\"\n    },\n    providers: [customValueAccessorFactory(SuiCheckboxValueAccessor)]\n})\nexport class SuiCheckboxValueAccessor extends CustomValueAccessor<boolean, SuiCheckbox> {\n    constructor(host:SuiCheckbox) {\n        super(host);\n    }\n}\n","import {\n    Component, Directive, Input, Output, HostListener, HostBinding,\n    EventEmitter, ViewChild, ElementRef, ContentChildren, AfterContentInit, QueryList\n} from \"@angular/core\";\nimport {\n    ICustomValueAccessorHost, customValueAccessorFactory, CustomValueAccessor,\n    Util\n} from \"../../../misc/util/internal\";\n\n@Component({\n    selector: \"sui-radio-button\",\n    template: `\n<input class=\"hidden\"\n       type=\"checkbox\"\n       [attr.name]=\"name\"\n       [attr.checked]=\"checkedAttribute\"\n       [attr.disabled]=\"isDisabledAttribute\"\n       [ngModel]=\"isChecked\"\n       (ngModel)=\"currentValue = value\"\n       #radio>\n<label>\n    <ng-content></ng-content>\n</label>\n`\n})\nexport class SuiRadio<T> implements ICustomValueAccessorHost<T> {\n    @HostBinding(\"class.ui\")\n    @HostBinding(\"class.radio\")\n    @HostBinding(\"class.checkbox\")\n    public readonly hasClasses:boolean;\n\n    @Input()\n    public name:string;\n\n    @Input()\n    public value:T;\n\n    @HostBinding(\"class.checked\")\n    public isChecked:boolean;\n\n    public currentValue:T;\n\n    @Output(\"currentValueChange\")\n    public onCurrentValueChange:EventEmitter<T>;\n\n    @Output(\"touched\")\n    public onTouched:EventEmitter<void>;\n\n    @Input()\n    public isDisabled:boolean;\n\n    @HostBinding(\"class.read-only\")\n    @Input()\n    public isReadonly:boolean;\n\n    @ViewChild(\"radio\")\n    private _radioElement:ElementRef;\n\n    public get checkedAttribute():string | undefined {\n        return this.isChecked ? \"\" : undefined;\n    }\n\n    public get isDisabledAttribute():string | undefined {\n        return this.isDisabled ? \"disabled\" : undefined;\n    }\n\n    constructor() {\n        this.isChecked = false;\n        this.onCurrentValueChange = new EventEmitter<T>();\n        this.onTouched = new EventEmitter<void>();\n\n        this.isDisabled = false;\n        this.isReadonly = false;\n\n        this.hasClasses = true;\n    }\n\n    @HostListener(\"mousedown\", [\"$event\"])\n    public onMouseDown(e:MouseEvent):void {\n        e.preventDefault();\n    }\n\n    @HostListener(\"click\")\n    public onClick():void {\n        if (!this.isDisabled && !this.isReadonly) {\n            this.currentValue = this.value;\n            this.onCurrentValueChange.emit(this.currentValue);\n            this.update();\n            this.focusRadio();\n        }\n    }\n\n    @HostListener(\"focusout\")\n    public onFocusOut():void {\n        this.onTouched.emit();\n    }\n\n    public update():void {\n        this.isChecked = this.currentValue === this.value;\n    }\n\n    public writeValue(value:T):void {\n        this.currentValue = value;\n        this.update();\n    }\n\n    private focusRadio():void {\n        this._radioElement.nativeElement.focus();\n    }\n}\n\n@Directive({\n    selector: \"sui-radio-button\",\n    host: {\n        \"(currentValueChange)\": \"onChange($event)\",\n        \"(touched)\": \"onTouched()\"\n    },\n    providers: [customValueAccessorFactory(SuiRadioValueAccessor)]\n})\nexport class SuiRadioValueAccessor<T> extends CustomValueAccessor<T, SuiRadio<T>> {\n    constructor(host:SuiRadio<T>) {\n        super(host);\n    }\n}\n","import { Directive, AfterContentInit, ContentChildren, QueryList, ElementRef } from \"@angular/core\";\nimport { SuiRadio } from \"../components/radio\";\nimport { Subscription } from \"rxjs\";\nimport { Util } from \"../../../misc/util/internal\";\n\n@Directive({\n    selector: \"form:not([ngForm]):not([[ngForm]]),ngForm,[ngForm]\"\n})\nexport class SuiRadioManager<T> implements AfterContentInit {\n\n    public isNested:boolean;\n\n    @ContentChildren(SuiRadioManager, { descendants: true })\n    private _subManagers:QueryList<SuiRadioManager<T>>;\n\n    @ContentChildren(SuiRadio, { descendants: true })\n    private _renderedRadios:QueryList<SuiRadio<T>>;\n\n    private _radioSubs:Subscription[];\n\n    constructor(public element:ElementRef) {\n        this.isNested = false;\n        this._radioSubs = [];\n    }\n\n    public ngAfterContentInit():void {\n        this.updateNesting();\n        this._subManagers.changes.subscribe(() => this.updateNesting());\n\n        this.updateRadios();\n        this._renderedRadios.changes.subscribe(() => this.updateRadios());\n    }\n\n    private updateNesting():void {\n        this._subManagers\n            .filter(m => m !== this)\n            .forEach(m => m.isNested = true);\n    }\n\n    private updateRadios():void {\n        this._radioSubs.forEach(s => s.unsubscribe());\n        this._radioSubs = [];\n\n        const groups = Util.Array.groupBy(this._renderedRadios.toArray(), \"name\");\n        Object\n            .keys(groups)\n            .map(k => groups[k])\n            .forEach(g => g\n                .forEach(r => this._radioSubs\n                    .push(r.onCurrentValueChange\n                        .subscribe((v:T) => {\n                            if (!this.isNested) {\n                                g.forEach(radio => radio.writeValue(v));\n                            }\n                        }))));\n    }\n}\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { FormsModule } from \"@angular/forms\";\nimport { SuiCheckbox, SuiCheckboxValueAccessor } from \"./components/checkbox\";\nimport { SuiRadio, SuiRadioValueAccessor } from \"./components/radio\";\nimport { SuiRadioManager } from \"./directives/radio-manager\";\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule\n    ],\n    declarations: [\n        SuiCheckbox,\n        SuiCheckboxValueAccessor,\n        SuiRadio,\n        SuiRadioValueAccessor,\n        SuiRadioManager\n    ],\n    exports: [\n        SuiCheckbox,\n        SuiCheckboxValueAccessor,\n        SuiRadio,\n        SuiRadioValueAccessor,\n        SuiRadioManager\n    ]\n})\nexport class SuiCheckboxModule {}\n","import { EventEmitter } from \"@angular/core\";\nimport { IDatepickerLocaleValues } from \"../../../behaviors/localization/internal\";\nimport { DateUtil } from \"../../../misc/util/internal\";\nimport { CalendarViewType } from \"../views/calendar-view\";\nimport { CalendarConfig } from \"../classes/calendar-config\";\n\nexport enum CalendarMode {\n    DateOnly = 0,\n    TimeOnly = 1,\n    Both = 2\n}\n\nexport class CalendarService {\n    private _config:CalendarConfig;\n\n    public get config():CalendarConfig {\n        return this._config;\n    }\n\n    public set config(config:CalendarConfig) {\n        this._config = config;\n        config.updateBounds(this._selectedDate || this.currentDate);\n    }\n\n    public currentView:CalendarViewType;\n    public get inFinalView():boolean {\n        return this.currentView === this.config.mappings.finalView;\n    }\n\n    public currentDate:Date;\n    private _selectedDate?:Date;\n\n    public get selectedDate():Date | undefined {\n        return this._selectedDate;\n    }\n\n    public set selectedDate(date:Date | undefined) {\n        if (date) {\n            this._selectedDate = DateUtil.clone(date);\n            this.currentDate = DateUtil.clone(date);\n        } else {\n            this._selectedDate = undefined;\n        }\n\n        this.config.updateBounds(this._selectedDate || this.currentDate);\n        this.onManualUpdate();\n    }\n\n    private _minDate?:Date;\n    private _maxDate?:Date;\n\n    public get minDate():Date | undefined {\n        if (this._minDate && this.config.dateMinBound) {\n            return this._minDate > this.config.dateMinBound ? this._minDate : this.config.dateMinBound;\n        }\n        return this._minDate || this.config.dateMinBound;\n    }\n\n    public set minDate(min:Date | undefined) {\n        this._minDate = min;\n    }\n\n    public get maxDate():Date | undefined {\n        if (this._maxDate && this.config.dateMaxBound) {\n            return this._maxDate < this.config.dateMaxBound ? this._maxDate : this.config.dateMaxBound;\n        }\n        return this._maxDate || this.config.dateMaxBound;\n    }\n\n    public set maxDate(max:Date | undefined) {\n        this._maxDate = max;\n    }\n\n    private _firstDayOfWeek:number;\n\n    public get firstDayOfWeek():number {\n        return this._firstDayOfWeek;\n    }\n\n    public set firstDayOfWeek(firstDayOfWeek:number) {\n        if (firstDayOfWeek != undefined) {\n            this._firstDayOfWeek = Math.max(0, Math.min(6, firstDayOfWeek));\n        }\n    }\n\n    public onDateChange:EventEmitter<Date>;\n\n    constructor(config:CalendarConfig, public localeValues:IDatepickerLocaleValues) {\n        this.config = config;\n\n        this.currentDate = new Date();\n\n        this.firstDayOfWeek = this.localeValues.firstDayOfWeek;\n\n        this.onDateChange = new EventEmitter<Date>();\n\n        this.reset();\n    }\n\n    public onManualUpdate:() => void = () => {};\n\n    public reset():void {\n        this.currentView = this.config.mappings.finalView;\n\n        if (!this._selectedDate) {\n            let current = this.currentDate.getTime();\n            if (this._minDate) {\n                current = Math.max(current, this._minDate.getTime());\n            }\n            if (this._maxDate) {\n                current = Math.min(current, this._maxDate.getTime());\n            }\n\n            this.currentDate = new Date(current);\n            this.config.updateBounds(this.currentDate);\n\n            this.currentView = this.config.mappings.initialView;\n        }\n    }\n\n    public changeDate(date:Date, fromView:CalendarViewType):void {\n        this.currentDate = date;\n\n        if (fromView === this.config.mappings.finalView) {\n            this.selectedDate = date;\n\n            return this.onDateChange.emit(date);\n        }\n\n        this.updateView(this.config.mappings.changed, fromView);\n    }\n\n    public zoomOut(fromView:CalendarViewType):void {\n        this.updateView(this.config.mappings.zoom, fromView);\n    }\n\n    private updateView(mappings:Map<CalendarViewType, CalendarViewType>, fromView:CalendarViewType):void {\n        const mapping = mappings.get(fromView);\n        if (mapping == undefined) {\n            throw new Error(\"Unknown view type.\");\n        }\n        this.currentView = mapping;\n    }\n}\n","\nimport { Directive, HostBinding, HostListener, Input, EventEmitter, ChangeDetectorRef } from \"@angular/core\";\n\nexport class CalendarItem {\n    public date:Date;\n    public humanReadable:string;\n    public isDisabled:boolean;\n    public isActive:boolean;\n    public isOutsideRange:boolean;\n    public isToday:boolean;\n    public isSelectable:boolean;\n\n    constructor(date:Date) {\n        this.date = date;\n    }\n}\n\n@Directive({\n    selector: \"[calendarItem]\"\n})\nexport class SuiCalendarItem {\n    @Input(\"calendarItem\")\n    public item:CalendarItem;\n\n    @HostBinding(\"class.disabled\")\n    public get isSelectable():boolean {\n        return this.item.isSelectable;\n    }\n\n    @HostBinding(\"class.active\")\n    public get isActive():boolean {\n        return this.item.isActive;\n    }\n\n    @HostBinding(\"class.today\")\n    public get isToday():boolean {\n        return this.item.isToday;\n    }\n\n    @HostBinding(\"class.focus\")\n    public hasFocus:boolean;\n\n    public onFocussed:EventEmitter<boolean>;\n\n    constructor(public changeDetector:ChangeDetectorRef) {\n        this.hasFocus = false;\n\n        this.onFocussed = new EventEmitter<boolean>();\n    }\n\n    @HostListener(\"mousemove\")\n    public onMouseMove():void {\n        if (!this.hasFocus) {\n            this.hasFocus = true;\n            this.onFocussed.emit(this.hasFocus);\n        }\n    }\n\n    @HostListener(\"mouseleave\")\n    public onMouseLeave():void {\n        this.hasFocus = false;\n        this.onFocussed.emit(this.hasFocus);\n    }\n}\n","import { Input, QueryList, ViewChildren, AfterViewInit, HostListener, Renderer2, OnDestroy } from \"@angular/core\";\nimport { KeyCode } from \"../../../misc/util/internal\";\nimport { CalendarItem, SuiCalendarItem } from \"../directives/calendar-item\";\nimport { CalendarService } from \"../services/calendar.service\";\nimport { CalendarRangeService } from \"../services/calendar-range.service\";\n\nexport enum CalendarViewType {\n    Year = 0,\n    Month = 1,\n    Date = 2,\n    Hour = 3,\n    Minute = 4\n}\nexport type CalendarViewResult = [Date, CalendarViewType];\n\nexport abstract class CalendarView implements AfterViewInit, OnDestroy {\n    private _type:CalendarViewType;\n    private _service:CalendarService;\n\n    @ViewChildren(SuiCalendarItem)\n    private _renderedItems:QueryList<SuiCalendarItem>;\n    private _highlightedItem?:CalendarItem;\n\n    @Input()\n    public set service(service:CalendarService) {\n        this._service = service;\n        this.ranges.loadService(service);\n\n        this.service.onManualUpdate = () => {\n            this.ranges.refresh();\n\n            delete this._highlightedItem;\n            this.autoHighlight();\n        };\n    }\n\n    public get service():CalendarService {\n        return this._service;\n    }\n\n    public ranges:CalendarRangeService;\n\n    public get currentDate():Date {\n        return this.service.currentDate;\n    }\n\n    public get selectedDate():Date | undefined {\n        return this.service.selectedDate;\n    }\n\n    private _documentKeyDownListener:() => void;\n\n    constructor(renderer:Renderer2, viewType:CalendarViewType, ranges:CalendarRangeService) {\n        this._type = viewType;\n        this.ranges = ranges;\n\n        this._documentKeyDownListener = renderer.listen(\"document\", \"keydown\", (e:KeyboardEvent) => this.onDocumentKeyDown(e));\n    }\n\n    // Template Methods\n\n    public setDate(item:CalendarItem):void {\n        this.service.changeDate(item.date, this._type);\n    }\n\n    public zoomOut():void {\n        this.service.zoomOut(this._type);\n    }\n\n    // Keyboard Control\n\n    public ngAfterViewInit():void {\n        this._renderedItems.changes.subscribe(() => this.onRenderedItemsChanged());\n        this.onRenderedItemsChanged();\n    }\n\n    private onRenderedItemsChanged():void {\n        this._renderedItems.forEach(i =>\n            i.onFocussed.subscribe((hasFocus:boolean) => {\n                if (hasFocus) {\n                    this.highlightItem(i.item);\n                }\n            }));\n\n        this.autoHighlight();\n        this.highlightItem(this._highlightedItem);\n    }\n\n    private autoHighlight():void {\n        let date = this.selectedDate && this.ranges.current.containsDate(this.selectedDate) ? this.selectedDate : this.currentDate;\n        if (this._highlightedItem && this.ranges.current.containsDate(this._highlightedItem.date)) {\n            date = this._highlightedItem.date;\n        }\n\n        const initiallyHighlighted = this.ranges.current.items.find(i => this.ranges.dateComparer.equal(i.date, date));\n        if (initiallyHighlighted && !initiallyHighlighted.isDisabled) {\n            this._highlightedItem = initiallyHighlighted;\n        }\n    }\n\n    private highlightItem(item:CalendarItem | undefined):void {\n        if (item) {\n            this._renderedItems.forEach(i => i.hasFocus = false);\n            const rendered = this._renderedItems.find(ri => ri.item === item);\n            if (rendered && !rendered.hasFocus) {\n                rendered.hasFocus = true;\n                rendered.changeDetector.detectChanges();\n            }\n\n            this._highlightedItem = item;\n        }\n    }\n\n    private onDocumentKeyDown(e:KeyboardEvent):void {\n        if (this._highlightedItem && e.keyCode === KeyCode.Enter) {\n            this.setDate(this._highlightedItem);\n            return;\n        }\n\n        if (!this._highlightedItem) {\n            this.autoHighlight();\n        }\n\n        const index = this.ranges.current.findIndex(this._highlightedItem);\n        let isMovingForward = true;\n        let delta = 0;\n\n        switch (e.keyCode) {\n            case KeyCode.Right:\n                delta += 1;\n                break;\n            case KeyCode.Left:\n                delta -= 1;\n                isMovingForward = false;\n                break;\n            case KeyCode.Down:\n                delta += this.ranges.columns;\n                break;\n            case KeyCode.Up:\n                delta -= this.ranges.columns;\n                isMovingForward = false;\n                break;\n            default:\n                return;\n        }\n\n        // Stop these keypresses being captured elsewhere.\n        e.preventDefault();\n\n        let nextItem = this.ranges.current.items[index + delta];\n\n        if (nextItem && nextItem.isDisabled) {\n            return;\n        }\n\n        if (nextItem && !nextItem.isOutsideRange) {\n            return this.highlightItem(nextItem);\n        }\n\n        if (nextItem && nextItem.isOutsideRange) {\n            if (index + delta >= this.ranges.current.inRange.length) {\n                isMovingForward = true;\n            }\n        }\n\n        if (!nextItem) {\n            let adjustedIndex = this.ranges.current.findIndex(this._highlightedItem);\n\n            const nextItems = this.ranges.calc(isMovingForward).inRange;\n\n            if (isMovingForward) {\n                adjustedIndex -= this.ranges.current.inRange.length;\n            } else {\n                adjustedIndex += nextItems.length;\n            }\n\n            nextItem = nextItems[adjustedIndex + delta];\n\n            if (nextItem.isDisabled) {\n                return;\n            }\n        }\n\n        this.ranges.move(isMovingForward);\n        this._highlightedItem = this.ranges.current.find(nextItem);\n    }\n\n    public ngOnDestroy():void {\n        this._documentKeyDownListener();\n    }\n}\n","import { CalendarViewType } from \"../views/calendar-view\";\n\nexport type CalendarMapping<T = CalendarViewType> = Map<CalendarViewType, T>;\n\nexport abstract class CalendarMappings {\n    public initialView:CalendarViewType;\n    public finalView:CalendarViewType;\n    public changed:CalendarMapping;\n    public zoom:CalendarMapping;\n}\n\nexport class DateMappings extends CalendarMappings {\n    constructor() {\n        super();\n\n        this.initialView = CalendarViewType.Date;\n        this.finalView = CalendarViewType.Date;\n\n        this.changed = new Map<CalendarViewType, CalendarViewType>([\n            [CalendarViewType.Year, CalendarViewType.Month],\n            [CalendarViewType.Month, CalendarViewType.Date],\n            [CalendarViewType.Date, CalendarViewType.Date]\n        ]);\n\n        this.zoom = new Map<CalendarViewType, CalendarViewType>([\n            [CalendarViewType.Year, CalendarViewType.Date],\n            [CalendarViewType.Month, CalendarViewType.Year],\n            [CalendarViewType.Date, CalendarViewType.Month]\n        ]);\n    }\n}\n\nexport class TimeMappings extends CalendarMappings {\n    constructor() {\n        super();\n\n        this.initialView = CalendarViewType.Hour;\n        this.finalView = CalendarViewType.Minute;\n\n        this.changed = new Map<CalendarViewType, CalendarViewType>([\n            [CalendarViewType.Hour, CalendarViewType.Minute],\n            [CalendarViewType.Minute, CalendarViewType.Minute]\n        ]);\n\n        this.zoom = new Map<CalendarViewType, CalendarViewType>([\n            [CalendarViewType.Hour, CalendarViewType.Minute],\n            [CalendarViewType.Minute, CalendarViewType.Hour]\n        ]);\n    }\n}\n\nexport class DatetimeMappings extends CalendarMappings {\n    constructor() {\n        super();\n\n        this.initialView = CalendarViewType.Date;\n        this.finalView = CalendarViewType.Minute;\n\n        this.changed = new Map<CalendarViewType, CalendarViewType>([\n            [CalendarViewType.Year, CalendarViewType.Month],\n            [CalendarViewType.Month, CalendarViewType.Date],\n            [CalendarViewType.Date, CalendarViewType.Hour],\n            [CalendarViewType.Hour, CalendarViewType.Minute],\n            [CalendarViewType.Minute, CalendarViewType.Minute]\n        ]);\n\n        this.zoom = new Map<CalendarViewType, CalendarViewType>([\n            [CalendarViewType.Year, CalendarViewType.Date],\n            [CalendarViewType.Month, CalendarViewType.Year],\n            [CalendarViewType.Date, CalendarViewType.Month],\n            [CalendarViewType.Hour, CalendarViewType.Date],\n            [CalendarViewType.Minute, CalendarViewType.Hour]\n        ]);\n    }\n}\n\nexport class MonthMappings extends CalendarMappings {\n    constructor() {\n        super();\n\n        this.initialView = CalendarViewType.Month;\n        this.finalView = CalendarViewType.Month;\n\n        this.changed = new Map<CalendarViewType, CalendarViewType>([\n            [CalendarViewType.Year, CalendarViewType.Month],\n            [CalendarViewType.Month, CalendarViewType.Month]\n        ]);\n\n        this.zoom = new Map<CalendarViewType, CalendarViewType>([\n            [CalendarViewType.Year, CalendarViewType.Month],\n            [CalendarViewType.Month, CalendarViewType.Year]\n        ]);\n    }\n}\n\nexport class YearMappings extends CalendarMappings {\n    constructor() {\n        super();\n\n        this.initialView = CalendarViewType.Year;\n        this.finalView = CalendarViewType.Year;\n\n        this.changed = new Map<CalendarViewType, CalendarViewType>([\n            [CalendarViewType.Year, CalendarViewType.Year]\n        ]);\n\n        this.zoom = new Map<CalendarViewType, CalendarViewType>([\n            [CalendarViewType.Year, CalendarViewType.Year]\n        ]);\n    }\n}\n","import { CalendarMode } from \"../services/calendar.service\";\nimport { CalendarMappings, DatetimeMappings, DateMappings, TimeMappings, MonthMappings, YearMappings } from \"./calendar-mappings\";\nimport { DatePrecision, DateUtil } from \"../../../misc/util/internal\";\n\nexport abstract class CalendarConfig {\n    public mode:CalendarMode;\n    public precision:DatePrecision;\n    public mappings:CalendarMappings;\n\n    public fallback:string;\n\n    public dateMinBound?:Date;\n    public dateMaxBound?:Date;\n\n    constructor(mode:CalendarMode, precision:DatePrecision, mappings:CalendarMappings, fallback:string) {\n        this.mode = mode;\n        this.precision = precision;\n        this.mappings = mappings;\n        this.fallback = fallback;\n    }\n\n    public updateBounds(providedDate:Date):void {\n        this.dateMinBound = DateUtil.startOf(DatePrecision.Year, new Date(), true);\n        this.dateMinBound.setFullYear(0);\n    }\n}\n\nexport class DateConfigBase extends CalendarConfig {\n    constructor(precision:DatePrecision, mappings:CalendarMappings, fallback:string) {\n        super(CalendarMode.DateOnly, precision, mappings, fallback);\n    }\n}\n\nexport class YearConfig extends DateConfigBase {\n    constructor() {\n        super(\n            DatePrecision.Year,\n            new YearMappings(),\n            \"number\");\n    }\n}\n\nexport class MonthConfig extends DateConfigBase {\n    constructor() {\n        super(\n            DatePrecision.Month,\n            new MonthMappings(),\n            \"month\");\n    }\n}\n\nexport class DateConfig extends DateConfigBase {\n    constructor() {\n        super(\n            DatePrecision.Date,\n            new DateMappings(),\n            \"date\");\n    }\n}\n\nexport class DatetimeConfig extends CalendarConfig {\n    constructor() {\n        super(\n            CalendarMode.Both,\n            DatePrecision.Minute,\n            new DatetimeMappings(),\n            \"datetime-local\");\n    }\n}\n\nexport class TimeConfig extends CalendarConfig {\n    constructor() {\n        super(\n            CalendarMode.TimeOnly,\n            DatePrecision.Minute,\n            new TimeMappings(),\n            \"time\");\n    }\n\n    public updateBounds(providedDate:Date):void {\n        this.dateMaxBound = DateUtil.endOf(DatePrecision.Date, DateUtil.clone(providedDate));\n        this.dateMinBound = DateUtil.previous(DatePrecision.Date, DateUtil.clone(this.dateMaxBound));\n    }\n}\n","import { DatePrecision, DateUtil, Util } from \"../../../misc/util/internal\";\n\nexport class DateComparer {\n    private _precision:DatePrecision;\n    private _isSmallest:boolean;\n\n    constructor(precision:DatePrecision, isSmallest:boolean) {\n        this._precision = precision;\n        this._isSmallest = isSmallest;\n    }\n\n    public equal(a:Date, b:Date | undefined):boolean {\n        if (this._precision === DatePrecision.Minute) {\n            return !!b &&\n               DateUtil.equal(DatePrecision.Hour, b, a) &&\n               Util.Math.roundDown(b.getMinutes(), 5) === Util.Math.roundDown(a.getMinutes(), 5);\n        }\n\n        return !!b && DateUtil.equal(this._precision, a, b);\n    }\n\n    public lessThan(a:Date, b:Date | undefined):boolean {\n        if (this._isSmallest) {\n            return !b || (b >= a);\n        }\n\n        return !b || (DateUtil.endOf(this._precision, DateUtil.clone(b)) >= a);\n    }\n\n    public greaterThan(a:Date, b:Date | undefined):boolean {\n        if (this._isSmallest) {\n            return !b || (b <= a);\n        }\n\n        return !b || (DateUtil.startOf(this._precision, DateUtil.clone(b)) <= a);\n    }\n\n    public between(date:Date, left:Date | undefined, right:Date | undefined):boolean {\n        return this.greaterThan(date, left) && this.lessThan(date, right);\n    }\n}\n","import { IDatepickerLocaleValues } from \"../../../behaviors/localization/internal\";\nimport { format, parse } from \"date-fns\";\nimport * as defaultLocale from \"date-fns/locale/en-US\";\n\ninterface IDateFnsLocaleValues { [name:string]:string[]; }\ninterface IDateFnsHelperOptions { type?:string; }\ntype DateFnsHelper<U, T> = (value:U, options:IDateFnsHelperOptions) => T;\ntype DateFnsWeekStartsOn = 0 | 1 | 2 | 3 | 4 | 5 | 6;\n\ninterface IDateFnsCustomLocale {\n    localize:{\n        weekday:DateFnsHelper<number, string>;\n        weekdays:DateFnsHelper<IDateFnsHelperOptions, string[]>;\n        month:DateFnsHelper<number, string>;\n        months:DateFnsHelper<IDateFnsHelperOptions, string[]>;\n        timeOfDay:DateFnsHelper<number, string>;\n        timesOfDay:DateFnsHelper<IDateFnsHelperOptions, string[]>;\n    };\n    match:{\n        weekdays:DateFnsHelper<string, RegExpMatchArray | null>;\n        weekday?:DateFnsHelper<RegExpMatchArray, number>;\n        months:DateFnsHelper<string, RegExpMatchArray | null>;\n        month?:DateFnsHelper<RegExpMatchArray, number>;\n        timesOfDay:DateFnsHelper<string, RegExpMatchArray | null>;\n        timeOfDay?:DateFnsHelper<RegExpMatchArray, number>;\n    };\n    options?:{\n        weekStartsOn?:number;\n    };\n}\n\nfunction buildLocalizeFn(values:IDateFnsLocaleValues,\n                         defaultType:string,\n                         indexCallback?:(oldIndex:number) => number):DateFnsHelper<number, string> {\n\n    return (dirtyIndex:number, { type } = { type: defaultType }) => {\n        const index = indexCallback ? indexCallback(dirtyIndex) : dirtyIndex;\n        return values[type][index];\n    };\n}\n\nfunction buildLocalizeArrayFn(values:IDateFnsLocaleValues, defaultType:string):DateFnsHelper<IDateFnsHelperOptions, string[]> {\n    return ({ type } = { type: defaultType }) => values[type];\n}\n\nfunction buildMatchFn(patterns:IDateFnsLocaleValues, defaultType:string):DateFnsHelper<string, RegExpMatchArray | null> {\n    return (dirtyString, { type } = { type: defaultType }) =>\n        dirtyString.match(`^(${patterns[type].join(\"|\")})`);\n}\n\nfunction buildParseFn(patterns:IDateFnsLocaleValues, defaultType:string):DateFnsHelper<RegExpMatchArray, number> {\n    return ([, result], { type } = { type: defaultType }) =>\n        (patterns[type] || patterns[defaultType])\n            .map(p => new RegExp(`^${p}`))\n            .findIndex(pattern => pattern.test(result));\n}\n\nexport class DateFnsParser {\n    private _weekStartsOn:DateFnsWeekStartsOn;\n    private _locale:IDateFnsCustomLocale;\n\n    private get _config():any {\n        return {\n            weekStartsOn: this._weekStartsOn,\n            locale: this._locale\n        };\n    }\n\n    constructor(locale:IDatepickerLocaleValues) {\n        this._weekStartsOn = locale.firstDayOfWeek as DateFnsWeekStartsOn;\n\n        const weekdayValues = {\n            long: locale.weekdays,\n            short: locale.weekdaysShort,\n            narrow: locale.weekdaysNarrow\n        };\n\n        const monthValues = {\n            long: locale.months,\n            short: locale.monthsShort\n        };\n\n        const timeOfDayValues = {\n            long: locale.timesOfDay,\n            uppercase: locale.timesOfDayUppercase,\n            lowercase: locale.timesOfDayLowercase\n        };\n\n        const timeOfDayMatchValues = {\n            long: locale.timesOfDay,\n            short: locale.timesOfDayUppercase.concat(locale.timesOfDayLowercase)\n        };\n\n        this._locale = defaultLocale as any;\n        this._locale.localize = {\n            ...this._locale.localize,\n            ...{\n                weekday: buildLocalizeFn(weekdayValues, \"long\"),\n                weekdays: buildLocalizeArrayFn(weekdayValues, \"long\"),\n                month: buildLocalizeFn(monthValues, \"long\"),\n                months: buildLocalizeArrayFn(monthValues, \"long\"),\n                timeOfDay: buildLocalizeFn(timeOfDayValues, \"long\", (hours:number) => {\n                    return hours / 12 >= 1 ? 1 : 0;\n                }),\n                timesOfDay: buildLocalizeArrayFn(timeOfDayValues, \"long\")\n            }\n        };\n        this._locale.match = {\n            ...this._locale.match,\n            ...{\n                weekdays: buildMatchFn(weekdayValues, \"long\"),\n                weekday: buildParseFn(weekdayValues, \"long\"),\n                months: buildMatchFn(monthValues, \"long\"),\n                month: buildParseFn(monthValues, \"long\"),\n                timesOfDay:buildMatchFn(timeOfDayMatchValues, \"long\"),\n                timeOfDay:buildParseFn(timeOfDayMatchValues, \"long\")\n            }\n        };\n    }\n\n    public format(d:Date, f:string):string {\n        return format(d, f, this._config);\n    }\n\n    public parse(dS:string, f:string, bD:Date):Date {\n        return parse(dS, f, bD, this._config);\n    }\n}\n","import { DatepickerMode } from \"../components/datepicker\";\nimport { DateFnsParser } from \"../helpers/date-fns\";\nimport { IDatepickerLocaleValues, IDatepickerFormatsLocaleValues } from \"../../../behaviors/localization/internal\";\n\nexport class DateParser {\n    private _format:string;\n    private _parser:DateFnsParser;\n\n    constructor(format:string, locale:IDatepickerLocaleValues) {\n        this._format = format;\n        this._parser = new DateFnsParser(locale);\n    }\n\n    public format(date:Date):string {\n        return this._parser.format(date, this._format);\n    }\n\n    public parse(dateString:string, baseDate:Date = new Date()):Date {\n        return this._parser.parse(dateString, this._format, baseDate);\n    }\n}\n\nexport class InternalDateParser extends DateParser {\n    constructor(mode:DatepickerMode, locale:IDatepickerLocaleValues) {\n        const internalFormats:IDatepickerFormatsLocaleValues = {\n            time: \"HH:mm\",\n            datetime: \"YYYY-MM-DDTHH:mm\",\n            date: \"YYYY-MM-DD\",\n            month: \"YYYY-MM\",\n            year: \"YYYY\"\n        };\n\n        super(internalFormats[mode], locale);\n    }\n}\n","import { DatePrecision, DateUtil, Util } from \"../../../misc/util/internal\";\nimport { CalendarItem } from \"../directives/calendar-item\";\nimport { CalendarService } from \"./calendar.service\";\nimport { DateComparer } from \"../classes/date-comparer\";\n\nexport class CalendarRange {\n    public start:Date;\n    public dates:Date[];\n    public items:CalendarItem[];\n    public get inRange():CalendarItem[] {\n        return this.items.filter(i => !i.isOutsideRange);\n    }\n    public groupedItems:CalendarItem[][];\n    private _comparer:DateComparer;\n\n    constructor(start:Date, dates:Date[], items:CalendarItem[], grouped:CalendarItem[][], comparer:DateComparer) {\n        this.start = start;\n        this.dates = dates;\n        this.items = items;\n        this.groupedItems = grouped;\n        this._comparer = comparer;\n    }\n\n    public find(item:CalendarItem):CalendarItem | undefined {\n        return this.items.find(i => this._comparer.equal(i.date, item.date));\n    }\n\n    public findIndex(item:CalendarItem | undefined):number {\n        if (!item) {\n            return -1;\n        }\n        return this.items.findIndex(i => this._comparer.equal(i.date, item.date));\n    }\n\n    public containsDate(date:Date):boolean {\n        return !!this.inRange.find(i => this._comparer.equal(i.date, date));\n    }\n}\n\nexport abstract class CalendarRangeService {\n    public previous:CalendarRange;\n    public current:CalendarRange;\n    public next:CalendarRange;\n\n    public service:CalendarService;\n\n    public interval:DatePrecision;\n    public marginal:DatePrecision;\n    public rows:number;\n    public columns:number;\n\n    public get dateComparer():DateComparer {\n        return new DateComparer(this.marginal, this.service.inFinalView);\n    }\n\n    public get length():number {\n        return this.rows * this.columns;\n    }\n\n    public get canMoveNext():boolean {\n        const firstItem = this.next.inRange[0];\n        if (firstItem && this.service.maxDate) {\n            return firstItem.date <= this.service.maxDate;\n        }\n        return true;\n    }\n\n    public get canMovePrevious():boolean {\n        const lastItem = this.previous.inRange.slice(-1).pop();\n        if (lastItem && this.service.minDate) {\n            return lastItem.date >= this.service.minDate;\n        }\n        return true;\n    }\n\n    constructor(interval:DatePrecision, rows:number, columns:number) {\n        this.interval = interval;\n        this.marginal = interval as number + 1;\n        this.rows = rows;\n        this.columns = columns;\n    }\n\n    public loadService(service:CalendarService):void {\n        this.service = service;\n\n        this.refresh();\n    }\n\n    public refresh():void {\n        this.current = this.calcRange(this.service.currentDate);\n\n        this.next = this.calcRange(DateUtil.next(this.interval, DateUtil.clone(this.service.currentDate)));\n        this.previous = this.calcRange(DateUtil.previous(this.interval, DateUtil.clone(this.service.currentDate)));\n    }\n\n    public move(forwards:boolean):void {\n        if (forwards) {\n            return this.moveNext();\n        }\n        return this.movePrevious();\n    }\n\n    public moveNext():void {\n        DateUtil.next(this.interval, this.service.currentDate);\n        this.previous = this.current;\n        this.current = this.next;\n        this.next = this.calcRange(DateUtil.next(this.interval, DateUtil.clone(this.service.currentDate)));\n    }\n\n    public movePrevious():void {\n        DateUtil.previous(this.interval, this.service.currentDate);\n        this.next = this.current;\n        this.current = this.previous;\n        this.previous = this.calcRange(DateUtil.previous(this.interval, DateUtil.clone(this.service.currentDate)));\n    }\n\n    public calc(forwards:boolean):CalendarRange {\n        if (forwards) {\n            return this.next;\n        }\n        return this.previous;\n    }\n\n    private calcRange(startDate:Date):CalendarRange {\n        const start = this.calcStart(startDate);\n        if (this.service.inFinalView) {\n            DateUtil.startOf(this.marginal, start, true);\n        }\n        const dates = this.calcDates(start);\n        const items = this.calcItems(dates, startDate);\n\n        return new CalendarRange(start, dates, items, Util.Array.group(items, this.columns), this.dateComparer);\n    }\n\n    protected calcStart(date:Date):Date {\n        return DateUtil.startOf(this.interval, DateUtil.clone(date));\n    }\n\n    protected calcDates(rangeStart:Date):Date[] {\n        return Util.Array\n            .range(this.length)\n            .map(i => DateUtil.add(this.marginal, DateUtil.clone(rangeStart), i));\n\n    }\n\n    protected calcItems(dateRange:Date[], baseDate:Date):CalendarItem[] {\n        return dateRange.map(date => {\n            const item = new CalendarItem(date);\n\n            item.isDisabled = !this.dateComparer.between(item.date, this.service.minDate, this.service.maxDate);\n            item.isActive = this.dateComparer.equal(item.date, this.service.selectedDate);\n            item.isToday = this.dateComparer.equal(item.date, new Date());\n            item.isSelectable = item.isDisabled;\n\n            this.configureItem(item, baseDate);\n\n            return item;\n        });\n    }\n\n    protected abstract configureItem(item:CalendarItem, baseDate:Date):void;\n}\n","import { Component, Input, EventEmitter, Output } from \"@angular/core\";\nimport { CalendarRangeService } from \"../services/calendar-range.service\";\n\n@Component({\n    selector: \"sui-calendar-view-title\",\n    template: `\n<span class=\"title link\" (click)=\"onZoomOut.emit()\">\n    <ng-content></ng-content>\n</span>\n<span class=\"prev link\" [class.disabled]=\"!ranges?.canMovePrevious\" (click)=\"ranges?.movePrevious()\">\n    <i class=\"chevron left icon\"></i>\n</span>\n<span class=\"next link\" [class.disabled]=\"!ranges?.canMoveNext\" (click)=\"ranges?.moveNext()\">\n    <i class=\"chevron right icon\"></i>\n</span>\n`,\n    styles: [`\n.title.link {\n    display: inline-block;\n    margin-left: 2rem;\n    margin-right: 2rem;\n}\n`]\n})\nexport class SuiCalendarViewTitle {\n\n    @Input()\n    public ranges:CalendarRangeService;\n\n    @Output(\"zoomOut\")\n    public onZoomOut:EventEmitter<void>;\n\n    constructor() {\n        this.onZoomOut = new EventEmitter<void>();\n    }\n}\n","import { Component, HostBinding, HostListener } from \"@angular/core\";\nimport { CalendarService } from \"./../services/calendar.service\";\nimport { DatetimeConfig } from \"../classes/calendar-config\";\nimport { SuiLocalizationService } from \"../../../behaviors/localization/internal\";\n\nexport type DatepickerMode = \"year\" | \"month\" | \"date\" | \"datetime\" | \"time\";\n\nexport const DatepickerMode = {\n    Year: \"year\" as DatepickerMode,\n    Month: \"month\" as DatepickerMode,\n    Date: \"date\" as DatepickerMode,\n    Datetime: \"datetime\" as DatepickerMode,\n    Time: \"time\" as DatepickerMode\n};\n\n@Component({\n    selector: \"sui-datepicker\",\n    template: `\n<ng-container [ngSwitch]=\"service.currentView\">\n    <sui-calendar-year-view [service]=\"service\" *ngSwitchCase=\"0\"></sui-calendar-year-view>\n    <sui-calendar-month-view [service]=\"service\" *ngSwitchCase=\"1\"></sui-calendar-month-view>    \n    <sui-calendar-date-view [service]=\"service\" *ngSwitchCase=\"2\"></sui-calendar-date-view>    \n    <sui-calendar-hour-view [service]=\"service\" *ngSwitchCase=\"3\"></sui-calendar-hour-view>    \n    <sui-calendar-minute-view [service]=\"service\" *ngSwitchCase=\"4\"></sui-calendar-minute-view>    \n</ng-container>\n`,\n    styles: [`\n:host {\n    user-select: none;\n}\n`]\n})\nexport class SuiDatepicker {\n    @HostBinding(\"class.ui\")\n    @HostBinding(\"class.active\")\n    @HostBinding(\"class.calendar\")\n    public readonly hasClasses:boolean;\n\n    public service:CalendarService;\n\n    constructor(localizationService:SuiLocalizationService) {\n        this.service = new CalendarService(new DatetimeConfig(), localizationService.get().datepicker);\n\n        this.hasClasses = true;\n    }\n\n    @HostListener(\"mousedown\", [\"$event\"])\n    public onMouseDown(e:MouseEvent):void {\n        e.preventDefault();\n    }\n}\n","import { TemplateRef } from \"@angular/core\";\nimport { ITemplateRefContext, PositioningPlacement } from \"../../../misc/util/internal\";\nimport { IPopup } from \"./popup-controller\";\n\nexport type PopupTrigger = \"hover\" | \"click\" | \"outsideClick\" | \"focus\" | \"manual\";\nexport type PopupSize = \"mini\" | \"tiny\" | \"small\" | \"large\" | \"huge\";\nexport type PopupWidth = \"wide\" | \"very wide\"  | \"flowing\";\n\nexport const PopupTrigger = {\n    Hover: \"hover\" as PopupTrigger,\n    Click: \"click\" as PopupTrigger,\n    OutsideClick: \"outsideClick\" as PopupTrigger,\n    Focus: \"focus\" as PopupTrigger,\n    Manual: \"manual\" as PopupTrigger\n};\n\nexport interface IPopupConfig {\n    header?:string;\n    text?:string;\n    placement?:PositioningPlacement;\n    trigger?:PopupTrigger;\n    isInverted?:boolean;\n    delay?:number;\n    isBasic?:boolean;\n    transition?:string;\n    transitionDuration?:number;\n    isFlowing?:boolean;\n    isInline?:boolean;\n}\n\nexport class PopupConfig implements IPopupConfig {\n    public header?:string;\n    public text?:string;\n    public placement:PositioningPlacement;\n    public trigger:PopupTrigger;\n    public isInverted:boolean;\n    public delay:number;\n    public isBasic:boolean;\n    public transition:string;\n    public size:PopupSize;\n    public width:PopupWidth;\n    public transitionDuration:number;\n    public isFlowing:boolean;\n    public isInline:boolean;\n\n    constructor(defaults:IPopupConfig = {}) {\n        this.placement = PositioningPlacement.TopLeft;\n        this.trigger = PopupTrigger.Hover;\n        this.isInverted = false;\n        this.delay = 0;\n        this.isBasic = false;\n        this.transition = \"scale\";\n        this.transitionDuration = 200;\n        this.isFlowing = false;\n        this.isInline = false;\n        Object.assign(this, defaults);\n    }\n}\n","import { Component, ViewChild, ViewContainerRef, ElementRef, EventEmitter, HostListener, HostBinding } from \"@angular/core\";\nimport { PositioningService, IDynamicClasses } from \"../../../misc/util/internal\";\nimport { TransitionController, TransitionDirection, Transition } from \"../../transition/internal\";\nimport { IPopup } from \"../classes/popup-controller\";\nimport { TemplatePopupConfig } from \"../classes/popup-template-controller\";\n\n@Component({\n    selector: \"sui-popup\",\n    template: `\n<div class=\"ui popup\"\n     [ngClass]=\"dynamicClasses\"\n     [suiTransition]=\"transitionController\"\n     [attr.direction]=\"direction\"\n     #container>\n\n    <ng-container *ngIf=\"!config.template && (!!config.header || !!config.text)\">\n        <div class=\"header\" *ngIf=\"config.header\">{{ config.header }}</div>\n        <div class=\"content\">{{ config.text }}</div>\n    </ng-container>\n    <div #templateSibling></div>\n\n    <sui-popup-arrow *ngIf=\"!config.isBasic\"\n                     [placement]=\"config.placement\"\n                     [inverted]=\"config.isInverted\"></sui-popup-arrow>\n</div>\n`,\n    styles: [`\n.ui.popup {\n    /* Autofit popup to the contents. */\n    right: auto;\n    margin: 0;\n}\n\n.ui.animating.popup {\n    /* When the popup is animating, it may not initially be in the correct position.\n       This fires a mouse event, causing the anchor's mouseleave to fire - making the popup flicker.\n       Setting pointer-events to none while animating fixes this bug. */\n    pointer-events: none;\n}\n\n.ui.popup::before {\n    /* Hide the Semantic UI CSS arrow. */\n    display: none;\n}\n\n/* Offset popup by 0.75em above and below when placed 'vertically'. */\n.ui.popup[direction=\"top\"],\n.ui.popup[direction=\"bottom\"] {\n    margin-top: 0.75em;\n    margin-bottom: 0.75em;\n}\n\n/* Offset popup by 0.75em either side when placed 'horizontally'. */\n.ui.popup[direction=\"left\"],\n.ui.popup[direction=\"right\"] {\n    margin-left: 0.75em;\n    margin-right: 0.75em;\n}\n`]\n})\nexport class SuiPopup implements IPopup {\n    // Config settings for this popup.\n    public config:TemplatePopupConfig<any>;\n\n    public transitionController:TransitionController;\n    public positioningService:PositioningService;\n    private _anchor:ElementRef;\n\n    // Keeps track of whether the popup is open internally.\n    private _isOpen:boolean;\n    // `setTimeout` timer pointer for cancelling popup close.\n    public closingTimeout:number;\n\n    // Fires when the popup opens (and the animation is completed).\n    public onOpen:EventEmitter<void>;\n    // Fires when the popup closes (and the animation is completed).\n    public onClose:EventEmitter<void>;\n\n    public get isOpen():boolean {\n        return this._isOpen;\n    }\n\n    // `ElementRef` for the positioning subject.\n    @ViewChild(\"container\", { read: ViewContainerRef })\n    private _container:ViewContainerRef;\n\n    public set anchor(anchor:ElementRef) {\n        this._anchor = anchor;\n    }\n\n    // Returns the direction (`top`, `left`, `right`, `bottom`) of the current placement.\n    public get direction():string | undefined {\n        // We need to set direction attribute before popper init to allow correct positioning\n        return this.config.placement.split(\" \").shift();\n    }\n\n    // Returns the alignment (`top`, `left`, `right`, `bottom`) of the current placement.\n    public get alignment():string | undefined {\n        return this.config.placement.split(\" \").pop();\n    }\n\n    public get dynamicClasses():IDynamicClasses {\n        const classes:IDynamicClasses = {};\n        if (this.direction) {\n            classes[this.direction] = true;\n        }\n        if (this.alignment) {\n            classes[this.alignment] = true;\n        }\n        if (this.config.isInverted) {\n            classes.inverted = true;\n        }\n        if (this.config.isBasic) {\n            classes.basic = true;\n        }\n        if (this.config.isFlowing) {\n            classes.flowing = true;\n        }\n        if (this.config.size) {\n            classes[this.config.size] = true;\n        }\n        if (this.config.width) {\n            classes[this.config.width] = true;\n        }\n        return classes;\n    }\n\n    // `ViewContainerRef` for the element the template gets injected as a sibling of.\n    @ViewChild(\"templateSibling\", { read: ViewContainerRef })\n    public templateSibling:ViewContainerRef;\n\n    @HostBinding(\"attr.tabindex\")\n    public readonly tabindex:number;\n\n    constructor(public elementRef:ElementRef) {\n        this.transitionController = new TransitionController(false);\n\n        this._isOpen = false;\n\n        this.onOpen = new EventEmitter<void>();\n        this.onClose = new EventEmitter<void>();\n\n        this.tabindex = 0;\n    }\n\n    public open():void {\n        // Only attempt to open if currently closed.\n        if (!this.isOpen) {\n            // Cancel the closing timer.\n            clearTimeout(this.closingTimeout);\n\n            // Create positioning service after a brief delay.\n            setTimeout(() => {\n                this.positioningService = new PositioningService(\n                    this._anchor,\n                    this._container.element,\n                    this.config.placement,\n                    \".dynamic.arrow\"\n                );\n                this.positioningService.hasArrow = !this.config.isBasic;\n            });\n\n            // Cancel all other transitions, and initiate the opening transition.\n            this.transitionController.stopAll();\n            this.transitionController.animate(\n                new Transition(this.config.transition, this.config.transitionDuration, TransitionDirection.In, () => {\n                    // Focus any element with [autofocus] attribute.\n                    const autoFocus = this.elementRef.nativeElement.querySelector(\"[autofocus]\") as HTMLElement | null;\n                    if (autoFocus) {\n                        // Autofocus after the browser has had time to process other event handlers.\n                        setTimeout(() => autoFocus.focus(), 10);\n                        // Try to focus again when the modal has opened so that autofocus works in IE11.\n                        setTimeout(() => autoFocus.focus(), this.config.transitionDuration);\n                    }\n                }));\n\n            // Finally, set the popup to be open.\n            this._isOpen = true;\n            this.onOpen.emit();\n        }\n    }\n\n    public toggle():void {\n        if (!this.isOpen) {\n            return this.open();\n        }\n\n        return this.close();\n    }\n\n    public close():void {\n        // Only attempt to close if currently open.\n        if (this.isOpen) {\n            // Cancel all other transitions, and initiate the closing transition.\n            this.transitionController.stopAll();\n            this.transitionController.animate(\n                new Transition(this.config.transition, this.config.transitionDuration, TransitionDirection.Out));\n\n            // Cancel the closing timer.\n            clearTimeout(this.closingTimeout);\n            // Start the closing timer, that fires the `onClose` event after the transition duration number of milliseconds.\n            this.closingTimeout = window.setTimeout(() => this.onClose.emit(), this.config.transitionDuration);\n\n            // Finally, set the popup to be closed.\n            this._isOpen = false;\n        }\n    }\n\n    @HostListener(\"click\", [\"$event\"])\n    public onClick(event:MouseEvent):void {\n        // Makes sense here, as the popup shouldn't be attached to any DOM element.\n        event.stopPropagation();\n    }\n}\n","import { ComponentRef, ElementRef, HostListener, OnDestroy, Renderer2 } from \"@angular/core\";\nimport { SuiComponentFactory } from \"../../../misc/util/internal\";\nimport { PopupConfig, PopupTrigger, IPopupConfig } from \"./popup-config\";\nimport { SuiPopup } from \"../components/popup\";\nimport { IPopupLifecycle } from \"./popup-lifecycle\";\n\nexport interface IPopup {\n    open():void;\n    close():void;\n    toggle():void;\n}\n\nexport abstract class SuiPopupController implements IPopup, OnDestroy {\n    // Stores reference to generated popup component.\n    private _componentRef:ComponentRef<SuiPopup>;\n\n    // Returns generated popup instance.\n    public get popup():SuiPopup {\n        // Use non-null assertion as we only access this when a popup exists.\n        return this._componentRef.instance;\n    }\n\n    // `setTimeout` timer pointer for delayed popup open.\n    private _openingTimeout:number;\n\n    // Function to remove the document click handler.\n    private _documentListener:(() => void) | undefined;\n\n    constructor(protected _renderer:Renderer2,\n                protected _element:ElementRef,\n                protected _componentFactory:SuiComponentFactory,\n                config:PopupConfig) {\n\n        // Generate a new SuiPopup component and attach it to the application view.\n        this._componentRef = this._componentFactory.createComponent(SuiPopup);\n\n        // Configure popup with provided config.\n        this.popup.config = config;\n\n        // When the popup is closed (onClose fires on animation complete),\n        this.popup.onClose.subscribe(() => this.cleanup());\n    }\n\n    public configure(config?:IPopupConfig):void {\n        if (config) {\n            Object.assign(this.popup.config, config);\n        }\n    }\n\n    public openDelayed():void {\n        // Cancel the opening timer.\n        clearTimeout(this._openingTimeout);\n\n        // Start the popup opening after the specified delay interval.\n        this._openingTimeout = window.setTimeout(() => this.open(), this.popup.config.delay);\n    }\n\n    public open():void {\n        // Attach the generated component to the current application.\n        this._componentFactory.attachToApplication(this._componentRef);\n\n        if (this.popup.config.isInline) {\n            this._componentFactory.moveToElement(this._componentRef, this._element.nativeElement.parentElement);\n        } else {\n            // Move the generated element to the body to avoid any positioning issues.\n            this._componentFactory.moveToDocumentBody(this._componentRef);\n        }\n\n        // Attach a reference to the anchor element. We do it here because IE11 loves to complain.\n        this.popup.anchor = this._element;\n\n        // Add a listener to the document body to handle closing.\n        this._documentListener = this._renderer\n            .listen(\"document\", \"click\", (e:MouseEvent) =>\n                this.onDocumentClick(e));\n\n        // Start popup open transition.\n        this.popup.open();\n\n        // Call lifecyle hook\n        const lifecycle = (this as IPopupLifecycle).popupOnOpen;\n        if (lifecycle) {\n            lifecycle.call(this);\n        }\n    }\n\n    public close():void {\n        // Cancel the opening timer to stop the popup opening after close has been called.\n        clearTimeout(this._openingTimeout);\n\n        if (this._componentRef) {\n            // Start popup close transition.\n            this.popup.close();\n        }\n\n        // Call lifecyle hook\n        const lifecycle = (this as IPopupLifecycle).popupOnClose;\n        if (lifecycle) {\n            lifecycle.call(this);\n        }\n    }\n\n    public toggleDelayed():void {\n        // If the popup hasn't been created, or it has but it isn't currently open, open the popup.\n        if (!this._componentRef || (this._componentRef && !this.popup.isOpen)) {\n            return this.openDelayed();\n        }\n\n        // O'wise, close it.\n        return this.close();\n    }\n\n    public toggle():void {\n        // If the popup hasn't been created, or it has but it isn't currently open, open the popup.\n        if (!this._componentRef || (this._componentRef && !this.popup.isOpen)) {\n            return this.open();\n        }\n\n        // O'wise, close it.\n        return this.close();\n    }\n\n    @HostListener(\"mouseenter\")\n    public onMouseEnter():void {\n        if (this.popup.config.trigger === PopupTrigger.Hover) {\n            this.openDelayed();\n        }\n    }\n\n    @HostListener(\"mouseleave\")\n    public onMouseLeave():void {\n        if (this.popup.config.trigger === PopupTrigger.Hover) {\n            this.close();\n        }\n    }\n\n    @HostListener(\"click\")\n    public onClick():void {\n        if (this.popup.config.trigger === PopupTrigger.Click ||\n            this.popup.config.trigger === PopupTrigger.OutsideClick) {\n\n            // Repeated clicks require a toggle, rather than just opening the popup each time.\n            this.toggleDelayed();\n        } else if (this.popup.config.trigger === PopupTrigger.Focus &&\n                   (!this._componentRef || (this._componentRef && !this.popup.isOpen))) {\n            // Repeated clicks with a focus trigger requires an open (as focus isn't ever lost on repeated click).\n            this.openDelayed();\n        }\n    }\n\n    private onDocumentClick(e:MouseEvent):void {\n        // If the popup trigger is outside click,\n        if (this._componentRef && this.popup.config.trigger === PopupTrigger.OutsideClick) {\n            const target = e.target as Element;\n            // Close the popup if the click is outside of the popup element.\n            if (!(this._element.nativeElement as Element).contains(target)) {\n                this.close();\n            }\n        }\n    }\n\n    @HostListener(\"focusin\")\n    public onFocusIn():void {\n        if (this.popup.config.trigger === PopupTrigger.Focus) {\n            this.openDelayed();\n        }\n    }\n\n    @HostListener(\"focusout\", [\"$event\"])\n    public onFocusOut(e:any):void {\n        if (!this._element.nativeElement.contains(e.relatedTarget) &&\n            !this.popup.elementRef.nativeElement.contains(e.relatedTarget) &&\n            this.popup.config.trigger === PopupTrigger.Focus) {\n\n            this.close();\n        }\n    }\n\n    protected cleanup():void {\n        clearTimeout(this._openingTimeout);\n\n        if (this._componentRef.instance && this._componentRef.instance.positioningService) {\n            this._componentRef.instance.positioningService.destroy();\n        }\n\n        this._componentFactory.detachFromApplication(this._componentRef);\n\n        if (this._documentListener) {\n            this._documentListener();\n        }\n    }\n\n    public ngOnDestroy():void {\n        this.cleanup();\n    }\n}\n","import { ComponentRef, ElementRef, Type, Renderer2, OnDestroy } from \"@angular/core\";\nimport { SuiComponentFactory } from \"../../../misc/util/internal\";\nimport { SuiPopupController } from \"./popup-controller\";\nimport { PopupConfig } from \"./popup-config\";\n\nexport class SuiPopupComponentController<T> extends SuiPopupController {\n    // Stores reference to generated content component.\n    private _contentComponentRef?:ComponentRef<T>;\n\n    public get componentInstance():T | undefined {\n        if (this._contentComponentRef) {\n            return this._contentComponentRef.instance;\n        }\n    }\n\n    constructor(renderer:Renderer2,\n                element:ElementRef,\n                componentFactory:SuiComponentFactory,\n                private _component:Type<T>,\n                config:PopupConfig) {\n\n        super(renderer, element, componentFactory, config);\n    }\n\n    public open():void {\n        if (!this._contentComponentRef) {\n            this._contentComponentRef = this._componentFactory.createComponent(this._component as Type<T>);\n            this._componentFactory.attachToView(this._contentComponentRef, this.popup.templateSibling);\n        }\n\n        super.open();\n    }\n\n    protected cleanup():void {\n        super.cleanup();\n\n        if (this._contentComponentRef) {\n            this._contentComponentRef.destroy();\n            this._contentComponentRef = undefined;\n        }\n    }\n}\n","import { TemplateRef, Renderer2, ElementRef } from \"@angular/core\";\nimport { SuiPopupController, IPopup } from \"./popup-controller\";\nimport { ITemplateRefContext, SuiComponentFactory, IImplicitContext } from \"../../../misc/util/internal\";\nimport { PopupConfig, IPopupConfig } from \"./popup-config\";\n\nconst templateRef = TemplateRef;\n\nexport interface ITemplatePopupContext<T> extends IImplicitContext<IPopup> {\n    context?:T;\n}\n\nexport interface ITemplatePopupConfig<T> extends IPopupConfig {\n    template?:TemplateRef<ITemplatePopupContext<T>>;\n    context?:T;\n}\n\nexport class TemplatePopupConfig<T> extends PopupConfig {\n    public template?:TemplateRef<ITemplatePopupContext<T>>;\n    public context?:T;\n}\n\nexport class SuiPopupTemplateController<T> extends SuiPopupController {\n    public template?:TemplateRef<ITemplatePopupContext<T>>;\n    public context?:T;\n\n    constructor(renderer:Renderer2,\n                element:ElementRef,\n                componentFactory:SuiComponentFactory,\n                config:PopupConfig) {\n\n        super(renderer, element, componentFactory, config);\n    }\n\n    public configure(config?:ITemplatePopupConfig<T>):void {\n        super.configure(config);\n\n        if (config) {\n            this.template = config.template;\n            this.context = config.context;\n        }\n    }\n\n    public open():void {\n        // If there is a template, inject it into the view.\n        if (this.template) {\n            this.popup.templateSibling.clear();\n\n            this._componentFactory.createView(this.popup.templateSibling, this.template, {\n                $implicit: this.popup,\n                context: this.context\n            });\n        }\n\n        super.open();\n    }\n}\n","import { Component, Input, HostBinding } from \"@angular/core\";\nimport { PositioningPlacement } from \"../../../misc/util/internal\";\n\n@Component({\n    selector: \"sui-popup-arrow\",\n    template: `\n<div class=\"dynamic arrow\" [attr.direction]=\"direction\" *ngIf=\"alignment == 'center'\"></div>\n<div class=\"static arrow\" [attr.direction]=\"direction\" [attr.alignment]=\"alignment\" *ngIf=\"alignment != 'center'\"></div>\n`,\n    styles: [`\n.arrow {\n    position: absolute;\n    width: 0.71428571em;\n    height: 0.71428571em;\n    background: #ffffff;\n    -webkit-transform: rotate(45deg);\n    -ms-transform: rotate(45deg);\n    transform: rotate(45deg);\n    z-index: 2;\n}\n\n:host.inverted .arrow {\n    background: #1b1c1d;\n}\n\n.arrow[direction=\"top\"] {\n    bottom: -0.30714286em;\n    box-shadow: 1px 1px 0 0 #bababc;\n}\n\n.arrow[direction=\"left\"] {\n    right: -0.30714286em;\n    box-shadow: 1px -1px 1px 0 #bababc;\n}\n\n.arrow[direction=\"bottom\"] {\n    top: -0.30714286em;\n    box-shadow: -1px -1px 0 0 #bababc;\n}\n\n.arrow[direction=\"right\"] {\n    left: -0.30714286em;\n    box-shadow: -1px 1px 1px 0 #bababc;\n}\n\n.static.arrow[direction=\"bottom\"][alignment=\"left\"],\n.static.arrow[direction=\"top\"][alignment=\"left\"] {\n    left: 1em;\n    right: auto;\n}\n\n.static.arrow[direction=\"left\"][alignment=\"top\"],\n.static.arrow[direction=\"right\"][alignment=\"top\"] {\n    top: 1em;\n    bottom: auto;\n}\n\n.static.arrow[direction=\"bottom\"][alignment=\"right\"],\n.static.arrow[direction=\"top\"][alignment=\"right\"] {\n    left: auto;\n    right: 1em;\n}\n\n.static.arrow[direction=\"left\"][alignment=\"bottom\"],\n.static.arrow[direction=\"right\"][alignment=\"bottom\"] {\n    top: auto;\n    bottom: 1em;\n}\n`]\n})\nexport class SuiPopupArrow {\n    @Input()\n    public placement:PositioningPlacement;\n\n    @HostBinding(\"class.inverted\")\n    @Input()\n    public inverted:boolean;\n\n    public get direction():string | undefined {\n        if (this.placement) {\n            return this.placement.split(\" \").shift();\n        }\n    }\n\n    public get alignment():string | undefined {\n        if (this.placement) {\n            const alignment = this.placement.split(\" \").pop();\n            if (alignment === this.direction) {\n                return \"center\";\n            }\n            return alignment;\n        }\n    }\n}\n","import { Injectable } from \"@angular/core\";\nimport { PopupConfig } from \"../classes/popup-config\";\n\n@Injectable()\nexport class SuiPopupConfig extends PopupConfig {\n    constructor() {\n        // We use an empty constructor to ensure Angular DI works correctly.\n        super();\n    }\n}\n","import { Directive, Input, ElementRef, TemplateRef, Renderer2 } from \"@angular/core\";\nimport { ITemplateRefContext, Util, PositioningPlacement, SuiComponentFactory } from \"../../../misc/util/internal\";\nimport { SuiPopup } from \"../components/popup\";\nimport { PopupConfig, PopupTrigger, PopupSize, PopupWidth } from \"../classes/popup-config\";\nimport { SuiPopupConfig } from \"../services/popup.service\";\nimport { SuiPopupController } from \"../classes/popup-controller\";\nimport { SuiPopupTemplateController, ITemplatePopupContext, ITemplatePopupConfig } from \"../classes/popup-template-controller\";\n\nconst templateRef = TemplateRef;\n\n@Directive({\n    selector: \"[suiPopup]\",\n    exportAs: \"suiPopup\"\n})\nexport class SuiPopupDirective<T> extends SuiPopupTemplateController<T> {\n    @Input()\n    public set popupHeader(header:string) {\n        this.popup.config.header = header;\n    }\n\n    @Input()\n    public set popupText(text:string) {\n        this.popup.config.text = text;\n    }\n\n    @Input()\n    public set popupInverted(inverted:boolean) {\n        this.popup.config.isInverted = Util.DOM.parseBooleanAttribute(inverted);\n    }\n\n    @Input()\n    public set popupBasic(basic:boolean) {\n        this.popup.config.isBasic = Util.DOM.parseBooleanAttribute(basic);\n    }\n\n    @Input()\n    public set popupInline(inline:boolean) {\n        this.popup.config.isInline = Util.DOM.parseBooleanAttribute(inline);\n    }\n\n    @Input()\n    public set popupFlowing(flowing:boolean) {\n        this.popup.config.isFlowing = Util.DOM.parseBooleanAttribute(flowing);\n    }\n\n    @Input()\n    public set popupTransition(transition:string) {\n        this.popup.config.transition = transition;\n    }\n\n    @Input()\n    public set popupTransitionDuration(duration:number) {\n        this.popup.config.transitionDuration = duration;\n    }\n\n    @Input()\n    public set popupPlacement(placement:PositioningPlacement) {\n        this.popup.config.placement = placement;\n    }\n\n    @Input()\n    public set popupWidth(width:PopupWidth) {\n        this.popup.config.width = width;\n    }\n\n    @Input()\n    public set popupSize(size:PopupSize) {\n        this.popup.config.size = size;\n    }\n\n    @Input()\n    public set popupDelay(delay:number) {\n        this.popup.config.delay = delay;\n    }\n\n    @Input()\n    public get popupTrigger():PopupTrigger {\n        return this.popup.config.trigger;\n    }\n\n    public set popupTrigger(trigger:PopupTrigger) {\n        this.popup.config.trigger = trigger;\n    }\n\n    @Input()\n    public set popupTemplate(template:TemplateRef<ITemplatePopupContext<T>> | undefined) {\n        this.template = template;\n    }\n\n    @Input()\n    public set popupTemplateContext(context:T | undefined) {\n        this.context = context;\n    }\n\n    @Input()\n    public set popupConfig(config:ITemplatePopupConfig<T> | undefined) {\n        this.configure(config);\n    }\n\n    constructor(renderer:Renderer2,\n                element:ElementRef,\n                componentFactory:SuiComponentFactory,\n                popupDefaults:SuiPopupConfig) {\n\n        super(renderer, element, componentFactory, new PopupConfig(popupDefaults));\n    }\n}\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { SuiTransitionModule } from \"../transition/internal\";\nimport { SuiUtilityModule } from \"../../misc/util/internal\";\nimport { SuiPopupDirective } from \"./directives/popup.directive\";\nimport { SuiPopupArrow } from \"./components/popup-arrow\";\nimport { SuiPopup } from \"./components/popup\";\nimport { SuiPopupConfig } from \"./services/popup.service\";\n\n@NgModule({\n    imports: [\n        CommonModule,\n        SuiTransitionModule,\n        SuiUtilityModule\n    ],\n    declarations: [\n        SuiPopupDirective,\n        SuiPopupArrow,\n        SuiPopup\n    ],\n    exports: [\n        SuiPopupDirective,\n        SuiPopup\n    ],\n    providers: [\n        SuiPopupConfig\n    ],\n    entryComponents: [\n        SuiPopup\n    ]\n})\n\nexport class SuiPopupModule {}\n","import {\n    Directive, ElementRef, Renderer2, EventEmitter, Output, Input,\n    HostListener, OnChanges, SimpleChanges\n} from \"@angular/core\";\nimport { AbstractControl, ValidationErrors } from \"@angular/forms\";\nimport {\n    ICustomValueAccessorHost, customValueAccessorFactory, CustomValueAccessor,\n    ICustomValidatorHost, customValidatorFactory, CustomValidator, PositioningPlacement, SuiComponentFactory, KeyCode\n} from \"../../../misc/util/internal\";\nimport { IDatepickerLocaleValues, RecursivePartial, SuiLocalizationService } from \"../../../behaviors/localization/internal\";\nimport { SuiPopupComponentController, PopupAfterOpen, PopupConfig, PopupTrigger } from \"../../popup/internal\";\nimport { SuiDatepicker, DatepickerMode } from \"../components/datepicker\";\nimport { CalendarConfig, YearConfig, MonthConfig, DatetimeConfig, TimeConfig, DateConfig } from \"../classes/calendar-config\";\n\n@Directive({\n    selector: \"[suiDatepicker]\",\n    providers: [customValidatorFactory(SuiDatepickerDirective)]\n})\nexport class SuiDatepickerDirective\n       extends SuiPopupComponentController<SuiDatepicker>\n       implements ICustomValueAccessorHost<Date>, ICustomValidatorHost, OnChanges, PopupAfterOpen {\n\n    private _selectedDate?:Date;\n\n    public get selectedDate():Date | undefined {\n        return this._selectedDate;\n    }\n\n    public set selectedDate(date:Date | undefined) {\n        this._selectedDate = date;\n        this.onSelectedDateChange.emit(date);\n    }\n\n    private _mode:DatepickerMode;\n    public config:CalendarConfig;\n\n    @Input(\"pickerMode\")\n    public get mode():DatepickerMode {\n        return this._mode;\n    }\n\n    public set mode(mode:DatepickerMode) {\n        this._mode = mode || DatepickerMode.Datetime;\n        switch (this._mode) {\n            case DatepickerMode.Year:\n                this.config = new YearConfig();\n                break;\n            case DatepickerMode.Month:\n                this.config = new MonthConfig();\n                break;\n            case DatepickerMode.Date:\n            default:\n                this.config = new DateConfig();\n                break;\n            case DatepickerMode.Datetime:\n                this.config = new DatetimeConfig();\n                break;\n            case DatepickerMode.Time:\n                this.config = new TimeConfig();\n                break;\n        }\n        this.writeValue(this.selectedDate);\n    }\n\n    @Input(\"pickerInitialDate\")\n    public initialDate?:Date;\n\n    @Input(\"pickerMaxDate\")\n    public maxDate?:Date;\n\n    @Input(\"pickerMinDate\")\n    public minDate?:Date;\n\n    @Input(\"pickerFirstDayOfWeek\")\n    public firstDayOfWeek?:number;\n\n    private _localeValues:IDatepickerLocaleValues;\n\n    @Input(\"pickerLocaleOverrides\")\n    public localeOverrides:RecursivePartial<IDatepickerLocaleValues>;\n\n    public get localeValues():IDatepickerLocaleValues {\n        return this.localizationService.override<\"datepicker\">(this._localeValues, this.localeOverrides);\n    }\n\n    @Input(\"pickerPlacement\")\n    public set placement(placement:PositioningPlacement) {\n        this.popup.config.placement = placement;\n    }\n\n    @Input(\"pickerTransition\")\n    public set transition(transition:string) {\n        this.popup.config.transition = transition;\n    }\n\n    @Input(\"pickerTransitionDuration\")\n    public set transitionDuration(duration:number) {\n        this.popup.config.transitionDuration = duration;\n    }\n\n    @Output(\"pickerSelectedDateChange\")\n    public onSelectedDateChange:EventEmitter<Date>;\n\n    @Output(\"pickerValidatorChange\")\n    public onValidatorChange:EventEmitter<void>;\n\n    constructor(renderer:Renderer2,\n                element:ElementRef,\n                componentFactory:SuiComponentFactory,\n                public localizationService:SuiLocalizationService) {\n\n        super(renderer, element, componentFactory, SuiDatepicker, new PopupConfig({\n            trigger: PopupTrigger.Focus,\n            placement: PositioningPlacement.BottomLeft,\n            transition: \"scale\",\n            transitionDuration: 200\n        }));\n\n        // This ensures the popup is drawn correctly (i.e. no border).\n        this._renderer.addClass(this.popup.elementRef.nativeElement, \"ui\");\n        this._renderer.addClass(this.popup.elementRef.nativeElement, \"calendar\");\n\n        this.onLocaleUpdate();\n        this.localizationService.onLanguageUpdate.subscribe(() => this.onLocaleUpdate());\n\n        this.onSelectedDateChange = new EventEmitter<Date>();\n        this.onValidatorChange = new EventEmitter<void>();\n\n        this.mode = DatepickerMode.Datetime;\n    }\n\n    public popupOnOpen():void {\n        if (this.componentInstance) {\n            this.componentInstance.service.config = this.config;\n            this.componentInstance.service.localeValues = this.localeValues;\n            this.componentInstance.service.currentDate = this.initialDate || new Date();\n            this.componentInstance.service.selectedDate = this.selectedDate;\n            this.componentInstance.service.maxDate = this.maxDate;\n            this.componentInstance.service.minDate = this.minDate;\n\n            if (this.firstDayOfWeek != undefined) {\n                this.componentInstance.service.firstDayOfWeek = this.firstDayOfWeek;\n            }\n\n            this.componentInstance.service.reset();\n\n            this.componentInstance.service.onDateChange.subscribe((d:Date) => {\n                this.selectedDate = d;\n                this.close();\n            });\n        }\n    }\n\n    public ngOnChanges({ maxDate, minDate, mode }:SimpleChanges):void {\n        if (maxDate || minDate || mode) {\n            this.onValidatorChange.emit();\n        }\n    }\n\n    private onLocaleUpdate():void {\n        this._localeValues = this.localizationService.get().datepicker;\n    }\n\n    public validate(c:AbstractControl):ValidationErrors | null {\n        const value = c.value;\n\n        if (value != undefined) {\n            // We post process the min & max date because sometimes this puts the date outside of the allowed range.\n            if (this.minDate && value < this.minDate) {\n                return { suiMinDate: { required: this.minDate, actual: value } };\n            }\n\n            if (this.maxDate && value > this.maxDate) {\n                return { suiMaxDate: { required: this.maxDate, actual: value } };\n            }\n        }\n\n        // Angular expects null\n        // tslint:disable-next-line:no-null-keyword\n        return null;\n    }\n\n    public writeValue(value:Date | undefined):void {\n        this.selectedDate = value;\n\n        if (this.componentInstance) {\n            this.componentInstance.service.selectedDate = value;\n        }\n    }\n\n    @HostListener(\"keydown\", [\"$event\"])\n    public onKeyDown(e:KeyboardEvent):void {\n        if (e.keyCode === KeyCode.Escape) {\n            this.close();\n        }\n    }\n}\n\n@Directive({\n    selector: \"[suiDatepicker]\",\n    host: { \"(pickerSelectedDateChange)\": \"onChange($event)\" },\n    providers: [customValueAccessorFactory(SuiDatepickerDirectiveValueAccessor)]\n})\nexport class SuiDatepickerDirectiveValueAccessor extends CustomValueAccessor<Date, SuiDatepickerDirective> {\n    constructor(public host:SuiDatepickerDirective) { super(host); }\n}\n\n@Directive({\n    selector: \"[suiDatepicker]\",\n    host: { \"(pickerValidatorChange)\": \"onValidatorChange()\" },\n    providers: [customValidatorFactory(SuiDatepickerDirectiveValidator)]\n})\nexport class SuiDatepickerDirectiveValidator extends CustomValidator<SuiDatepickerDirective> {\n    constructor(public host:SuiDatepickerDirective) { super(host); }\n}\n","\nimport { Directive, Host, Input, ElementRef, HostBinding, HostListener, Renderer2 } from \"@angular/core\";\nimport { DateUtil, DatePrecision } from \"../../../misc/util/internal\";\nimport { SuiLocalizationService } from \"../../../behaviors/localization/internal\";\nimport { PopupTrigger } from \"../../popup/internal\";\nimport { SuiDatepickerDirective, SuiDatepickerDirectiveValueAccessor } from \"./datepicker.directive\";\nimport { InternalDateParser, DateParser } from \"../classes/date-parser\";\nimport * as bowser from \"bowser\";\n\nimport \"../helpers/is-webview\";\nimport * as isUAWebView from \"is-ua-webview\";\nconst isWebView = isUAWebView[\"default\"] || isUAWebView;\n\n@Directive({\n    selector: \"input[suiDatepicker]\"\n})\nexport class SuiDatepickerInputDirective {\n    private _useNativeOnMobile:boolean;\n\n    @Input(\"pickerUseNativeOnMobile\")\n    public get useNativeOnMobile():boolean {\n        return this._useNativeOnMobile;\n    }\n\n    public set useNativeOnMobile(fallback:boolean) {\n        this._useNativeOnMobile = fallback;\n        const isOnMobile = bowser.mobile || bowser.tablet || isWebView(navigator.userAgent);\n        this.fallbackActive = this.useNativeOnMobile && isOnMobile;\n    }\n\n    private _fallbackActive:boolean;\n\n    public get fallbackActive():boolean {\n        return this._fallbackActive;\n    }\n\n    public set fallbackActive(active:boolean) {\n        this._fallbackActive = active;\n        // If the fallback is active, then the trigger must be manual so the datepicker never opens.\n        this.datepicker.popup.config.trigger = this.fallbackActive ? PopupTrigger.Manual : PopupTrigger.Focus;\n        // Update the input value (this will insert the `T` as required).\n        this.updateValue(this.selectedDateString);\n    }\n\n    public get parser():DateParser {\n        if (this.fallbackActive) {\n            return new InternalDateParser(this.datepicker.mode, this.datepicker.localeValues);\n        }\n        return new DateParser(this.datepicker.localeValues.formats[this.datepicker.mode], this.datepicker.localeValues);\n    }\n\n    private _currentInputValue:string | undefined;\n    private _lastUpdateTyped:boolean;\n\n    public get selectedDateString():string | undefined {\n        if (this.datepicker.selectedDate) {\n            return this.parser.format(this.datepicker.selectedDate);\n        }\n    }\n\n    @HostBinding(\"attr.type\")\n    public get type():string {\n        if (this.fallbackActive) {\n            return this.datepicker.config.fallback;\n        }\n        return \"text\";\n    }\n\n    @HostBinding(\"attr.max\")\n    public get max():string | undefined {\n        if (this.fallbackActive && this.datepicker.maxDate) {\n            // Since HTML doesn't use a date object max is somewhat tricky.\n            // Our Datepicker will always choose the 1st date on the provided precision,\n            // meaning anything below the maxDate will work, hence endOf.\n            const max = DateUtil.endOf(this.datepicker.config.precision, DateUtil.clone(this.datepicker.maxDate));\n            return this.parser.format(max);\n        }\n    }\n\n    @HostBinding(\"attr.min\")\n    public get min():string | undefined {\n        if (this.fallbackActive && this.datepicker.minDate) {\n            // Since HTML doesn't use a date object min is somewhat tricky.\n            // We use 1 minute before the next date at the configured precision since\n            // our Datepicker picks the first available date at that precision.\n            const min = DateUtil.clone(this.datepicker.minDate);\n            return this.parser.format(min);\n        }\n    }\n\n    constructor(@Host() public datepicker:SuiDatepickerDirective,\n                @Host() public valueAccessor:SuiDatepickerDirectiveValueAccessor,\n                private _renderer:Renderer2,\n                private _element:ElementRef,\n                localizationService:SuiLocalizationService) {\n\n        this.useNativeOnMobile = true;\n        this.fallbackActive = false;\n\n        // Whenever the datepicker value updates, update the input text alongside it.\n        this.datepicker.onSelectedDateChange.subscribe(() =>\n            this.updateValue(this.selectedDateString));\n\n        localizationService.onLanguageUpdate.subscribe(() =>\n            this.updateValue(this.selectedDateString));\n    }\n\n    private updateValue(value:string | undefined):void {\n        // Only update the current value if it is different to what it's being updated to.\n        // This is so that the editing position isn't changed when manually typing the date.\n        if (!this._lastUpdateTyped) {\n            this._renderer.setProperty(this._element.nativeElement, \"value\", value || \"\");\n        }\n\n        this._lastUpdateTyped = false;\n    }\n\n    @HostListener(\"input\", [\"$event.target.value\"])\n    public typeValue(value:string | undefined):void {\n        this._lastUpdateTyped = true;\n        this._currentInputValue = value;\n\n        if (!value) {\n            // Delete the selected date if no date was entered manually.\n            return this.datepicker.writeValue(undefined);\n        }\n\n        const parsed = this.parser.parse(value, this.datepicker.selectedDate);\n        if (!isNaN(parsed.getTime()) && value === this.parser.format(parsed)) {\n            return this.datepicker.writeValue(parsed);\n        }\n        return this.datepicker.writeValue(undefined);\n    }\n\n    @HostListener(\"focusout\")\n    public onFocusOut():void {\n        this.valueAccessor.onTouched();\n    }\n}\n","import { Component, Renderer2 } from \"@angular/core\";\nimport { DateUtil, DatePrecision } from \"../../../misc/util/internal\";\nimport { CalendarItem } from \"../directives/calendar-item\";\nimport { CalendarView, CalendarViewType } from \"./calendar-view\";\nimport { CalendarRangeService } from \"../services/calendar-range.service\";\nimport { DateParser } from \"../classes/date-parser\";\n\nexport class CalendarRangeDateService extends CalendarRangeService {\n    public calcStart(start:Date):Date {\n        const monthStart = DateUtil.startOf(DatePrecision.Month, DateUtil.clone(start));\n        monthStart.setDate((1 - monthStart.getDay() + this.service.firstDayOfWeek - 7) % 7);\n        return monthStart;\n    }\n\n    public configureItem(item:CalendarItem, baseDate:Date):void {\n        item.humanReadable = item.date.getDate().toString();\n        item.isOutsideRange = item.date.getMonth() !== baseDate.getMonth();\n        item.isSelectable = item.isDisabled;\n    }\n}\n\n@Component({\n    selector: \"sui-calendar-date-view\",\n    template: `\n<table class=\"ui celled center aligned unstackable table seven column day\">\n<thead>\n    <tr>\n        <th colspan=\"7\">\n            <sui-calendar-view-title [ranges]=\"ranges\" (zoomOut)=\"zoomOut()\">\n                {{ date }}\n            </sui-calendar-view-title>\n        </th>\n    </tr>\n    <tr>\n        <th *ngFor=\"let day of days\">{{ day }}</th>\n    </tr>\n</thead>\n<tbody>\n    <tr *ngFor=\"let group of ranges.current.groupedItems\">\n        <td class=\"link\"\n            *ngFor=\"let item of group\"\n            [calendarItem]=\"item\"\n            (click)=\"setDate(item)\">{{ item.humanReadable }}\n        </td>\n    </tr>\n</tbody>\n</table>\n`\n})\nexport class SuiCalendarDateView extends CalendarView {\n    public get days():string[] {\n        const days = this.service.localeValues.weekdaysNarrow;\n        return days.map((d, i) => days[(i + this.service.firstDayOfWeek) % days.length]);\n    }\n\n    public get date():string {\n        return new DateParser(this.service.localeValues.formats.month, this.service.localeValues).format(this.currentDate);\n    }\n\n    constructor(renderer:Renderer2) {\n        super(renderer, CalendarViewType.Date, new CalendarRangeDateService(DatePrecision.Month, 6, 7));\n    }\n}\n","import { Component, Renderer2 } from \"@angular/core\";\nimport { DatePrecision } from \"../../../misc/util/internal\";\nimport { CalendarView, CalendarViewType } from \"./calendar-view\";\nimport { CalendarItem } from \"../directives/calendar-item\";\nimport { CalendarRangeService } from \"../services/calendar-range.service\";\nimport { DateParser } from \"../classes/date-parser\";\n\nexport class CalendarRangeHourService extends CalendarRangeService {\n    public configureItem(item:CalendarItem, baseDate:Date):void {\n        // Set minutes and seconds to 0\n        const customFormat:string = this.service.localeValues.formats.time.replace(/[ms]/g, \"0\");\n        item.humanReadable = new DateParser(customFormat, this.service.localeValues).format(item.date);\n        item.isOutsideRange = false;\n    }\n}\n\n@Component({\n    selector: \"sui-calendar-hour-view\",\n    template: `\n<table class=\"ui celled center aligned unstackable table four column hour\">\n<thead *ngIf=\"service.config.mode != 1\">\n    <tr>\n        <th colspan=\"4\">\n            <sui-calendar-view-title [ranges]=\"ranges\" (zoomOut)=\"zoomOut()\">\n                {{ date }}\n            </sui-calendar-view-title>\n        </th>\n    </tr>\n</thead>\n<tbody>\n    <tr *ngFor=\"let group of ranges.current.groupedItems\">\n        <td class=\"link\"\n            *ngFor=\"let item of group\"\n            [calendarItem]=\"item\"\n            (click)=\"setDate(item)\">{{ item.humanReadable }}\n        </td>\n    </tr>\n</tbody>\n</table>\n`\n})\nexport class SuiCalendarHourView extends CalendarView {\n\n    public get date():string {\n        return new DateParser(this.service.localeValues.formats.date, this.service.localeValues).format(this.currentDate);\n    }\n\n    constructor(renderer:Renderer2) {\n        super(renderer, CalendarViewType.Hour, new CalendarRangeHourService(DatePrecision.Date, 6, 4));\n    }\n}\n","import { Component, Renderer2 } from \"@angular/core\";\nimport { Util, DateUtil, DatePrecision } from \"../../../misc/util/internal\";\nimport { CalendarView, CalendarViewType } from \"./calendar-view\";\nimport { CalendarItem } from \"../directives/calendar-item\";\nimport { CalendarMode } from \"../services/calendar.service\";\nimport { CalendarRangeService } from \"../services/calendar-range.service\";\nimport { DateParser } from \"../classes/date-parser\";\n\nexport class CalendarRangeMinuteService extends CalendarRangeService {\n    public calcStart(start:Date):Date {\n        return DateUtil.startOf(DatePrecision.Hour, DateUtil.clone(start), true);\n    }\n\n    public calcDates(start:Date):Date[] {\n        return Util.Array\n            .range(this.length)\n            .map(i => DateUtil.add(DatePrecision.Minute, DateUtil.clone(start), i * 5));\n    }\n\n    public configureItem(item:CalendarItem, baseDate:Date):void {\n        item.humanReadable = new DateParser(this.service.localeValues.formats.time, this.service.localeValues).format(item.date);\n        item.isOutsideRange = false;\n    }\n}\n\n@Component({\n    selector: \"sui-calendar-minute-view\",\n    template: `\n<table class=\"ui celled center aligned unstackable table three column minute\">\n<thead>\n    <tr>\n        <th colspan=\"4\">\n            <sui-calendar-view-title [ranges]=\"ranges\" (zoomOut)=\"zoomOut()\">\n                {{ date }}\n            </sui-calendar-view-title>\n        </th>\n    </tr>\n</thead>\n<tbody>\n    <tr *ngFor=\"let group of ranges.current.groupedItems\">\n        <td class=\"link\"\n            *ngFor=\"let item of group\"\n            [calendarItem]=\"item\"\n            (click)=\"setDate(item)\">{{ item.humanReadable }}\n        </td>\n    </tr>\n</tbody>\n</table>\n`\n})\nexport class SuiCalendarMinuteView extends CalendarView {\n    public get date():string {\n        if (this.service.config.mode !== CalendarMode.TimeOnly) {\n            // Set minutes and seconds to 0\n            const dateTimeFormat:string = this.service.localeValues.formats.datetime.replace(/[ms]/g, \"0\");\n            return new DateParser(dateTimeFormat, this.service.localeValues).format(this.currentDate);\n        } else {\n            // Set minutes and seconds to 0\n            const timeFormat:string = this.service.localeValues.formats.time.replace(/[ms]/g, \"0\");\n            return new DateParser(timeFormat, this.service.localeValues).format(this.currentDate);\n        }\n    }\n\n    constructor(renderer:Renderer2) {\n        super(renderer, CalendarViewType.Minute, new CalendarRangeMinuteService(DatePrecision.Hour, 4, 3));\n    }\n}\n","import { Component, Renderer2 } from \"@angular/core\";\nimport { DatePrecision } from \"../../../misc/util/internal\";\nimport { CalendarView, CalendarViewType } from \"./calendar-view\";\nimport { CalendarItem } from \"../directives/calendar-item\";\nimport { CalendarRangeService } from \"../services/calendar-range.service\";\nimport { DateParser } from \"../classes/date-parser\";\n\nexport class CalendarRangeMonthService extends CalendarRangeService {\n    public configureItem(item:CalendarItem, baseDate:Date):void {\n        item.humanReadable = this.service.localeValues.monthsShort[item.date.getMonth()];\n        item.isOutsideRange = false;\n    }\n}\n\n@Component({\n    selector: \"sui-calendar-month-view\",\n    template: `\n<table class=\"ui celled center aligned unstackable table three column month\">\n<thead>\n    <tr>\n        <th colspan=\"3\">\n            <sui-calendar-view-title [ranges]=\"ranges\" (zoomOut)=\"zoomOut()\">\n                {{ year }}\n            </sui-calendar-view-title>\n        </th>\n    </tr>\n</thead>\n<tbody>\n    <tr *ngFor=\"let group of ranges.current.groupedItems\">\n        <td class=\"link\"\n            *ngFor=\"let item of group\"\n            [calendarItem]=\"item\"\n            (click)=\"setDate(item)\">{{ item.humanReadable }}\n        </td>\n    </tr>\n</tbody>\n</table>\n`\n})\nexport class SuiCalendarMonthView extends CalendarView {\n    public get year():string {\n        return new DateParser(this.service.localeValues.formats.year, this.service.localeValues).format(this.currentDate);\n    }\n\n    constructor(renderer:Renderer2) {\n        super(renderer, CalendarViewType.Month, new CalendarRangeMonthService(DatePrecision.Year, 4, 3));\n    }\n}\n","import { Component, Renderer2 } from \"@angular/core\";\nimport { Util, DateUtil, DatePrecision } from \"../../../misc/util/internal\";\nimport { CalendarView, CalendarViewType } from \"./calendar-view\";\nimport { CalendarItem } from \"../directives/calendar-item\";\nimport { CalendarRangeService } from \"../services/calendar-range.service\";\n\nexport class CalendarRangeYearService extends CalendarRangeService {\n    public configureItem(item:CalendarItem, baseDate:Date):void {\n        item.humanReadable = Util.String.padLeft(item.date.getFullYear().toString(), 4, \"0\");\n        item.isOutsideRange = item.date.getFullYear() >= this.calcStart(baseDate).getFullYear() + 10;\n    }\n}\n\n@Component({\n    selector: \"sui-calendar-year-view\",\n    template: `\n<table class=\"ui celled center aligned unstackable table three column year\">\n<thead>\n    <tr>\n        <th colspan=\"3\">\n            <sui-calendar-view-title [ranges]=\"ranges\" (zoomOut)=\"zoomOut()\">\n                {{ pad(decadeStart) }} - {{ pad(decadeStart + 10) }}\n            </sui-calendar-view-title>\n        </th>\n    </tr>\n</thead>\n<tbody>\n    <tr *ngFor=\"let group of ranges.current.groupedItems\">\n        <td class=\"link\"\n            *ngFor=\"let item of group\"\n            [calendarItem]=\"item\"\n            (click)=\"setDate(item)\">{{ item.humanReadable }}\n        </td>\n    </tr>\n</tbody>\n</table>\n`\n})\nexport class SuiCalendarYearView extends CalendarView {\n    public get decadeStart():number {\n        return DateUtil\n            .startOf(DatePrecision.Decade, DateUtil.clone(this.service.currentDate))\n            .getFullYear();\n    }\n\n    constructor(renderer:Renderer2) {\n        super(renderer, CalendarViewType.Year, new CalendarRangeYearService(DatePrecision.Decade, 4, 3));\n    }\n\n    public pad(year:number):string {\n        return Util.String.padLeft(year.toString(), 4, \"0\");\n    }\n}\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { FormsModule } from \"@angular/forms\";\nimport { SuiPopupModule } from \"../popup/internal\";\nimport { SuiLocalizationModule } from \"../../behaviors/localization/internal\";\nimport { SuiUtilityModule } from \"../../misc/util/internal\";\nimport { SuiCalendarViewTitle } from \"./components/calendar-view-title\";\nimport { SuiCalendarYearView } from \"./views/year-view\";\nimport { SuiCalendarMonthView } from \"./views/month-view\";\nimport { SuiCalendarItem } from \"./directives/calendar-item\";\nimport { SuiCalendarDateView } from \"./views/date-view\";\nimport { SuiDatepicker } from \"./components/datepicker\";\nimport { SuiCalendarHourView } from \"./views/hour-view\";\nimport { SuiCalendarMinuteView } from \"./views/minute-view\";\nimport { SuiDatepickerInputDirective } from \"./directives/input.directive\";\nimport {\n    SuiDatepickerDirective, SuiDatepickerDirectiveValueAccessor,\n    SuiDatepickerDirectiveValidator\n} from \"./directives/datepicker.directive\";\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        SuiPopupModule,\n        SuiLocalizationModule,\n        SuiUtilityModule\n    ],\n    declarations: [\n        SuiCalendarItem,\n\n        SuiCalendarViewTitle,\n        SuiCalendarYearView,\n        SuiCalendarMonthView,\n        SuiCalendarDateView,\n        SuiCalendarHourView,\n        SuiCalendarMinuteView,\n\n        SuiDatepicker,\n        SuiDatepickerDirective,\n        SuiDatepickerDirectiveValueAccessor,\n        SuiDatepickerDirectiveValidator,\n        SuiDatepickerInputDirective\n    ],\n    exports: [\n        SuiDatepickerDirective,\n        SuiDatepickerDirectiveValueAccessor,\n        SuiDatepickerDirectiveValidator,\n        SuiDatepickerInputDirective\n    ],\n    entryComponents: [\n        SuiDatepicker\n    ]\n})\nexport class SuiDatepickerModule {}\n","import {\n    Component, Input, Output, HostBinding, HostListener, EventEmitter, Renderer2,\n    ElementRef, ChangeDetectorRef\n} from \"@angular/core\";\nimport { TransitionController, SuiTransition, TransitionDirection, Transition } from \"../../transition/internal\";\n\n@Component({\n    selector: \"sui-dimmer\",\n    template: `\n<div [class.content]=\"wrapContent\">\n    <ng-content></ng-content>\n</div>\n`,\n    styles: [`\n:host.dimmer:not(.hidden) {\n    transition: none;\n    display: flex !important;\n}\n`]\n})\nexport class SuiDimmer extends SuiTransition {\n    @HostBinding(\"class.ui\")\n    @HostBinding(\"class.dimmer\")\n    public readonly hasClasses:boolean;\n\n    private _transitionController:TransitionController;\n\n    private _isDimmed:boolean;\n\n    @HostBinding(\"class.active\")\n    @Input()\n    public get isDimmed():boolean {\n        return this._isDimmed;\n    }\n\n    public set isDimmed(value:boolean) {\n        const isDimmed = !!value;\n\n        if (!this._transitionController) {\n            // Initialise transition functionality when first setting dimmed, to ensure initial state doesn't transition.\n            this._transitionController = new TransitionController(isDimmed, \"block\");\n\n            this.setTransitionController(this._transitionController);\n\n            this._isDimmed = isDimmed;\n        } else if (this._isDimmed !== isDimmed) {\n\n            this._isDimmed = isDimmed;\n\n            this._transitionController.stopAll();\n            this._transitionController.animate(\n                new Transition(\"fade\", this.transitionDuration, isDimmed ? TransitionDirection.In : TransitionDirection.Out));\n        }\n    }\n\n    @Output()\n    public isDimmedChange:EventEmitter<boolean>;\n\n    @Input()\n    public isClickable:boolean;\n\n    @Input()\n    public transition:string;\n\n    @Input()\n    public transitionDuration:number;\n\n    /* Internal for now */\n    @Input()\n    public wrapContent:boolean;\n\n    constructor(renderer:Renderer2, element:ElementRef, changeDetector:ChangeDetectorRef) {\n        super(renderer, element, changeDetector);\n\n        this._isDimmed = false;\n        this.isDimmedChange = new EventEmitter<boolean>();\n        this.isClickable = true;\n\n        this.wrapContent = true;\n\n        this.hasClasses = true;\n    }\n\n    @HostListener(\"click\")\n    public onClick():void {\n        if (this.isClickable) {\n            this.isDimmed = false;\n            this.isDimmedChange.emit(this.isDimmed);\n        }\n    }\n}\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { SuiTransitionModule } from \"../transition/internal\";\nimport { SuiDimmer } from \"./components/dimmer\";\n\n@NgModule({\n    imports: [\n        CommonModule,\n        SuiTransitionModule\n    ],\n    declarations: [\n        SuiDimmer\n    ],\n    exports: [\n        SuiDimmer\n    ]\n})\nexport class SuiDimmerModule {}\n","import { EventEmitter } from \"@angular/core\";\n\nexport type DropdownAutoCloseType = \"itemClick\" | \"outsideClick\" | \"disabled\";\n\n// Creates essentially a 'string' enum.\nexport const DropdownAutoCloseType = {\n    ItemClick: \"itemClick\" as DropdownAutoCloseType,\n    OutsideClick: \"outsideClick\" as DropdownAutoCloseType,\n    Disabled: \"disabled\" as DropdownAutoCloseType\n};\n\nexport class DropdownService {\n    // Open state of the dropdown\n    public isOpen:boolean;\n    // Animating state of the dropdown.\n    public isAnimating:boolean;\n    // Emitter for when dropdown open state changes.\n    public isOpenChange:EventEmitter<boolean>;\n\n    public isDisabled:boolean;\n\n    // Sets the \"autoclose\" mode of the dropdown - i.e. what user action causes it to autoclose.\n    public autoCloseMode:DropdownAutoCloseType;\n\n    // Keep track of the containing dropdown so we can open it as necessary.\n    public parent?:DropdownService;\n    // Also keep track of dropdowns nested in this one so we can close them as necessary.\n    public children:DropdownService[];\n    public get isNested():boolean {\n        return !!this.parent;\n    }\n\n    constructor(autoCloseMode:DropdownAutoCloseType = DropdownAutoCloseType.ItemClick) {\n        this.isOpen = false;\n        this.isOpenChange = new EventEmitter<boolean>();\n\n        this.isDisabled = false;\n\n        this.autoCloseMode = autoCloseMode;\n\n        this.children = [];\n    }\n\n    public setOpenState(isOpen:boolean, reflectInParent:boolean = false):void {\n        if (this.isOpen !== isOpen && !this.isDisabled) {\n            // Only update the state if it has changed, and the dropdown isn't disabled.\n            this.isOpen = !!isOpen;\n            this.isAnimating = true;\n            // We must delay the emitting to avoid the 'changed after checked' Angular errors.\n            this.delay(() => this.isOpenChange.emit(this.isOpen));\n\n            if (!this.isOpen) {\n                // Close the child dropdowns when this one closes.\n                this.children.forEach(c => c.setOpenState(this.isOpen));\n            }\n\n            if (this.parent && reflectInParent) {\n                // Open the parent dropdowns when this one opens.\n                this.parent.setOpenState(this.isOpen, true);\n            }\n        } else if (this.isOpen !== isOpen && this.isDisabled) {\n            // If the state has changed, but the dropdown is disabled, re-emit the original isOpen value.\n            this.delay(() => this.isOpenChange.emit(this.isOpen));\n        }\n    }\n\n    public setDisabledState(isDisabled:boolean):void {\n        if (this.isDisabled !== isDisabled) {\n            if (!!isDisabled) {\n                // Close the dropdown as it is now disabled\n                this.setOpenState(false);\n            }\n\n            this.isDisabled = !!isDisabled;\n        }\n    }\n\n    public toggleOpenState():void {\n        this.setOpenState(!this.isOpen);\n    }\n\n    // Registers a dropdown service as a child of this service.\n    public registerChild(child:DropdownService):void {\n        if (!this.isChildRegistered(child)) {\n            this.children.push(child);\n            child.parent = this;\n        }\n    }\n\n    // Recursive method to check if the provided dropdown is already registered as a child, or is a descendant of a child.\n    public isChildRegistered(child:DropdownService):boolean {\n        return this === child || !!this.children\n            .find(c => !!c.children\n                .find(cChild => cChild.isChildRegistered(child)));\n    }\n\n    // Wipes any nested data, so all services can be cleanly reattached.\n    public clearChildren():void {\n        this.children.forEach(c => {\n            c.parent = undefined;\n        });\n        this.children = [];\n    }\n\n    // Method for delaying an event into the next tick, to avoid Angular \"changed after checked\" error.\n    private delay(callback:() => void):void {\n        setTimeout(() => callback());\n    }\n}\n","import {\n    Directive, ContentChild, forwardRef, Renderer2, ElementRef, AfterContentInit,\n    ContentChildren, QueryList, Input, HostListener, ChangeDetectorRef, OnDestroy\n} from \"@angular/core\";\nimport { Transition, SuiTransition, TransitionController, TransitionDirection } from \"../../transition/internal\";\nimport { HandledEvent, IAugmentedElement, KeyCode } from \"../../../misc/util/internal\";\nimport { DropdownService, DropdownAutoCloseType } from \"../services/dropdown.service\";\n// Polyfill for IE\nimport \"element-closest\";\n\n@Directive({\n    // We must attach to every '.item' as Angular doesn't support > selectors.\n    selector: \".item\"\n})\nexport class SuiDropdownMenuItem {\n    public get isDisabled():boolean {\n        // We must use nativeElement as Angular doesn't have a way of reading class information.\n        const element = this.element.nativeElement as Element;\n        return element.classList.contains(\"disabled\");\n    }\n\n    private _isSelected:boolean;\n\n    public get isSelected():boolean {\n        return this._isSelected;\n    }\n\n    public set isSelected(value:boolean) {\n        // Renderer is used to enable a dynamic class name.\n        if (value) {\n            this._renderer.addClass(this.element.nativeElement, this.selectedClass);\n        } else {\n            this._renderer.removeClass(this.element.nativeElement, this.selectedClass);\n        }\n    }\n\n    // Stores the class name used for a 'selected' item.\n    public selectedClass:string;\n\n    @ContentChild(forwardRef(() => SuiDropdownMenu))\n    public childDropdownMenu:SuiDropdownMenu;\n\n    public get hasChildDropdown():boolean {\n        return !!this.childDropdownMenu;\n    }\n\n    constructor(private _renderer:Renderer2, public element:ElementRef) {\n        this.isSelected = false;\n\n        this.selectedClass = \"selected\";\n    }\n\n    public performClick():void {\n        // Using directly because Renderer2 doesn't have invokeElementMethod method anymore.\n        this.element.nativeElement.click();\n    }\n}\n\n@Directive({\n    selector: \"[suiDropdownMenu]\"\n})\nexport class SuiDropdownMenu extends SuiTransition implements AfterContentInit, OnDestroy {\n    private _service:DropdownService;\n    private _transitionController:TransitionController;\n\n    @Input()\n    public menuTransition:string;\n\n    @Input()\n    public menuTransitionDuration:number;\n\n    public get service():DropdownService {\n        return this._service;\n    }\n\n    public set service(value:DropdownService) {\n        this._service = value;\n\n        let previousIsOpen = this._service.isOpen;\n        this._service.isOpenChange.subscribe((isOpen:boolean) => {\n            if (isOpen !== previousIsOpen) {\n                // Only run transitions if the open state has changed.\n                this._transitionController.stopAll();\n                this._transitionController.animate(\n                    new Transition(\n                        this.menuTransition,\n                        this.menuTransitionDuration,\n                        TransitionDirection.Either,\n                        () => this._service.isAnimating = false));\n            }\n\n            if (!isOpen) {\n                // Reset the item selections when a nested item is selected to avoid incosistent open states.\n                if (this.selectedItems.length > 1) {\n                    this.resetSelection();\n                }\n            }\n\n            previousIsOpen = isOpen;\n        });\n    }\n\n    public set parentElement(value:ElementRef) {\n        this._parentKeyDownListener = this._renderer\n            .listen(value.nativeElement, \"keydown\", (e:KeyboardEvent) =>\n                this.onParentKeyDown(e));\n    }\n\n    @ContentChildren(SuiDropdownMenuItem, {descendants: true})\n    private _itemsQueryInternal:QueryList<SuiDropdownMenuItem>;\n\n    private _itemsQueryOverride:QueryList<SuiDropdownMenuItem>;\n\n    public set items(items:QueryList<SuiDropdownMenuItem>) {\n        this._itemsQueryOverride = items;\n    }\n\n    private get _itemsQuery():QueryList<SuiDropdownMenuItem> {\n        return this._itemsQueryOverride || this._itemsQueryInternal;\n    }\n\n    // Get the list of items, ignoring those that are disabled.\n    private get _items():SuiDropdownMenuItem[] {\n        return this._itemsQuery.filter(i => !i.isDisabled);\n    }\n\n    // Stack that keeps track of the currently selected item.\n    // Selected items lower in the stack are necessarily the parent of the item one higher.\n    public selectedItems:SuiDropdownMenuItem[];\n\n    // Sets whether or not to automatically select the 1st item when the dropdown is opened.\n    @Input()\n    public menuAutoSelectFirst:boolean;\n\n    @Input()\n    public menuSelectedItemClass:string;\n\n    private _parentKeyDownListener:() => void;\n\n    constructor(renderer:Renderer2, element:ElementRef, changeDetector:ChangeDetectorRef) {\n        super(renderer, element, changeDetector);\n\n        // Initialise transition functionality.\n        this._transitionController = new TransitionController(false);\n        this.setTransitionController(this._transitionController);\n\n        this.menuTransition = \"slide down\";\n        this.menuTransitionDuration = 200;\n\n        this.menuAutoSelectFirst = false;\n        this.menuSelectedItemClass = \"selected\";\n\n        // In case the dropdown menu is destroyed before it has a chance to be fully initialised.\n        this._parentKeyDownListener = () => {};\n    }\n\n    @HostListener(\"click\", [\"$event\"])\n    public onClick(e:HandledEvent & MouseEvent):void {\n        if (!e.eventHandled) {\n            e.eventHandled = true;\n\n            if (this._service.autoCloseMode === DropdownAutoCloseType.ItemClick) {\n                const target = e.target as IAugmentedElement;\n                if (this._element.nativeElement.contains(target.closest(\".item\")) && !/input|textarea/i.test(target.tagName)) {\n                    // Once an item is selected, we can close the entire dropdown.\n                    this._service.setOpenState(false, true);\n                }\n            }\n        }\n    }\n\n    public onParentKeyDown(e:KeyboardEvent):void {\n        // Only the root dropdown (i.e. not nested dropdowns) is responsible for keeping track of the currently selected item.\n        if (this._service && this._service.isOpen && !this._service.isNested) {\n            // Stop document events like scrolling while open.\n            const target = e.target as Element;\n            if (!/input/i.test(target.tagName) &&\n                [KeyCode.Escape, KeyCode.Enter, KeyCode.Up, KeyCode.Down, KeyCode.Left, KeyCode.Right].find(kC => kC === e.keyCode)) {\n                e.preventDefault();\n            }\n\n            // Gets the top selected item from the stack.\n            const [selected] = this.selectedItems.slice(-1);\n            // Keeping track of the menu containing the currently selected element allows us to easily determine its siblings.\n            let selectedContainer:SuiDropdownMenu = this;\n            if (this.selectedItems.length >= 2) {\n                const [selectedParent] = this.selectedItems.slice(-2);\n                selectedContainer = selectedParent.childDropdownMenu;\n            }\n\n            switch (e.keyCode) {\n                // Escape : close the entire dropdown.\n                case KeyCode.Escape: {\n                    this._service.setOpenState(false);\n                    break;\n                }\n                // Down : select the next item below the current one, or the 1st if none selected.\n                case KeyCode.Down:\n                // Up : select the next item above the current one, or the 1st if none selected.\n                case KeyCode.Up: {\n                    this.selectedItems.pop();\n                    this.selectedItems.push(selectedContainer.updateSelection(selected, e.keyCode));\n                    // Prevent default regardless of whether we are in an input, to stop jumping to the start or end of the query string.\n                    e.preventDefault();\n                    break;\n                }\n                // Enter : if the item doesn't contain a nested dropdown, 'click' it. Otherwise, fall through to 'Right' action.\n                case KeyCode.Enter: {\n                    if (selected && !selected.hasChildDropdown) {\n                        selected.performClick();\n                        break;\n                    }\n                }\n                    // falls through\n                // Right : if the selected item contains a nested dropdown, open the dropdown & select the 1st item.\n                case KeyCode.Right: {\n                    if (selected && selected.hasChildDropdown) {\n                        selected.childDropdownMenu.service.setOpenState(true);\n\n                        this.selectedItems.push(selected.childDropdownMenu.updateSelection(selected, e.keyCode));\n                    }\n                    break;\n                }\n                // Left : if the selected item is in a nested dropdown, close it and select the containing item.\n                case KeyCode.Left: {\n                    if (this.selectedItems.length >= 2) {\n                        this.selectedItems.pop();\n                        const [selectedParent] = this.selectedItems.slice(-1);\n\n                        selectedParent.childDropdownMenu.service.setOpenState(false);\n                        selectedParent.isSelected = true;\n                    }\n                    break;\n                }\n            }\n        }\n    }\n\n    public resetSelection():void {\n        this.selectedItems = [];\n        this._items.forEach(i => {\n            i.selectedClass = this.menuSelectedItemClass;\n            i.isSelected = false;\n        });\n\n        if (this.menuAutoSelectFirst && this._items.length > 0) {\n            // Autoselect 1st item if required & possible.\n            this._items[0].isSelected = true;\n            this.scrollToItem(this._items[0]);\n            this.selectedItems.push(this._itemsQuery.first);\n        }\n    }\n\n    // Determines the item to next be selected, based on the keyboard input & the currently selected item.\n    public updateSelection(selectedItem:SuiDropdownMenuItem, keyCode:KeyCode):SuiDropdownMenuItem {\n        if (selectedItem) {\n            // Remove the selected status on the previously selected item.\n            selectedItem.isSelected = false;\n        }\n\n        let selectedIndex = this._items\n            .findIndex(i => i === selectedItem);\n\n        let newSelection:SuiDropdownMenuItem;\n\n        switch (keyCode) {\n            case KeyCode.Enter:\n            case KeyCode.Right:\n            case KeyCode.Down:\n                selectedIndex += 1;\n                break;\n            case KeyCode.Up:\n                if (selectedIndex === -1) {\n                    // If none are selected, select the 1st item. Should this be `this.items.last - 1`?\n                    selectedIndex = 0;\n                    break;\n                }\n\n                selectedIndex -= 1;\n                break;\n        }\n\n        // Select the item at the updated index. The || is to stop us selecting past the start or end of the item list.\n        newSelection = this._items[selectedIndex] || selectedItem;\n\n        if (newSelection) {\n            // Set the selected status on the newly selected item.\n            newSelection.isSelected = true;\n\n            // Set the current scroll position to the location of the newly selected item.\n            this.scrollToItem(newSelection);\n        }\n\n        return newSelection;\n    }\n\n    public scrollToItem(item:SuiDropdownMenuItem):void {\n        const menu:Element = this._element.nativeElement;\n        const selectedRect:ClientRect = item.element.nativeElement.getBoundingClientRect();\n\n        const menuRect = menu.getBoundingClientRect();\n\n        let scrollAmount = 0;\n\n        if (selectedRect.bottom > menuRect.bottom) {\n            scrollAmount = selectedRect.bottom - menuRect.bottom;\n        }\n\n        if (selectedRect.top < menuRect.top) {\n            scrollAmount = selectedRect.top - menuRect.top;\n        }\n\n        menu.scrollTop += Math.round(scrollAmount);\n    }\n\n    public ngAfterContentInit():void {\n        this.onItemsChanged();\n        this._itemsQuery.changes.subscribe(() => this.onItemsChanged());\n    }\n\n    private onItemsChanged():void {\n        // We use `_items` rather than `items` in case one or more have become disabled.\n        this.resetSelection();\n    }\n\n    public ngOnDestroy():void {\n        this._parentKeyDownListener();\n    }\n}\n","import {\n    Directive, Input, HostBinding, EventEmitter, Output, AfterContentInit, ContentChild,\n    ElementRef, HostListener, QueryList, ContentChildren\n} from \"@angular/core\";\nimport { HandledEvent, KeyCode, IFocusEvent } from \"../../../misc/util/internal\";\nimport { DropdownService, DropdownAutoCloseType } from \"../services/dropdown.service\";\nimport { SuiDropdownMenu } from \"./dropdown-menu\";\n\n@Directive({\n    selector: \"[suiDropdown]\"\n})\nexport class SuiDropdown implements AfterContentInit {\n    public service:DropdownService;\n\n    @ContentChild(SuiDropdownMenu)\n    private _menu:SuiDropdownMenu;\n\n    @ContentChildren(SuiDropdown, { descendants: true })\n    private _children:QueryList<SuiDropdown>;\n\n    public get children():SuiDropdown[] {\n        // @ContentChildren includes the current element by default.\n        return this._children.filter(c => c !== this);\n    }\n\n    @Output()\n    public get isOpenChange():EventEmitter<boolean> {\n        return this.service.isOpenChange;\n    }\n\n    @HostBinding(\"class.active\")\n    public get isActive():boolean {\n        // This is to ensure nested dropdowns don't get made bold.\n        return this.service.isOpen && !this.service.isNested;\n    }\n\n    @Input()\n    public get isOpen():boolean {\n        return this.service.isOpen;\n    }\n\n    public set isOpen(value:boolean) {\n        // If we are opening the dropdown, we want to always open its parents.\n        this.service.setOpenState(value, !!value);\n    }\n\n    @HostBinding(\"class.disabled\")\n    @Input()\n    public get isDisabled():boolean {\n        return this.service.isDisabled;\n    }\n\n    public set isDisabled(value:boolean) {\n        this.service.setDisabledState(value);\n    }\n\n    @Input(\"tabindex\")\n    private _tabIndex?:number;\n\n    @HostBinding(\"attr.tabindex\")\n    public get tabIndex():number | undefined {\n        if (this.isDisabled || this.service.isNested) {\n            // If disabled, remove from tabindex.\n            return undefined;\n        }\n        if (this._tabIndex != undefined) {\n            // If custom tabindex, default to that.\n            return this._tabIndex;\n        }\n        // Otherwise, return default of 0.\n        return 0;\n    }\n\n    @Input()\n    public get autoClose():DropdownAutoCloseType {\n        return this.service.autoCloseMode;\n    }\n\n    public set autoClose(value:DropdownAutoCloseType) {\n        this.service.autoCloseMode = value;\n    }\n\n    constructor(private _element:ElementRef) {\n        this.service = new DropdownService();\n        this.service.isOpenChange.subscribe(() => {\n            if (this.service.isOpen) {\n                this._element.nativeElement.focus();\n            }\n        });\n    }\n\n    public ngAfterContentInit():void {\n        if (!this._menu) {\n            throw new Error(\"You must set [suiDropdownMenu] on the menu element.\");\n        }\n        this._menu.service = this.service;\n        this._menu.parentElement = this._element;\n\n        this.childrenUpdated();\n        this._children.changes\n            .subscribe(() => this.childrenUpdated());\n    }\n\n    private childrenUpdated():void {\n        // Reregister child dropdowns each time the menu content changes.\n        this.children\n            .map(c => c.service)\n            .forEach(s => this.service.registerChild(s));\n    }\n\n    @HostListener(\"click\", [\"$event\"])\n    public onClick(e:HandledEvent):void {\n        if (!e.eventHandled) {\n            e.eventHandled = true;\n\n            this.service.toggleOpenState();\n        }\n    }\n\n    @HostListener(\"focusout\", [\"$event\"])\n    public onFocusOut(e:IFocusEvent):void {\n        if (!this._element.nativeElement.contains(e.relatedTarget)) {\n            this.externallyClose();\n        }\n    }\n\n    @HostListener(\"keypress\", [\"$event\"])\n    public onKeypress(e:HandledEvent & KeyboardEvent):void {\n        // Block the keyboard event from being fired on parent dropdowns.\n        if (!e.eventHandled) {\n\n            if (e.keyCode === KeyCode.Enter) {\n                e.eventHandled = true;\n\n                this.service.setOpenState(true);\n            }\n        }\n    }\n\n    private externallyClose():void {\n        if (this.service.autoCloseMode === DropdownAutoCloseType.ItemClick ||\n                this.service.autoCloseMode === DropdownAutoCloseType.OutsideClick) {\n                // No need to reflect in parent since they are also bound to document.\n            this.service.setOpenState(false);\n        }\n    }\n}\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { SuiTransitionModule } from \"../transition/internal\";\nimport { SuiDropdown } from \"./directives/dropdown\";\nimport { SuiDropdownMenu, SuiDropdownMenuItem } from \"./directives/dropdown-menu\";\n\n@NgModule({\n    imports: [\n        CommonModule,\n        SuiTransitionModule\n    ],\n    declarations: [\n        SuiDropdown,\n        SuiDropdownMenu,\n        SuiDropdownMenuItem\n    ],\n    exports: [\n        SuiDropdown,\n        SuiDropdownMenu,\n        SuiDropdownMenuItem\n    ]\n})\nexport class SuiDropdownModule {}\n","import { ComponentRef } from \"@angular/core\";\nimport { ModalConfig } from \"./modal-config\";\nimport { SuiModal } from \"../components/modal\";\n\n// Helper class to support method chaining when calling `SuiModalService.open(...)`.\nexport class ActiveModal<T, U, V> {\n    private _config:ModalConfig<T, U, V>;\n    private _componentRef:ComponentRef<SuiModal<U, V>>;\n\n    // Shorthand for direct access to the `SuiModal` instance.\n    public get component():SuiModal<U, V> {\n        return this._componentRef.instance;\n    }\n\n    constructor(instance:ModalConfig<T, U, V>, componentRef:ComponentRef<SuiModal<U, V>>) {\n        this._config = instance;\n        this._componentRef = componentRef;\n\n        // Automatically destroy the modal component when it has been dismissed.\n        this.component.onDismiss.subscribe(() => this._componentRef.destroy());\n    }\n\n    // Registers a callback for when `onApprove` is fired.\n    public onApprove(callback:(result:U) => void):ActiveModal<T, U, V> {\n        this.component.onApprove.subscribe((res:U) => callback(res));\n        return this;\n    }\n\n    // Registers a callback for when `onDeny` is fired.\n    public onDeny(callback:(result:V) => void):ActiveModal<T, U, V> {\n        this.component.onDeny.subscribe((res:V) => callback(res));\n        return this;\n    }\n\n    // Fires the approve event of the modal manually.\n    public approve(result:U):void {\n        this.component.approve(result);\n    }\n\n    // Fires the deny event of the modal manually.\n    public deny(result:V):void {\n        this.component.deny(result);\n    }\n\n    // Removes the modal component instantly, without transitions or firing any events.\n    public destroy():void {\n        this._componentRef.destroy();\n    }\n}\n","import { Type } from \"@angular/core\";\nimport { ModalTemplate } from \"./modal-template\";\n\nexport type ModalSize = \"mini\" | \"tiny\" | \"small\" | \"normal\" | \"large\";\n\nexport const ModalSize = {\n    Mini: \"mini\" as ModalSize,\n    Tiny: \"tiny\" as ModalSize,\n    Small: \"small\" as ModalSize,\n    Normal: \"normal\" as ModalSize,\n    Large: \"large\" as ModalSize\n};\n\n// Stores a basic set of configuration options for a modal.\nexport class ModalConfig<T, U = undefined, V = undefined> {\n    // Determines whether the modal can be closed with a close button, clicking outside, or the escape key.\n    public isClosable:boolean;\n    // Value to deny with when closing via `isClosable`.\n    public closeResult:V;\n\n    // Data to pass to the modal instance when opened.\n    public context?:T;\n\n    // Size used to display the modal.\n    public size:ModalSize;\n    // Whether the modal takes up the full width of the screen.\n    public isFullScreen:boolean;\n    // Whether or not the modal has basic styles applied.\n    public isBasic:boolean;\n    // Whether the modal shows against a light background.\n    public isInverted:boolean;\n    // Whether or not the modal should be placed in the center of the page.\n    public isCentered:boolean;\n\n    // Whether or not the modal should always display a scrollbar.\n    public mustScroll:boolean;\n\n    // Transition to display modal with.\n    public transition:string;\n    // Duration of the modal & dimmer transitions.\n    public transitionDuration:number;\n\n    constructor(context:T | undefined = undefined, isClosable:boolean = true) {\n        // Initialise with default values.\n        this.isClosable = isClosable;\n        this.context = context;\n\n        this.size = ModalSize.Normal;\n        this.isFullScreen = false;\n        this.isBasic = false;\n        this.isInverted = false;\n        this.isCentered = true;\n\n        this.mustScroll = false;\n\n        this.transition = \"scale\";\n        this.transitionDuration = 500;\n    }\n}\n\n// Used when creating a modal from a `TemplateRef`.\nexport class TemplateModalConfig<T, U = undefined, V = undefined> extends ModalConfig<T, U, V> {\n    public template:ModalTemplate<T, U, V>;\n\n    constructor(template:ModalTemplate<T, U, V>, context:T | undefined = undefined, isClosable:boolean = true) {\n        super(context, isClosable);\n\n        this.template = template;\n    }\n}\n\n// Used when creating a modal from an existing component.\nexport class ComponentModalConfig<T, U = undefined, V = undefined> extends ModalConfig<T, U, V> {\n    public component:Type<any>;\n\n    constructor(component:Type<any>, context:T | undefined = undefined, isClosable:boolean = true) {\n        super(context, isClosable);\n\n        this.component = component;\n    }\n}\n","// Shorthand to avoid writing arrow types everywhere.\nexport type ModalResult<T> = (result:T) => void;\n\n// Used to pass ability to control a modal to a component.\nexport class ModalControls<T, U> {\n    constructor(approve:ModalResult<T>, deny:ModalResult<U>) {\n        this.approve = approve;\n        this.deny = deny;\n    }\n\n    // Use method here rather than arrow variables to make intellisense show they're methods.\n    public approve(result:T):void {}\n    public deny(result:U):void {}\n}\n\n// Injected into custom modal components, to allow control of the modal, and access to a context object.\nexport class Modal<T, U = undefined, V = undefined> extends ModalControls<U, V> {\n    public context:T;\n\n    constructor(controls:ModalControls<U, V>, context:T) {\n        // Instances of `ModalControls` are only created in the `SuiModal` constructor,\n        // so we take an initialised instance rather than remaking one each time.\n        super(controls.approve, controls.deny);\n\n        this.context = context;\n    }\n}\n","import { TemplateRef } from \"@angular/core\";\nimport { ModalControls } from \"./modal-controls\";\n\n// Shorthand for a modal template. Sets up ability to write: `<ng-template let-context let-modal=\"modal\">...</ng-template>`\n// We use an abstract class as ModalTemplate tends to be used within decorated properties, which means it needs to exist!\nexport abstract class ModalTemplate<T, U, V> extends TemplateRef<{ $implicit:T; modal:ModalControls<U, V> }> {}\n","import {\n    Component, Input, OnInit, ViewChild, ElementRef, Renderer2,\n    EventEmitter, Output, HostListener, ViewContainerRef, AfterViewInit\n} from \"@angular/core\";\nimport { Util, IDynamicClasses, KeyCode, SuiComponentFactory } from \"../../../misc/util/internal\";\nimport { TransitionController, Transition, TransitionDirection } from \"../../transition/internal\";\nimport { ModalControls, ModalResult } from \"../classes/modal-controls\";\nimport { ModalConfig, ModalSize } from \"../classes/modal-config\";\n\n@Component({\n    selector: \"sui-modal\",\n    template: `\n<!-- Page dimmer for modal background. -->\n<sui-modal-dimmer [ngClass]=\"{'top aligned': !isCentered}\" \n                  [class.inverted]=\"isInverted\"\n                  [(isDimmed)]=\"dimBackground\"\n                  [transitionDuration]=\"transitionDuration\"\n                  (click)=\"close()\">\n\n    <!-- Modal component, with transition component attached -->\n    <div class=\"ui modal\"\n         [suiTransition]=\"transitionController\"\n         [class.active]=\"transitionController?.isVisible\"\n         [class.fullscreen]=\"isFullScreen\"\n         [class.basic]=\"isBasic\"\n         [class.scrolling]=\"mustScroll\"\n         [class.inverted]=\"isInverted\"\n         [ngClass]=\"dynamicClasses\"\n         (click)=\"onClick($event)\"\n         #modal>\n\n        <!-- Configurable close icon -->\n        <i class=\"close icon\" *ngIf=\"isClosable\" (click)=\"close()\"></i>\n        <!-- <ng-content> so that <sui-modal> can be used as a normal component. -->\n        <ng-content></ng-content>\n        <!-- @ViewChild reference so we can insert elements beside this div. -->\n        <div #templateSibling></div>\n    </div>\n</sui-modal-dimmer>\n`,\n    styles: [``]\n})\nexport class SuiModal<T, U> implements OnInit, AfterViewInit {\n    @Input()\n    // Determines whether the modal can be closed with a close button, clicking outside, or the escape key.\n    public isClosable:boolean;\n\n    @Input()\n    // Value to deny with when closing via `isClosable`.\n    public closeResult:U;\n\n    // Separate class for the `approve` and `deny` methods to support passing into components.\n    public controls:ModalControls<T, U>;\n\n    public get approve():ModalResult<T> {\n        return this.controls.approve;\n    }\n\n    public get deny():ModalResult<U> {\n        return this.controls.deny;\n    }\n\n    // Fires when the modal closes, after `approve` has been called.\n    @Output(\"approved\")\n    public onApprove:EventEmitter<T>;\n\n    // Fires when the modal closes, after `deny` has been called.\n    @Output(\"denied\")\n    public onDeny:EventEmitter<U>;\n\n    // Fires when the modal closes.\n    @Output(\"dismissed\")\n    public onDismiss:EventEmitter<void>;\n\n    @ViewChild(\"modal\")\n    private _modalElement:ElementRef;\n\n    // Size used to display the modal.\n    @Input()\n    public size:ModalSize;\n\n    @Input()\n    public isCentered:boolean;\n\n    // Whether the modal takes up the full width of the screen.\n    private _isFullScreen:boolean;\n\n    // Value to deny with when closing via `isClosable`.\n    @Input()\n    public get isFullScreen():boolean {\n        return this._isFullScreen;\n    }\n\n    public set isFullScreen(fullScreen:boolean) {\n        this._isFullScreen = Util.DOM.parseBooleanAttribute(fullScreen);\n    }\n\n    // Whether or not the modal has basic styles applied.\n    @Input()\n    public isBasic:boolean;\n\n    // Whether the modal currently is displaying a scrollbar.\n    private _mustScroll:boolean;\n    // Whether or not the modal should always display a scrollbar.\n    private _mustAlwaysScroll:boolean;\n\n    @Input()\n    public get mustScroll():boolean {\n        return this._mustScroll;\n    }\n\n    public set mustScroll(mustScroll:boolean) {\n        this._mustScroll = mustScroll;\n        // 'Cache' value in _mustAlwaysScroll so that if `true`, _mustScroll isn't ever auto-updated.\n        this._mustAlwaysScroll = mustScroll;\n        this.updateScroll();\n    }\n\n    // Whether the modal shows against a light background.\n    private _isInverted:boolean;\n\n    @Input()\n    public get isInverted():boolean {\n        return this._isInverted;\n    }\n\n    public set isInverted(inverted:boolean) {\n        this._isInverted = Util.DOM.parseBooleanAttribute(inverted);\n    }\n\n    public transitionController:TransitionController;\n\n    // Transition to display modal with.\n    @Input()\n    public transition:string;\n\n    // Duration of the modal & dimmer transitions.\n    @Input()\n    public transitionDuration:number;\n\n    // Whether or not the backround dimmer is active.\n    public dimBackground:boolean;\n    // True after `approve` or `deny` has been called.\n    private _isClosing:boolean;\n\n    // `ViewContainerRef` for the element the template gets injected as a sibling of.\n    @ViewChild(\"templateSibling\", { read: ViewContainerRef })\n    public templateSibling:ViewContainerRef;\n\n    // Parent element of modal before relocation to document body.\n    private _originalContainer?:Element;\n\n    public get dynamicClasses():IDynamicClasses {\n        const classes:IDynamicClasses = {};\n        if (this.size) {\n            classes[this.size] = true;\n        }\n        return classes;\n    }\n\n    constructor(private _renderer:Renderer2, private _element:ElementRef, private _componentFactory:SuiComponentFactory) {\n        // Initialise with default configuration from `ModalConfig` (to avoid writing defaults twice).\n        const config = new ModalConfig<undefined, T, U>();\n        this.loadConfig(config);\n\n        // Event emitters for each of the possible modal outcomes.\n        this.onApprove = new EventEmitter<T>();\n        this.onDeny = new EventEmitter<U>();\n        this.onDismiss = new EventEmitter<void>();\n\n        // Initialise controls with actions for the `approve` and `deny` cases.\n        this.controls = new ModalControls<T, U>(\n            res => this.dismiss(() => this.onApprove.emit(res)),\n            res => this.dismiss(() => this.onDeny.emit(res)));\n\n        // Internal variable initialisation.\n        this.dimBackground = false;\n        this._isClosing = false;\n        this.transitionController = new TransitionController(false);\n    }\n\n    public ngOnInit():void {\n        // Transition the modal to be visible.\n        this.transitionController.animate(new Transition(this.transition, this.transitionDuration, TransitionDirection.In));\n        setTimeout(() => this.dimBackground = true);\n    }\n\n    public ngAfterViewInit():void {\n        // Move the modal to the document body to ensure correct scrolling.\n        this._originalContainer = this._element.nativeElement.parentNode;\n        document.querySelector(\"body\")!.appendChild(this._element.nativeElement);\n        // Remove the #templateSibling element from the DOM to fix bottom border styles.\n        const templateElement = this.templateSibling.element.nativeElement as Element;\n        if (templateElement.parentNode) {\n            templateElement.parentNode.removeChild(templateElement);\n        }\n\n        const element = this._modalElement.nativeElement as Element;\n        setTimeout(() => this.updateScroll());\n\n        // Focus any element with [autofocus] attribute.\n        const autoFocus = element.querySelector(\"[autofocus]\") as HTMLElement | null;\n        if (autoFocus) {\n            // Autofocus after the browser has had time to process other event handlers.\n            setTimeout(() => autoFocus.focus(), 10);\n            // Try to focus again when the modal has opened so that autofocus works in IE11.\n            setTimeout(() => autoFocus.focus(), this.transitionDuration);\n        }\n    }\n\n    // Updates the modal with the specified configuration.\n    public loadConfig<V>(config:ModalConfig<V, T, U>):void {\n        this.isClosable = config.isClosable;\n        this.closeResult = config.closeResult;\n\n        this.size = config.size;\n        this.isFullScreen = config.isFullScreen;\n        this.isBasic = config.isBasic;\n        this.isInverted = config.isInverted;\n        this.isCentered = config.isCentered;\n\n        this.mustScroll = config.mustScroll;\n\n        this.transition = config.transition;\n        this.transitionDuration = config.transitionDuration;\n    }\n\n    // Dismisses the modal with a transition, firing the callback after the modal has finished transitioning.\n    private dismiss(callback:() => void = () => {}):void {\n        // If we aren't currently closing,\n        if (!this._isClosing) {\n            this._isClosing = true;\n\n            // Transition the modal to be invisible.\n            this.dimBackground = false;\n            this.transitionController.stopAll();\n            this.transitionController.animate(\n                new Transition(this.transition, this.transitionDuration, TransitionDirection.Out, () => {\n                    // When done, move the modal back to its original location, emit a dismiss event, and fire the callback.\n                    if (this._originalContainer) {\n                        this._originalContainer.appendChild(this._element.nativeElement);\n                    }\n                    this.onDismiss.emit();\n                    callback();\n                }));\n        }\n    }\n\n    // Closes the modal with a 'deny' outcome, using the specified default reason.\n    public close():void {\n        if (this.isClosable) {\n            // If we are allowed to close, fire the deny result with the default value.\n            this.deny(this.closeResult);\n        }\n    }\n\n    // Decides whether the modal needs to reposition to allow scrolling.\n    private updateScroll():void {\n\n        // _mustAlwaysScroll works by stopping _mustScroll from being automatically updated, so it stays `true`.\n        if (!this._mustAlwaysScroll && this._modalElement) {\n\n            // Semantic UI modal margin and dimmer padding are 1rem, which is relative to the global font size, so for compatibility:\n            const fontSize = parseFloat(window.getComputedStyle(document.documentElement).getPropertyValue(\"font-size\"));\n            const margin = fontSize * 2;\n            const element = this._modalElement.nativeElement as Element;\n\n            // The modal must scroll if the window height is smaller than the modal height + both margins.\n            this._mustScroll = window.innerHeight < element.clientHeight + margin * 2;\n        }\n    }\n\n    public onClick(e:MouseEvent):void {\n        // Makes sense here, as the modal shouldn't be attached to any DOM element.\n        e.stopPropagation();\n    }\n\n    // Document listener is fine here because nobody will have enough modals open.\n    @HostListener(\"document:keyup\", [\"$event\"])\n    public onDocumentKeyUp(e:KeyboardEvent):void {\n        if (e.keyCode === KeyCode.Escape) {\n            // Close automatically covers case of `!isClosable`, so check not needed.\n            this.close();\n        }\n    }\n\n    @HostListener(\"window:resize\")\n    public onDocumentResize():void {\n        this.updateScroll();\n    }\n}\n","import { Injectable } from \"@angular/core\";\nimport { SuiComponentFactory } from \"../../../misc/util/internal\";\nimport { ModalConfig, TemplateModalConfig, ComponentModalConfig } from \"../classes/modal-config\";\nimport { SuiModal } from \"../components/modal\";\nimport { Modal } from \"../classes/modal-controls\";\nimport { ActiveModal } from \"../classes/active-modal\";\n\n@Injectable()\nexport class SuiModalService {\n    constructor(private _componentFactory:SuiComponentFactory) {}\n\n    public open<T, U, V>(modal:ModalConfig<T, U, V>):ActiveModal<T, U, V> {\n        // Generate the modal component to be shown.\n        const componentRef = this._componentFactory.createComponent<SuiModal<U, V>>(SuiModal);\n\n        // Shorthand for the created modal component instance.\n        const modalComponent = componentRef.instance;\n\n        if (modal instanceof TemplateModalConfig) {\n            // Inject the template into the view.\n            this._componentFactory.createView(modalComponent.templateSibling, modal.template, {\n                // `let-context`\n                $implicit: modal.context,\n                // `let-modal=\"modal\"`\n                modal: componentRef.instance.controls\n            });\n        } else if (modal instanceof ComponentModalConfig) {\n            // Generate the component to be used as the modal content,\n            // injecting an instance of `Modal` to be used in the component constructor.\n            const contentComponentRef = this._componentFactory.createComponent(\n                modal.component,\n                [\n                    {\n                        provide: Modal,\n                        useValue: new Modal(modalComponent.controls, modal.context)\n                    }\n                ]\n            );\n\n            // Insert the new component into the content of the modal.\n            this._componentFactory.attachToView(contentComponentRef, modalComponent.templateSibling);\n\n            // Shorthand for access to the content component's DOM element.\n            const contentElement = contentComponentRef.location.nativeElement as Element;\n\n            // Move all of the DOM elements inside the component to the main modal element.\n            // This is done so that CSS classes apply correctly. It does stop any custom styles from working however,\n            // so other ways may have to be investigated.\n            while (contentElement.hasChildNodes() && contentElement.parentElement && contentElement.firstChild) {\n                contentElement.parentElement.appendChild(contentElement.removeChild(contentElement.firstChild));\n            }\n            // Remove the generated component's 'empty shell' from the DOM.\n            this._componentFactory.detachFromDocument(contentComponentRef);\n        }\n\n        // Attach the new modal component to the application.\n        // The component will move itself to the document body for correctl styling.\n        this._componentFactory.attachToApplication(componentRef);\n\n        // Initialise the generated modal with the provided config.\n        modalComponent.loadConfig(modal);\n\n        // Return an instance of an `ActiveModal`, so the user can control the new modal.\n        return new ActiveModal(modal, componentRef);\n    }\n}\n","import { Component, HostBinding, Renderer2, ElementRef, ChangeDetectorRef } from \"@angular/core\";\nimport { SuiDimmer } from \"../../dimmer/internal\";\n\n@Component({\n    selector: \"sui-modal-dimmer\",\n    template: `<ng-content></ng-content>`,\n    styles: [`\n        :host.ui.dimmer:not(.hidden) {\n            transition: none;\n            overflow-y: auto;\n            display: flex !important; \n        }\n    `]\n})\nexport class SuiModalDimmer extends SuiDimmer {\n\n    @HostBinding(\"class.page\")\n    @HostBinding(\"class.modals\")\n    public readonly hasClasses:boolean;\n\n    constructor(renderer:Renderer2, element:ElementRef, changeDetector:ChangeDetectorRef) {\n        super(renderer, element, changeDetector);\n        this.hasClasses = true;\n        this.isClickable = false;\n    }\n}\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { SuiDimmerModule } from \"../dimmer/internal\";\nimport { SuiTransitionModule } from \"../transition/internal\";\nimport { SuiUtilityModule } from \"../../misc/util/internal\";\nimport { SuiModalService } from \"./services/modal.service\";\nimport { SuiModal } from \"./components/modal\";\nimport { SuiModalDimmer } from \"./components/dimmer\";\n\n@NgModule({\n    imports: [\n        CommonModule,\n        SuiDimmerModule,\n        SuiTransitionModule,\n        SuiUtilityModule\n    ],\n    declarations: [\n        SuiModal,\n        SuiModalDimmer\n    ],\n    exports: [\n        SuiModal\n    ],\n    providers: [\n        SuiModalService\n    ],\n    entryComponents: [\n        SuiModal\n    ]\n})\nexport class SuiModalModule {}\n","import { Component, Input, HostBinding } from \"@angular/core\";\n\n@Component({\n    selector: \"sui-progress\",\n    template: `\n<div class=\"bar\" [style.width.%]=\"percentage\">\n    <div class=\"progress\" *ngIf=\"showProgress\">{{ percentage }}%</div>\n</div>\n<div class=\"label\">\n    <ng-content></ng-content>\n</div>\n`,\n    styles: [`\n.bar {\n    transition-duration: 300ms !important;\n    z-index: 1;\n}\n`]\n})\nexport class SuiProgress {\n    @HostBinding(\"class.ui\")\n    @HostBinding(\"class.progress\")\n    public readonly hasClasses:boolean;\n\n    private _value:number;\n    private _maximum:number;\n    private _precision:number;\n\n    private _overrideSuccess:boolean;\n\n    @Input()\n    public autoSuccess:boolean;\n\n    @Input()\n    public showProgress:boolean;\n\n    @Input()\n    public get value():number {\n        return this._value;\n    }\n\n    public set value(value:number) {\n        // Convert value from string to number where necessary.\n        const converted = +value;\n\n        if (Number.isNaN(converted)) {\n            return;\n        }\n\n        this._value = converted;\n    }\n\n    @Input()\n    public get maximum():number {\n        return this._maximum;\n    }\n\n    public set maximum(value:number) {\n        // Convert value from string to number where necessary.\n        const converted = +value;\n\n        if (Number.isNaN(converted)) {\n            return;\n        }\n\n        this._maximum = converted;\n    }\n\n    @Input()\n    public get precision():number {\n        return this._precision;\n    }\n\n    public set precision(value:number) {\n        // Convert value from string to number where necessary.\n        const converted = +value;\n\n        if (Number.isNaN(converted)) {\n            return;\n        }\n\n        this._precision = Math.min(Math.max(converted, 0), 20);\n    }\n\n    @HostBinding(\"class.success\")\n    public get reachedMaximum():boolean {\n        return this._overrideSuccess || ((this.value >= this.maximum) && this.autoSuccess);\n    }\n\n    @HostBinding(\"attr.data-percent\")\n    public get percentage():string {\n        const boundedValue = Math.min(Math.max(this.value, 0), this.maximum);\n\n        const percentage = (boundedValue / this.maximum) * 100;\n\n        return percentage.toFixed(this.precision);\n    }\n\n    @Input(\"class\")\n    public set classValue(classes:string) {\n        if (classes.includes(\"attached\") || classes.includes(\"tiny\")) {\n            this.showProgress = false;\n        }\n        if (classes.includes(\"success\")) {\n            this._overrideSuccess = true;\n        }\n    }\n\n    constructor() {\n        this.value = 0;\n        this.maximum = 100;\n        this.precision = 0;\n\n        this._overrideSuccess = false;\n        this.autoSuccess = true;\n        this.showProgress = true;\n\n        this.hasClasses = true;\n    }\n}\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { SuiProgress } from \"./components/progress\";\n\n@NgModule({\n    imports: [\n        CommonModule\n    ],\n    declarations: [\n        SuiProgress\n    ],\n    exports: [\n        SuiProgress\n    ]\n})\nexport class SuiProgressModule {}\n","import { Component, Directive, Input, Output, EventEmitter, HostBinding, HostListener } from \"@angular/core\";\nimport { ICustomValueAccessorHost, customValueAccessorFactory, CustomValueAccessor } from \"../../../misc/util/internal\";\n\n@Component({\n    selector: \"sui-rating\",\n    template: `\n<i class=\"icon\"\n   *ngFor=\"let icon of icons; let i = index\"\n   (mouseover)=\"onMouseover(i)\"\n   (click)=\"onClick(i)\"\n   [class.selected]=\"hoveredIndex >= i && !isReadonly\"\n   [class.active]=\"value > i\">\n</i>\n`,\n    styles: [`\n:host.read-only .icon {\n    cursor: auto\n}\n`]\n})\nexport class SuiRating implements ICustomValueAccessorHost<number> {\n    @HostBinding(\"class.ui\")\n    @HostBinding(\"class.rating\")\n    public readonly hasClasses:boolean;\n\n    public value:number;\n\n    @Output()\n    public valueChange:EventEmitter<number>;\n\n    private _maximum:number;\n\n    @Input()\n    public get maximum():number {\n        return this._maximum;\n    }\n\n    public set maximum(value:number) {\n        this._maximum = +value;\n    }\n\n    @HostBinding(\"class.read-only\")\n    @Input()\n    public isReadonly:boolean;\n\n    public get icons():undefined[] {\n        // tslint:disable-next-line:prefer-literal\n        return new Array(this.maximum);\n    }\n\n    public hoveredIndex:number = -1;\n\n    constructor() {\n        this.value = 0;\n        this.valueChange = new EventEmitter<number>();\n\n        this.maximum = 5;\n        this.isReadonly = false;\n\n        this.hasClasses = true;\n    }\n\n    public onClick(i:number):void {\n        if (!this.isReadonly) {\n            this.value = i + 1;\n            this.valueChange.emit(this.value);\n        }\n    }\n\n    public onMouseover(i:number):void {\n        this.hoveredIndex = i;\n    }\n\n    @HostListener(\"mouseout\")\n    public onMouseout():void {\n        this.hoveredIndex = -1;\n    }\n\n    public writeValue(value:number):void {\n        this.value = value;\n    }\n}\n\n@Directive({\n    selector: \"sui-rating\",\n    host: { \"(valueChange)\": \"onChange($event)\" },\n    providers: [customValueAccessorFactory(SuiRatingValueAccessor)]\n})\nexport class SuiRatingValueAccessor extends CustomValueAccessor<number, SuiRating> {\n    constructor(host:SuiRating) {\n        super(host);\n    }\n}\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { FormsModule } from \"@angular/forms\";\nimport { SuiRating, SuiRatingValueAccessor } from \"./components/rating\";\n\n@NgModule({\n    imports: [\n        FormsModule,\n        CommonModule\n    ],\n    declarations: [\n        SuiRating,\n        SuiRatingValueAccessor\n    ],\n    exports: [\n        SuiRating,\n        SuiRatingValueAccessor\n    ]\n})\nexport class SuiRatingModule {}\n","import {\n    Component, ViewChild, ViewContainerRef, Renderer2, ElementRef, HostBinding,\n    Input, TemplateRef\n} from \"@angular/core\";\nimport { ITemplateRefContext, SuiComponentFactory } from \"../../../misc/util/internal\";\nimport { IResultContext } from \"./search\";\n\n// See https://github.com/Microsoft/TypeScript/issues/13449.\nconst templateRef = TemplateRef;\n\n@Component({\n    selector: \"sui-search-result\",\n    template: `\n<span #templateSibling></span>\n<span *ngIf=\"!template\" [innerHTML]=\"formatter(value, query)\"></span>\n`\n})\nexport class SuiSearchResult<T> {\n    // Sets the Semantic UI classes on the host element.\n    @HostBinding(\"class.result\")\n    public readonly hasClasses:boolean;\n\n    @Input()\n    public value:T;\n\n    @Input()\n    public query:string;\n\n    // Returns the label from a given value.\n    @Input()\n    public formatter:(obj:T, query:string) => string;\n\n    private _template?:TemplateRef<IResultContext<T>>;\n\n    @Input()\n    public get template():TemplateRef<IResultContext<T>> | undefined {\n        return this._template;\n    }\n\n    public set template(template:TemplateRef<IResultContext<T>> | undefined) {\n        this._template = template;\n        if (this.template) {\n            this.componentFactory.createView(this.templateSibling, this.template, {\n                $implicit: this.value,\n                query: this.query\n            });\n        }\n    }\n\n    // Placeholder to draw template beside.\n    @ViewChild(\"templateSibling\", { read: ViewContainerRef })\n    public templateSibling:ViewContainerRef;\n\n    constructor(public componentFactory:SuiComponentFactory) {\n        this.hasClasses = true;\n\n        // By default we make this function return an empty string, for the brief moment when it isn't displaying the correct label.\n        this.formatter = value => \"\";\n    }\n}\n","import { Util } from \"../../../misc/util/internal\";\nimport { LookupFn, LookupFnResult, FilterFn } from \"../helpers/lookup-fn\";\n\ninterface ICachedArray<T> { [query:string]:T[]; }\n\nexport class SearchService<T, U> {\n    // Stores the available options.\n    private _options:T[];\n    // Converts a query string into an array of options. Must be a function returning a promise.\n    private _optionsLookup?:LookupFn<T, U>;\n    // Field that options are searched & displayed on.\n    private _optionsField?:string;\n    // Filters a list of options.\n    public optionsFilter:FilterFn<T>;\n\n    public get options():T[] {\n        return this._options;\n    }\n\n    public set options(options:T[]) {\n        this._options = options || [];\n        // We cannot use both local & remote options simultaneously.\n        this._optionsLookup = undefined;\n        // Reset entire service with new options.\n        this.reset();\n    }\n\n    public get optionsLookup():LookupFn<T, U> | undefined {\n        return this._optionsLookup;\n    }\n\n    public set optionsLookup(lookupFn:LookupFn<T, U> | undefined) {\n        this._optionsLookup = lookupFn;\n        // As before, cannot use local & remote options simultaneously.\n        this._options = [];\n        this.reset();\n    }\n\n    public get hasItemLookup():boolean {\n        return !!this.optionsLookup && this.optionsLookup.length === 2;\n    }\n\n    public get optionsField():string | undefined {\n        return this._optionsField;\n    }\n\n    public set optionsField(field:string | undefined) {\n        this._optionsField = field;\n        // We need to reset otherwise we would now be showing invalid search results.\n        this.reset();\n    }\n\n    // Stores the results of the query.\n    private _results:T[];\n    // Cache of results, indexed by query.\n    private _resultsCache:ICachedArray<T>;\n\n    public get results():T[] {\n        return this._results;\n    }\n\n    private _query:string;\n    // Allows the empty query to produce results.\n    public allowEmptyQuery:boolean;\n    // How long to delay the search for when using updateQueryDelayed. Stored in ms.\n    public searchDelay:number;\n    // Stores the search timeout handle so we can cancel it.\n    private _searchDelayTimeout:number;\n    // Provides 'loading' functionality.\n    private _isSearching:boolean;\n\n    public get query():string {\n        return this._query;\n    }\n\n    public get isSearching():boolean {\n        return this._isSearching;\n    }\n\n    constructor(allowEmptyQuery:boolean = false) {\n        this._options = [];\n        this.optionsFilter = (os, q) => {\n            // Convert the query string to a RegExp.\n            const regex = this.toRegex(this._query);\n\n            if (regex instanceof RegExp) {\n                // Only update the results if the query was valid regex.\n                // This avoids the results suddenly becoming empty if an invalid regex string is inputted.\n                return os\n                    // Filter on the options with a string match on the field we are testing.\n                    .filter(o => Util.Object.readValue<T, string>(o, this._optionsField)\n                        .toString()\n                        .match(regex));\n            }\n\n            // Don't update since it wasn't a valid regex.\n            return false;\n        };\n\n        // Set default values and reset.\n        this.allowEmptyQuery = allowEmptyQuery;\n        this.searchDelay = 0;\n        this.reset();\n    }\n\n    // Updates the query after the specified search delay.\n    public updateQueryDelayed(query:string, callback:(err?:Error) => void = () => {}):void {\n        this._query = query;\n\n        clearTimeout(this._searchDelayTimeout);\n        this._searchDelayTimeout = window.setTimeout(\n            () => {\n                this.updateQuery(query, callback);\n            },\n            this.searchDelay\n        );\n    }\n\n    // Updates the current search query.\n    public updateQuery(query:string, callback:(err?:Error) => void = () => {}):void {\n        this._query = query;\n\n        if (this._query === \"\" && !this.allowEmptyQuery) {\n            // Don't update if the new query is empty (and we don't allow empty queries).\n            // Don't reset so that when animating closed we don't get a judder.\n            return callback();\n        }\n\n        if (this._resultsCache.hasOwnProperty(this._query)) {\n            // If the query is already cached, make use of it.\n            this._results = this._resultsCache[this._query];\n\n            return callback();\n        }\n\n        if (this._optionsLookup) {\n            this._isSearching = true;\n\n            // Call the options lookup without a this context.\n            const queryLookup = this._optionsLookup.call(undefined, this._query) as LookupFnResult<T[]>;\n\n            queryLookup\n                .then(results => {\n                    this._isSearching = false;\n\n                    this.updateResults(results);\n                    return callback();\n                })\n                .catch(error => {\n                    // Unset 'loading' state, and throw the returned error without updating the results.\n                    this._isSearching = false;\n                    return callback(error);\n                });\n\n            return;\n        }\n\n        const filtered = this.optionsFilter.call(undefined, this._options, this._query);\n        if (filtered) {\n            this.updateResults(filtered);\n        }\n        return callback();\n    }\n\n    // Updates & caches the new set of results.\n    private updateResults(results:T[]):void {\n        this._resultsCache[this._query] = results;\n        this._results = results;\n    }\n\n    // tslint:disable-next-line:promise-function-async\n    public initialLookup(initial:U):LookupFnResult<T>;\n    // tslint:disable-next-line:promise-function-async\n    public initialLookup(initial:U[]):LookupFnResult<T[]>;\n    // tslint:disable-next-line:promise-function-async\n    public initialLookup(initial:U | U[]):LookupFnResult<T> | LookupFnResult<T[]> {\n        if (initial instanceof Array) {\n            return (this._optionsLookup as LookupFn<T, U[]>)(undefined, initial) as LookupFnResult<T[]>;\n        }\n        return (this._optionsLookup as LookupFn<T, U>)(undefined, initial) as LookupFnResult<T>;\n    }\n\n    // Converts a query string to regex without throwing an error.\n    private toRegex(query:string):RegExp | string {\n        try {\n            return new RegExp(query, \"i\");\n        } catch (e) {\n            return query;\n        }\n    }\n\n    // Generates HTML for highlighted match text.\n    public highlightMatches(text:string, query:string):string {\n        const regex = this.toRegex(query);\n        if (regex instanceof RegExp) {\n            return text.replace(regex, match => `<b>${match}</b>`);\n        }\n        return text;\n    }\n\n    // Resets the search back to a pristine state.\n    private reset():void {\n        this._results = [];\n        this._resultsCache = {};\n        this._isSearching = false;\n        this.updateQuery(\"\");\n    }\n}\n","import {\n    Component, ViewChild, HostBinding, Input, AfterViewInit, HostListener,\n    EventEmitter, Output, Directive, ElementRef, TemplateRef, Renderer2\n} from \"@angular/core\";\nimport { Util, ITemplateRefContext, IFocusEvent } from \"../../../misc/util/internal\";\nimport { DropdownService, SuiDropdownMenu } from \"../../dropdown/internal\";\nimport { ISearchLocaleValues, RecursivePartial, SuiLocalizationService } from \"../../../behaviors/localization/internal\";\nimport { SearchService } from \"../services/search.service\";\nimport { LookupFn, FilterFn } from \"../helpers/lookup-fn\";\n\nexport interface IResultContext<T> extends ITemplateRefContext<T> {\n    query:string;\n}\n\n@Component({\n    selector: \"sui-search\",\n    template: `\n<div class=\"ui input\" [class.icon]=\"hasIcon\" (click)=\"onClick($event)\">\n    <input class=\"prompt\" type=\"text\" [attr.placeholder]=\"placeholder\" autocomplete=\"off\" [(ngModel)]=\"query\">\n    <i *ngIf=\"hasIcon\" class=\"search icon\"></i>\n</div>\n<div class=\"results\"\n     suiDropdownMenu\n     [menuTransition]=\"transition\"\n     [menuTransitionDuration]=\"transitionDuration\"\n     menuSelectedItemClass=\"active\">\n\n    <sui-search-result *ngFor=\"let r of results\"\n                       class=\"item\"\n                       [value]=\"r\"\n                       [query]=\"query\"\n                       [formatter]=\"resultFormatter\"\n                       [template]=\"resultTemplate\"\n                       (click)=\"select(r)\"></sui-search-result>\n\n    <div *ngIf=\"results.length == 0\" class=\"message empty\">\n        <div class=\"header\">{{ localeValues.noResults.header }}</div>\n        <div class=\"description\">{{ localeValues.noResults.message }}</div>\n    </div>\n</div>\n`,\n    styles: [`\n/* Ensures results div has margin. */\n:host {\n    display: inline-block;\n    outline: 0;\n}\n\n/* Fixes positioning when results are pushed above the search. */\n.results {\n    margin-bottom: .5em;\n}\n`]\n})\nexport class SuiSearch<T> implements AfterViewInit {\n    public dropdownService:DropdownService;\n    public searchService:SearchService<T, T>;\n\n    @ViewChild(SuiDropdownMenu)\n    private _menu:SuiDropdownMenu;\n\n    // Sets the Semantic UI classes on the host element.\n    // Doing it on the host enables use in menus etc.\n    @HostBinding(\"class.ui\")\n    @HostBinding(\"class.search\")\n    public readonly hasClasses:boolean;\n\n    @HostBinding(\"attr.tabindex\")\n    public readonly tabindex:number;\n\n    @HostBinding(\"class.active\")\n    public get isActive():boolean {\n        return this.dropdownService.isOpen;\n    }\n\n    // Sets whether the search element has a visible search icon.\n    @Input()\n    public hasIcon:boolean;\n\n    private _placeholder:string;\n\n    // Gets & sets the placeholder text displayed inside the text input.\n    @Input()\n    public get placeholder():string {\n        return this._placeholder || this.localeValues.placeholder;\n    }\n\n    public set placeholder(placeholder:string) {\n        this._placeholder = placeholder;\n    }\n\n    private _localeValues:ISearchLocaleValues;\n\n    public localeOverrides:RecursivePartial<ISearchLocaleValues>;\n\n    public get localeValues():ISearchLocaleValues {\n        return this._localizationService.override<\"search\">(this._localeValues, this.localeOverrides);\n    }\n\n    public get query():string {\n        return this.searchService.query;\n    }\n\n    public set query(query:string) {\n        this.selectedResult = undefined;\n        // Initialise a delayed search.\n        this.searchService.updateQueryDelayed(query, () =>\n            // Set the results open state depending on whether a query has been entered.\n            this.dropdownService.setOpenState(this.searchService.query.length > 0));\n    }\n\n    @Input()\n    public set options(options:T[] | undefined) {\n        if (options) {\n            this.searchService.options = options;\n        }\n    }\n\n    @Input()\n    public set optionsFilter(filter:FilterFn<T> | undefined) {\n        if (filter) {\n            this.searchService.optionsFilter = filter;\n        }\n    }\n\n    @Input()\n    public set optionsLookup(lookupFn:LookupFn<T> | undefined) {\n        this.searchService.optionsLookup = lookupFn;\n    }\n\n    @Input()\n    public set optionsField(field:string | undefined) {\n        this.searchService.optionsField = field;\n    }\n\n    private _resultFormatter?:(r:T, q:string) => string;\n\n    public get resultFormatter():(result:T, query:string) => string {\n        if (this._resultFormatter) {\n            return this._resultFormatter;\n        } else if (this.searchService.optionsLookup) {\n            return r => this.readValue(r);\n        } else {\n            return (r, q) => this.searchService.highlightMatches(this.readValue(r), q);\n        }\n    }\n\n    @Input()\n    public set resultFormatter(formatter:(result:T, query:string) => string) {\n        this._resultFormatter = formatter;\n    }\n\n    @Input()\n    public resultTemplate:TemplateRef<IResultContext<T>>;\n\n    @Input()\n    public retainSelectedResult:boolean;\n\n    @Input()\n    public set searchDelay(delay:number) {\n        this.searchService.searchDelay = delay;\n    }\n\n    @HostBinding(\"class.loading\")\n    public get isSearching():boolean {\n        return this.searchService.isSearching;\n    }\n\n    @Input()\n    public maxResults:number;\n\n    public get results():T[] {\n        return this.searchService.results.slice(0, this.maxResults);\n    }\n\n    // Stores the currently selected result.\n    public selectedResult?:T;\n\n    // Emits whenever a new result is selected.\n    @Output(\"resultSelected\")\n    public onResultSelected:EventEmitter<T>;\n\n    @Input()\n    public transition:string;\n\n    @Input()\n    public transitionDuration:number;\n\n    constructor(private _element:ElementRef, renderer:Renderer2, private _localizationService:SuiLocalizationService) {\n        this.dropdownService = new DropdownService();\n        this.searchService = new SearchService<T, T>();\n\n        this.onLocaleUpdate();\n        this._localizationService.onLanguageUpdate.subscribe(() => this.onLocaleUpdate());\n\n        this.hasClasses = true;\n        this.tabindex = 0;\n        this.hasIcon = true;\n        this.retainSelectedResult = true;\n        this.searchDelay = 200;\n        this.maxResults = 7;\n\n        this.onResultSelected = new EventEmitter<T>();\n\n        this.transition = \"scale\";\n        this.transitionDuration = 200;\n    }\n\n    public ngAfterViewInit():void {\n        this._menu.service = this.dropdownService;\n    }\n\n    private onLocaleUpdate():void {\n        this._localeValues = this._localizationService.get().search;\n    }\n\n    // Selects a result.\n    public select(result:T):void {\n        this.onResultSelected.emit(result);\n        this.dropdownService.setOpenState(false);\n\n        if (this.retainSelectedResult) {\n            this.selectedResult = result;\n            this.searchService.updateQuery(this.readValue(result));\n        } else {\n            this.searchService.updateQuery(\"\");\n        }\n    }\n\n    public onClick(e:MouseEvent):void {\n        this.open();\n    }\n\n    @HostListener(\"focusin\")\n    public onFocusIn():void {\n        if (!this.dropdownService.isAnimating) {\n            this.open();\n        }\n    }\n\n    private open():void {\n        if (this.searchService.query.length > 0) {\n            // Only open on click when there is a query entered.\n            this.dropdownService.setOpenState(true);\n        }\n    }\n\n    @HostListener(\"focusout\", [\"$event\"])\n    public onFocusOut(e:IFocusEvent):void {\n        console.log(e);\n        if (!this._element.nativeElement.contains(e.relatedTarget)) {\n            this.dropdownService.setOpenState(false);\n        }\n    }\n\n    // Reads the specified field from an item.\n    public readValue(object:T):string {\n        return Util.Object.readValue<T, string>(object, this.searchService.optionsField);\n    }\n}\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { FormsModule } from \"@angular/forms\";\nimport { SuiDropdownModule } from \"../dropdown/internal\";\nimport { SuiLocalizationModule } from \"../../behaviors/localization/internal\";\nimport { SuiUtilityModule } from \"../../misc/util/internal\";\nimport { SuiSearch } from \"./components/search\";\nimport { SuiSearchResult } from \"./components/search-result\";\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        SuiDropdownModule,\n        SuiLocalizationModule,\n        SuiUtilityModule\n    ],\n    declarations: [\n        SuiSearch,\n        SuiSearchResult\n    ],\n    exports: [\n        SuiSearch\n    ]\n})\nexport class SuiSearchModule {}\n","import {\n    Component, Input, HostBinding, HostListener, EventEmitter, ViewContainerRef,\n    ViewChild, Renderer2, ElementRef, Output, ChangeDetectorRef\n} from \"@angular/core\";\nimport { SuiDropdownMenuItem } from \"../../dropdown/internal\";\nimport { HandledEvent } from \"../../../misc/util/internal\";\n\n@Component({\n    selector: \"sui-select-option\",\n    template: `\n<span #templateSibling></span>\n<span [innerHTML]=\"renderedText\"></span>\n`\n})\nexport class SuiSelectOption<T> extends SuiDropdownMenuItem {\n    // Sets the Semantic UI classes on the host element.\n    @HostBinding(\"class.item\")\n    public readonly hasClasses:boolean;\n\n    @Input()\n    public value:T;\n\n    // Fires when the option is selected, whether by clicking or by keyboard.\n    @Output()\n    public onSelected:EventEmitter<T>;\n\n    @HostBinding(\"class.active\")\n    public isActive:boolean;\n\n    public renderedText?:string;\n\n    public set formatter(formatter:(obj:T) => string) {\n        if (!this.usesTemplate) {\n            this.renderedText = formatter(this.value);\n        } else {\n            this.renderedText = \"\";\n        }\n    }\n\n    public usesTemplate:boolean;\n\n    // Placeholder to draw template beside.\n    @ViewChild(\"templateSibling\", { read: ViewContainerRef })\n    public templateSibling:ViewContainerRef;\n\n    constructor(renderer:Renderer2, element:ElementRef, public changeDetector:ChangeDetectorRef) {\n        // We inherit SuiDropdownMenuItem to automatically gain all keyboard navigation functionality.\n        // This is not done via adding the .item class because it isn't supported by Angular.\n        super(renderer, element);\n\n        this.hasClasses = true;\n        this.isActive = false;\n        this.onSelected = new EventEmitter<T>();\n\n        // By default we make the default text an empty label, for the brief moment when it isn't displaying the correct one.\n        this.renderedText = \"\";\n\n        this.usesTemplate = false;\n    }\n\n    @HostListener(\"click\", [\"$event\"])\n    public onClick(e:HandledEvent):void {\n        e.eventHandled = true;\n\n        setTimeout(() => this.onSelected.emit(this.value));\n    }\n}\n","import { Directive, Input, EventEmitter, Renderer2, ElementRef, HostListener, HostBinding } from \"@angular/core\";\n\n@Directive({\n    selector: \"input[suiSelectSearch]\"\n})\nexport class SuiSelectSearch {\n    @HostBinding(\"class.search\")\n    public readonly hasClasses:boolean;\n\n    @HostBinding(\"attr.autocomplete\")\n    public readonly autoComplete:string;\n\n    public set query(query:string) {\n        this._renderer.setProperty(this._element.nativeElement, \"value\", query);\n    }\n\n    public onQueryUpdated:EventEmitter<string>;\n    public onQueryKeyDown:EventEmitter<KeyboardEvent>;\n\n    constructor(private _renderer:Renderer2, private _element:ElementRef) {\n        this.onQueryUpdated = new EventEmitter<string>();\n        this.onQueryKeyDown = new EventEmitter<KeyboardEvent>();\n\n        this.hasClasses = true;\n        this.autoComplete = \"off\";\n    }\n\n    @HostListener(\"input\", [\"$event.target.value\"])\n    public updateQuery(query:string):void {\n        this.onQueryUpdated.emit(query);\n    }\n\n    @HostListener(\"keydown\", [\"$event\"])\n    public onKeyDown(e:KeyboardEvent):void {\n        this.onQueryKeyDown.emit(e);\n    }\n\n    public focus():void {\n        // Slightly delay to support in menu search.\n        this._element.nativeElement.focus();\n        setTimeout(() => this._element.nativeElement.focus());\n    }\n}\n","import {\n    ViewChild, HostBinding, ElementRef, HostListener, Input, ContentChildren, QueryList,\n    AfterContentInit, TemplateRef, ViewContainerRef, ContentChild, EventEmitter, Output, OnDestroy\n} from \"@angular/core\";\nimport { Subscription } from \"rxjs\";\nimport { DropdownService, SuiDropdownMenu } from \"../../dropdown/internal\";\nimport { SearchService, LookupFn, FilterFn } from \"../../search/internal\";\nimport { Util, ITemplateRefContext, HandledEvent, KeyCode, IFocusEvent } from \"../../../misc/util/internal\";\nimport { ISelectLocaleValues, RecursivePartial, SuiLocalizationService } from \"../../../behaviors/localization/internal\";\nimport { SuiSelectOption } from \"../components/select-option\";\nimport { SuiSelectSearch } from \"../directives/select-search\";\n\nexport interface IOptionContext<T> extends ITemplateRefContext<T> {\n    query?:string;\n}\n\n// We use generic type T to specify the type of the options we are working with,\n// and U to specify the type of the property of the option used as the value.\nexport abstract class SuiSelectBase<T, U> implements AfterContentInit, OnDestroy {\n    public dropdownService:DropdownService;\n    public searchService:SearchService<T, U>;\n\n    @ViewChild(SuiDropdownMenu)\n    protected _menu:SuiDropdownMenu;\n\n    // Keep track of all of the rendered select options. (Rendered by the user using *ngFor).\n    @ContentChildren(SuiSelectOption, { descendants: true })\n    protected _renderedOptions:QueryList<SuiSelectOption<T>>;\n\n    // Keep track of all of the subscriptions to the selected events on the rendered options.\n    private _renderedSubscriptions:Subscription[];\n\n    // Sets the Semantic UI classes on the host element.\n    @HostBinding(\"class.ui\")\n    @HostBinding(\"class.dropdown\")\n    public readonly hasClasses:boolean;\n\n    @HostBinding(\"class.active\")\n    public get isActive():boolean {\n        return this.dropdownService.isOpen;\n    }\n\n    @HostBinding(\"class.visible\")\n    public get isVisible():boolean {\n        return this._menu.isVisible;\n    }\n\n    @Input()\n    public isSearchable:boolean;\n\n    public isSearchExternal:boolean;\n\n    @HostBinding(\"class.search\")\n    public get hasSearchClass():boolean {\n        return this.isSearchable && !this.isSearchExternal;\n    }\n\n    @HostBinding(\"class.loading\")\n    public get isSearching():boolean {\n        return this.searchService.isSearching;\n    }\n\n    @ViewChild(SuiSelectSearch)\n    private _internalSearch?:SuiSelectSearch;\n\n    @ContentChild(SuiSelectSearch)\n    private _manualSearch?:SuiSelectSearch;\n\n    public get searchInput():SuiSelectSearch | undefined {\n        return this._manualSearch || this._internalSearch;\n    }\n\n    @Input(\"tabindex\")\n    private _tabIndex?:number;\n\n    @HostBinding(\"attr.tabindex\")\n    public get tabindex():number {\n        if (this.isDisabled) {\n            // If disabled, remove from tabindex.\n            return -1;\n        }\n        if (this.dropdownService.isOpen && this.isSearchExternal) {\n            // If open & in menu search, remove from tabindex (as input always autofocusses).\n            return -1;\n        }\n        if (this._tabIndex != undefined) {\n            // If custom tabindex, default to that.\n            return this._tabIndex;\n        }\n        if (this.hasSearchClass) {\n            // If search input enabled, tab goes to input.\n            return -1;\n        }\n        // Otherwise, return default of 0.\n        return 0;\n    }\n\n    @HostBinding(\"class.disabled\")\n    @Input()\n    public get isDisabled():boolean {\n        return this.dropdownService.isDisabled;\n    }\n\n    public set isDisabled(value:boolean) {\n        this.dropdownService.isDisabled = !!value;\n    }\n\n    @Input()\n    public set options(options:T[]) {\n        if (options) {\n            this.searchService.options = options;\n\n            this.optionsUpdateHook();\n        }\n    }\n\n    @Input()\n    public set optionsFilter(filter:FilterFn<T> | undefined) {\n        if (filter) {\n            this.searchService.optionsFilter = filter;\n\n            this.optionsUpdateHook();\n        }\n    }\n\n    @Input()\n    public set optionsLookup(lookup:LookupFn<T, U> | undefined) {\n        if (lookup) {\n            this.searchService.optionsLookup = lookup;\n\n            this.optionsUpdateHook();\n        }\n    }\n\n    public get filteredOptions():T[] {\n        return this.searchService.results;\n    }\n\n    // Deprecated\n    public get availableOptions():T[] {\n        return this.filteredOptions;\n    }\n\n    public get query():string | undefined {\n        return this.isSearchable ? this.searchService.query : undefined;\n    }\n\n    public set query(query:string | undefined) {\n        if (query != undefined) {\n            this.queryUpdateHook();\n            this.updateQuery(query);\n            // Update the rendered text as query has changed.\n            this._renderedOptions.forEach(ro => this.initialiseRenderedOption(ro));\n\n            if (this.searchInput) {\n                this.searchInput.query = query;\n            }\n        }\n    }\n\n    @Input()\n    public get labelField():string | undefined {\n        return this.searchService.optionsField;\n    }\n\n    public set labelField(field:string | undefined) {\n        this.searchService.optionsField = field;\n    }\n\n    public get labelGetter():(obj:T) => string {\n        // Helper function to retrieve the label from an item.\n        return (obj:T) => {\n            const label = Util.Object.readValue<T, string>(obj, this.labelField);\n            if (label != undefined) {\n                return label.toString();\n            }\n            return \"\";\n        };\n    }\n\n    @Input()\n    public valueField:string;\n\n    public get valueGetter():(obj:T) => U {\n        // Helper function to retrieve the value from an item.\n        return (obj:T) => Util.Object.readValue<T, U>(obj, this.valueField);\n    }\n\n    @Input()\n    public optionTemplate:TemplateRef<IOptionContext<T>>;\n\n    private _optionFormatter?:(o:T, q?:string) => string;\n\n    public get configuredFormatter():(option:T) => string {\n        if (this._optionFormatter) {\n            return o => this._optionFormatter!(o, this.isSearchable ? this.query : undefined);\n        } else if (this.searchService.optionsLookup) {\n            return o => this.labelGetter(o);\n        } else {\n            return o => this.searchService.highlightMatches(this.labelGetter(o), this.query || \"\");\n        }\n    }\n\n    @Input()\n    public set optionFormatter(formatter:((option:T, query?:string) => string) | undefined) {\n        this._optionFormatter = formatter;\n    }\n\n    private _localeValues:ISelectLocaleValues;\n    public localeOverrides:RecursivePartial<ISelectLocaleValues>;\n\n    public get localeValues():ISelectLocaleValues {\n        return this._localizationService.override<\"select\">(this._localeValues, this.localeOverrides);\n    }\n\n    @Input()\n    public icon:string;\n\n    @Input()\n    public transition:string;\n\n    @Input()\n    public transitionDuration:number;\n\n    @Output(\"touched\")\n    public onTouched:EventEmitter<void>;\n\n    constructor(private _element:ElementRef, protected _localizationService:SuiLocalizationService) {\n        this.dropdownService = new DropdownService();\n        // We do want an empty query to return all results.\n        this.searchService = new SearchService<T, U>(true);\n\n        this.isSearchable = false;\n\n        this.onLocaleUpdate();\n        this._localizationService.onLanguageUpdate.subscribe(() => this.onLocaleUpdate());\n        this._renderedSubscriptions = [];\n\n        this.icon = \"dropdown\";\n        this.transition = \"slide down\";\n        this.transitionDuration = 200;\n\n        this.onTouched = new EventEmitter<void>();\n\n        this.hasClasses = true;\n    }\n\n    public ngAfterContentInit():void {\n        this._menu.service = this.dropdownService;\n        // We manually specify the menu items to the menu because the @ContentChildren doesn't pick up our dynamically rendered items.\n        this._menu.items = this._renderedOptions;\n        this._menu.parentElement = this._element;\n\n        if (this._manualSearch) {\n            this.isSearchable = true;\n            this.isSearchExternal = true;\n        }\n\n        if (this.searchInput) {\n            this.searchInput.onQueryUpdated.subscribe((q:string) => this.query = q);\n            this.searchInput.onQueryKeyDown.subscribe((e:KeyboardEvent) => this.onQueryInputKeydown(e));\n        }\n\n        // We must call this immediately as changes doesn't fire when you subscribe.\n        this.onAvailableOptionsRendered();\n        this._renderedOptions.changes.subscribe(() => this.onAvailableOptionsRendered());\n    }\n\n    private onLocaleUpdate():void {\n        this._localeValues = this._localizationService.get().select;\n    }\n\n    // Hook is here since Typescript doesn't yet support overriding getters & setters while still calling the superclass.\n    protected optionsUpdateHook():void {}\n\n    // Hook is here since Typescript doesn't yet support overriding getters & setters while still calling the superclass.\n    protected queryUpdateHook():void {}\n\n    protected updateQuery(query:string):void {\n        // Update the query then open the dropdown, as after keyboard input it should always be open.\n        this.searchService.updateQuery(query, () =>\n            this.dropdownService.setOpenState(true));\n    }\n\n    protected resetQuery(delayed:boolean = true):void {\n        // The search delay is set to the transition duration to ensure results\n        // aren't rendered as the select closes as that causes a sudden flash.\n        if (delayed) {\n            this.searchService.searchDelay = this._menu.menuTransitionDuration;\n            this.searchService.updateQueryDelayed(\"\");\n        } else {\n            this.searchService.updateQuery(\"\");\n        }\n\n        if (this.searchInput) {\n            this.searchInput.query = \"\";\n        }\n    }\n\n    protected onAvailableOptionsRendered():void {\n        // Unsubscribe from all previous subscriptions to avoid memory leaks on large selects.\n        this._renderedSubscriptions.forEach(rs => rs.unsubscribe());\n        this._renderedSubscriptions = [];\n\n        this._renderedOptions.forEach(ro => {\n            // Slightly delay initialisation to avoid change after checked errors. TODO - look into avoiding this!\n            setTimeout(() => this.initialiseRenderedOption(ro));\n\n            this._renderedSubscriptions.push(ro.onSelected.subscribe(() => this.selectOption(ro.value)));\n        });\n\n        // If no options have been provided, autogenerate them from the rendered ones.\n        if (this.searchService.options.length === 0 && !this.searchService.optionsLookup) {\n            this.options = this._renderedOptions.map(ro => ro.value);\n        }\n    }\n\n    protected initialiseRenderedOption(option:SuiSelectOption<T>):void {\n        option.usesTemplate = !!this.optionTemplate;\n        option.formatter = this.configuredFormatter;\n\n        if (option.usesTemplate) {\n            this.drawTemplate(option.templateSibling, option.value);\n        }\n\n        option.changeDetector.markForCheck();\n    }\n\n    public abstract selectOption(option:T):void;\n\n    protected findOption(options:T[], value:U):T | undefined {\n        // Tries to find an option in options array\n        return options.find(o => value === this.valueGetter(o));\n    }\n\n    public onCaretClick(e:HandledEvent):void {\n        if (!e.eventHandled) {\n            e.eventHandled = true;\n\n            if (!this.dropdownService.isAnimating) {\n                this.dropdownService.setOpenState(!this.dropdownService.isOpen);\n\n                this.focus();\n            }\n        }\n    }\n\n    @HostListener(\"click\", [\"$event\"])\n    public onClick(e:HandledEvent):void {\n        if (!e.eventHandled && !this.dropdownService.isAnimating) {\n            e.eventHandled = true;\n\n            // If the dropdown is searchable, clicking should keep it open, otherwise we toggle the open state.\n            this.dropdownService.setOpenState(this.isSearchable ? true : !this.dropdownService.isOpen);\n\n            // Immediately focus the search input whenever clicking on the select.\n            this.focus();\n        }\n    }\n\n    @HostListener(\"focusin\")\n    public onFocusIn():void {\n        if (!this.dropdownService.isOpen && !this.dropdownService.isAnimating) {\n            this.dropdownService.setOpenState(true);\n\n            this.focus();\n        }\n    }\n\n    @HostListener(\"focusout\", [\"$event\"])\n    public onFocusOut(e:IFocusEvent):void {\n        if (!this._element.nativeElement.contains(e.relatedTarget)) {\n            this.dropdownService.setOpenState(false);\n            this.onTouched.emit();\n        }\n    }\n\n    @HostListener(\"keypress\", [\"$event\"])\n    public onKeyPress(e:KeyboardEvent):void {\n        if (e.keyCode === KeyCode.Enter) {\n            // Enables support for focussing and opening with the keyboard alone.\n            // Using directly because Renderer2 doesn't have invokeElementMethod method anymore.\n            this._element.nativeElement.click();\n        }\n    }\n\n    @HostListener(\"keydown\", [\"$event\"])\n    public onKeyDown(e:KeyboardEvent):void {\n        if (!this.dropdownService.isOpen && e.keyCode === KeyCode.Down) {\n\n            // Enables support for focussing and opening with the keyboard alone.\n            // Using directly because Renderer2 doesn't have invokeElementMethod method anymore.\n            this._element.nativeElement.click();\n\n            e.preventDefault();\n        }\n    }\n\n    public onQueryInputKeydown(event:KeyboardEvent):void {}\n\n    protected focus():void {\n        if (this.isSearchable && this.searchInput) {\n            // Focusses the search input only when searchable.\n            // Using directly because Renderer2 doesn't have invokeElementMethod method anymore.\n            this.searchInput.focus();\n        } else {\n            this._element.nativeElement.focus();\n        }\n    }\n\n    // Helper that draws the provided template beside the provided ViewContainerRef.\n    protected drawTemplate(siblingRef:ViewContainerRef, value:T):void {\n        siblingRef.clear();\n        // Use of `$implicit` means use of <ng-template let-option> syntax is supported.\n        siblingRef.createEmbeddedView(this.optionTemplate, {\n            $implicit: value,\n            query: this.query\n        });\n    }\n\n    public ngOnDestroy():void {\n        this._renderedSubscriptions.forEach(s => s.unsubscribe());\n    }\n}\n","import {\n    Component, Input, HostBinding, HostListener, EventEmitter, ViewContainerRef,\n    ViewChild, Renderer2, ElementRef, Output, ChangeDetectorRef, TemplateRef\n} from \"@angular/core\";\nimport { SuiTransition, TransitionController, Transition, TransitionDirection } from \"../../transition/internal\";\nimport { HandledEvent, SuiComponentFactory } from \"../../../misc/util/internal\";\nimport { IOptionContext } from \"../classes/select-base\";\n\n// See https://github.com/Microsoft/TypeScript/issues/13449.\nconst templateRef = TemplateRef;\n\n@Component({\n    selector: \"sui-multi-select-label\",\n    template: `\n<span #templateSibling></span>\n<span *ngIf=\"!template\" [innerHTML]=\"formatter(value)\"></span>\n<i class=\"delete icon\" (click)=\"deselectOption($event)\"></i>\n`\n})\nexport class SuiMultiSelectLabel<T> extends SuiTransition {\n    // Sets the Semantic UI classes on the host element.\n    // Doing it on the host enables use in menus etc.\n    @HostBinding(\"class.ui\")\n    @HostBinding(\"class.label\")\n    public readonly hasClasses:boolean;\n\n    private _transitionController:TransitionController;\n\n    @Input()\n    public value:T;\n\n    @Input()\n    public query?:string;\n\n    @Output(\"deselected\")\n    public onDeselected:EventEmitter<T>;\n\n    @Input()\n    public formatter:(obj:T) => string;\n\n    private _template?:TemplateRef<IOptionContext<T>>;\n\n    @Input()\n    public get template():TemplateRef<IOptionContext<T>> | undefined {\n        return this._template;\n    }\n\n    public set template(template:TemplateRef<IOptionContext<T>> | undefined) {\n        this._template = template;\n        if (this.template) {\n            this.componentFactory.createView(this.templateSibling, this.template, {\n                $implicit: this.value,\n                query: this.query\n            });\n        }\n    }\n\n    // Placeholder to draw template beside.\n    @ViewChild(\"templateSibling\", { read: ViewContainerRef })\n    public templateSibling:ViewContainerRef;\n\n    constructor(renderer:Renderer2,\n                element:ElementRef,\n                changeDetector:ChangeDetectorRef,\n                public componentFactory:SuiComponentFactory) {\n\n        super(renderer, element, changeDetector);\n\n        // Initialise transition functionality.\n        this._transitionController = new TransitionController(false, \"inline-block\");\n        this.setTransitionController(this._transitionController);\n\n        this.onDeselected = new EventEmitter<T>();\n\n        this.hasClasses = true;\n\n        this._transitionController.animate(new Transition(\"scale\", 100, TransitionDirection.In));\n    }\n\n    public deselectOption(e:HandledEvent):void {\n        e.eventHandled = true;\n\n        this._transitionController.animate(\n            new Transition(\"scale\", 100, TransitionDirection.Out, () =>\n                this.onDeselected.emit(this.value)));\n    }\n\n    @HostListener(\"click\", [\"$event\"])\n    public onClick(e:HandledEvent):void {\n        e.eventHandled = true;\n    }\n}\n","import { Component, HostBinding, ElementRef, EventEmitter, Output, Input, Directive } from \"@angular/core\";\nimport { ICustomValueAccessorHost, KeyCode, customValueAccessorFactory, CustomValueAccessor } from \"../../../misc/util/internal\";\nimport { SuiLocalizationService } from \"../../../behaviors/localization/internal\";\nimport { SuiSelectBase } from \"../classes/select-base\";\nimport { SuiSelectOption } from \"./select-option\";\n\n@Component({\n    selector: \"sui-multi-select\",\n    template: `\n<!-- Dropdown icon -->\n<i class=\"{{ icon }} icon\" (click)=\"onCaretClick($event)\"></i>\n\n<ng-container *ngIf=\"hasLabels\">\n<!-- Multi-select labels -->\n    <sui-multi-select-label *ngFor=\"let selected of selectedOptions;\"\n                            [value]=\"selected\"\n                            [query]=\"query\"\n                            [formatter]=\"configuredFormatter\"\n                            [template]=\"optionTemplate\"\n                            (deselected)=\"deselectOption($event)\"></sui-multi-select-label>\n</ng-container>\n\n<!-- Query input -->\n<input suiSelectSearch\n       type=\"text\"\n       [hidden]=\"!isSearchable || isSearchExternal\">\n\n<!-- Helper text -->\n<div class=\"text\"\n     [class.default]=\"hasLabels\"\n     [class.filtered]=\"!!query && !isSearchExternal\">\n    \n    <!-- Placeholder text -->\n    <ng-container *ngIf=\"hasLabels; else selectedBlock\">{{ placeholder }}</ng-container>\n    \n    <!-- Summary shown when labels are hidden -->\n    <ng-template #selectedBlock> {{ selectedMessage }}</ng-template>\n</div>\n\n<!-- Select dropdown menu -->\n<div class=\"menu\"\n     suiDropdownMenu\n     [menuTransition]=\"transition\"\n     [menuTransitionDuration]=\"transitionDuration\"\n     [menuAutoSelectFirst]=\"true\">\n\n    <ng-content></ng-content>\n    <ng-container *ngIf=\"availableOptions.length == 0 \">\n        <div *ngIf=\"!maxSelectedReached\" class=\"message\">{{ localeValues.noResultsMessage }}</div>\n        <div *ngIf=\"maxSelectedReached\" class=\"message\">{{ maxSelectedMessage }}</div>\n    </ng-container>\n</div>\n`,\n    styles: [`\n:host input.search {\n    width: 12em !important;\n}\n`]\n})\nexport class SuiMultiSelect<T, U> extends SuiSelectBase<T, U> implements ICustomValueAccessorHost<U[]> {\n    public selectedOptions:T[];\n    // Stores the values written by ngModel before it can be matched to an option from `options`.\n    private _writtenOptions?:U[];\n\n    @Output()\n    public selectedOptionsChange:EventEmitter<U[]>;\n\n    public get filteredOptions():T[] {\n        if (this.maxSelectedReached) {\n            // If we have reached the maximum number of selections, then empty the results completely.\n            return [];\n        }\n\n        const searchResults:T[] = this.searchService.results;\n\n        if (!this.hasLabels) {\n            return searchResults;\n        } else {\n            // Returns the search results \\ selected options.\n            return searchResults\n                .filter(r => this.selectedOptions.find(o => r === o) == undefined);\n        }\n    }\n\n    public get availableOptions():T[] {\n        return this.filteredOptions;\n    }\n\n    private _hasLabels:boolean;\n\n    @Input()\n    public get hasLabels():boolean {\n        return this._hasLabels;\n    }\n\n    public set hasLabels(hasLabels:boolean) {\n        this._hasLabels = hasLabels;\n    }\n\n    private _placeholder:string;\n\n    @Input()\n    public get placeholder():string {\n        return this._placeholder || this.localeValues.multi.placeholder;\n    }\n\n    public set placeholder(placeholder:string) {\n        this._placeholder = placeholder;\n    }\n\n    @Input()\n    public maxSelected:number;\n\n    private _zeroSelectionText:string;\n    private _defaultSelectionText:string;\n\n    @Input()\n    public get zeroSelectionText():string {\n        return this._zeroSelectionText;\n    }\n\n    public set zeroSelectionText(zeroSelectionText:string) {\n        this._zeroSelectionText = zeroSelectionText;\n    }\n\n    @Input()\n    public get defaultSelectionText():string {\n        return this._defaultSelectionText || this.localeValues.multi.placeholder;\n    }\n\n    public set defaultSelectionText(defaultSelectionText:string) {\n        this._defaultSelectionText = `#{count} ${defaultSelectionText}`;\n    }\n\n    public get maxSelectedReached():boolean {\n        if (this.maxSelected == undefined) {\n            // If there is no maximum then we can immediately return.\n            return false;\n        }\n        return this.selectedOptions.length === this.maxSelected;\n    }\n\n    public get maxSelectedMessage():string {\n        return this._localizationService.interpolate(\n            this.localeValues.multi.maxSelectedMessage,\n            [[\"max\", this.maxSelected.toString()]]);\n    }\n\n    public get selectedMessage():string {\n        if (this.selectedOptions.length  > 0) {\n            return this._localizationService.interpolate(\n                this._defaultSelectionText ? this._defaultSelectionText : this.localeValues.multi.selectedMessage,\n                [[\"count\", this.selectedOptions.length.toString()]]);\n        } else {\n            return this._localizationService.interpolate(\n                this._defaultSelectionText ? this._defaultSelectionText : this.localeValues.multi.selectedMessage,\n                [[\"count\", this._zeroSelectionText ? this._zeroSelectionText : this.selectedOptions.length.toString()]]);\n        }\n    }\n\n    @HostBinding(\"class.multiple\")\n    public readonly hasClasses:boolean;\n\n    constructor(element:ElementRef, localizationService:SuiLocalizationService) {\n        super(element, localizationService);\n\n        this.selectedOptions = [];\n        this.selectedOptionsChange = new EventEmitter<U[]>();\n\n        this.hasLabels = true;\n        this.hasClasses = true;\n    }\n\n    protected optionsUpdateHook():void {\n        if (!this._writtenOptions && this.selectedOptions.length > 0) {\n            // We need to check the options still exist.\n            this.writeValue(this.selectedOptions.map(o => this.valueGetter(o)));\n        }\n\n        if (this._writtenOptions && this.searchService.options.length > 0) {\n            // If there were values written by ngModel before the options had been loaded, this runs to fix it.\n            this.selectedOptions = this._writtenOptions\n                // non-null assertion added here because Typescript doesn't recognise the non-null filter.\n                .map(v => this.findOption(this.searchService.options, v)!)\n                .filter(v => v != undefined);\n\n            if (this.selectedOptions.length === this._writtenOptions.length) {\n                this._writtenOptions = undefined;\n            }\n        }\n    }\n\n    protected initialiseRenderedOption(option:SuiSelectOption<T>):void {\n        super.initialiseRenderedOption(option);\n\n        // Boldens the item so it appears selected in the dropdown.\n        option.isActive = !this.hasLabels && this.selectedOptions.indexOf(option.value) !== -1;\n    }\n\n    public selectOption(option:T):void {\n        if (this.selectedOptions.indexOf(option) !== -1) {\n            this.deselectOption(option);\n            return;\n        }\n        this.selectedOptions.push(option);\n        this.selectedOptionsChange.emit(this.selectedOptions.map(o => this.valueGetter(o)));\n\n        this.resetQuery(false);\n\n        // Automatically refocus the search input for better keyboard accessibility.\n        this.focus();\n\n        if (!this.hasLabels) {\n            this.onAvailableOptionsRendered();\n        }\n    }\n\n    public writeValue(values:U[]):void {\n        if (values instanceof Array) {\n            if (this.searchService.options.length > 0) {\n                // If the options have already been loaded, we can immediately match the ngModel values to options.\n                this.selectedOptions = values\n                    // non-null assertion added here because Typescript doesn't recognise the non-null filter.\n                    .map(v => this.findOption(this.searchService.options, v)!)\n                    .filter(v => v != undefined);\n            }\n            if (values.length > 0 && this.selectedOptions.length === 0) {\n                if (this.valueField && this.searchService.hasItemLookup) {\n                    // If the search service has a selected lookup function, make use of that to load the initial values.\n                    this.searchService\n                        .initialLookup(values)\n                        .then(items => this.selectedOptions = items);\n                } else {\n                    // Otherwise, cache the written value for when options are set.\n                    this._writtenOptions = values;\n                }\n            }\n            if (values.length === 0) {\n                this.selectedOptions = [];\n            }\n        } else {\n            this.selectedOptions = [];\n        }\n    }\n\n    public deselectOption(option:T):void {\n        // Update selected options to the previously selected options \\ {option}.\n        this.selectedOptions = this.selectedOptions.filter(so => so !== option);\n        this.selectedOptionsChange.emit(this.selectedOptions.map(o => this.valueGetter(o)));\n\n        // Automatically refocus the search input for better keyboard accessibility.\n        this.focus();\n\n        if (!this.hasLabels) {\n            this.onAvailableOptionsRendered();\n        }\n    }\n\n    public onQueryInputKeydown(event:KeyboardEvent):void {\n        if (event.keyCode === KeyCode.Backspace && this.query === \"\" && this.selectedOptions.length > 0) {\n            // Deselect the rightmost option when the user presses backspace in the search input.\n            this.deselectOption(this.selectedOptions[this.selectedOptions.length - 1]);\n        }\n    }\n}\n\n// Value accessor directive for the select to support ngModel.\n@Directive({\n    selector: \"sui-multi-select\",\n    host: {\n        \"(selectedOptionsChange)\": \"onChange($event)\",\n        \"(touched)\": \"onTouched()\"\n    },\n    providers: [customValueAccessorFactory(SuiMultiSelectValueAccessor)]\n})\nexport class SuiMultiSelectValueAccessor<T, U> extends CustomValueAccessor<U[], SuiMultiSelect<T, U>> {\n    constructor(host:SuiMultiSelect<T, U>) {\n        super(host);\n    }\n}\n","import { Component, ViewContainerRef, ViewChild, Output, EventEmitter, ElementRef, Directive, Input } from \"@angular/core\";\nimport { ICustomValueAccessorHost, customValueAccessorFactory, CustomValueAccessor } from \"../../../misc/util/internal\";\nimport { SuiLocalizationService } from \"../../../behaviors/localization/internal\";\nimport { SuiSelectBase } from \"../classes/select-base\";\nimport { SuiSelectOption } from \"./select-option\";\n\n@Component({\n    selector: \"sui-select\",\n    template: `\n<!-- Query input -->\n<input suiSelectSearch\n       type=\"text\"\n       [hidden]=\"!isSearchable || isSearchExternal\">\n\n<!-- Placeholder text -->\n<div *ngIf=\"selectedOption == undefined\" class=\"default text\" [class.filtered]=\"query\">{{ placeholder }}</div>\n<!-- Selected item -->\n<div class=\"text\" [class.filtered]=\"query || selectedOption == undefined\">\n    <span #optionTemplateSibling></span>\n    <span *ngIf=\"!optionTemplate && selectedOption != undefined\" [innerHTML]=\"configuredFormatter(selectedOption)\"></span>\n</div>\n<!-- Dropdown icon -->\n<i class=\"{{ icon }} icon\" (click)=\"onCaretClick($event)\"></i>\n<!-- Select dropdown menu -->\n<div class=\"menu\"\n     suiDropdownMenu\n     [menuTransition]=\"transition\"\n     [menuTransitionDuration]=\"transitionDuration\"\n     [menuAutoSelectFirst]=\"isSearchable\">\n\n    <ng-content></ng-content>\n    <div *ngIf=\"isSearchable && availableOptions.length === 0\" class=\"message\">\n        {{ localeValues.noResultsMessage }}\n    </div>\n</div>\n`\n})\nexport class SuiSelect<T, U> extends SuiSelectBase<T, U> implements ICustomValueAccessorHost<U> {\n    public selectedOption?:T;\n    // Stores the value written by ngModel before it can be matched to an option from `options`.\n    private _writtenOption?:U;\n\n    @ViewChild(\"optionTemplateSibling\", { read: ViewContainerRef })\n    private _optionTemplateSibling:ViewContainerRef;\n\n    @Output()\n    public selectedOptionChange:EventEmitter<U>;\n\n    private _placeholder:string;\n\n    @Input()\n    public get placeholder():string {\n        return this._placeholder || this.localeValues.single.placeholder;\n    }\n\n    public set placeholder(placeholder:string) {\n        this._placeholder = placeholder;\n    }\n\n    constructor(element:ElementRef, localizationService:SuiLocalizationService) {\n        super(element, localizationService);\n\n        this.selectedOptionChange = new EventEmitter<U>();\n    }\n\n    protected optionsUpdateHook():void {\n        if (!this._writtenOption && this.selectedOption) {\n            // We need to check the option still exists.\n            this.writeValue(this.valueGetter(this.selectedOption));\n        }\n\n        if (this._writtenOption && this.searchService.options.length > 0) {\n            // If there was an value written by ngModel before the options had been loaded, this runs to fix it.\n            this.selectedOption = this.findOption(this.searchService.options, this._writtenOption);\n            if (this.selectedOption) {\n                this._writtenOption = undefined;\n                this.drawSelectedOption();\n            }\n        }\n    }\n\n    protected queryUpdateHook():void {\n        // When the query is updated, we just abandon the current selection.\n        this.selectedOption = undefined;\n    }\n\n    public selectOption(option:T):void {\n        // Choose and emit the selected option.\n        this.selectedOption = option;\n        this.selectedOptionChange.emit(this.valueGetter(option));\n\n        this.dropdownService.setOpenState(false);\n\n        this.resetQuery();\n\n        this.drawSelectedOption();\n\n        // Automatically refocus the search input for better keyboard accessibility.\n        this.focus();\n    }\n\n    public writeValue(value:U):void {\n        if (value != undefined) {\n            if (this.searchService.options.length > 0) {\n                // If the options have already been loaded, we can immediately match the ngModel value to an option.\n                this.selectedOption = this.findOption(this.searchService.options, value);\n\n                this.drawSelectedOption();\n            }\n            if (this.selectedOption == undefined) {\n                if (this.valueField && this.searchService.hasItemLookup) {\n                    // If the search service has a selected lookup function, make use of that to load the initial value.\n                    this.searchService\n                        .initialLookup(value)\n                        .then(i => {\n                            this.selectedOption = i;\n                            this.drawSelectedOption();\n                        });\n                } else {\n                    // Otherwise, cache the written value for when options are set.\n                    this._writtenOption = value;\n                }\n            }\n        } else {\n            this.selectedOption = undefined;\n            this.drawSelectedOption();\n        }\n    }\n\n    protected initialiseRenderedOption(option:SuiSelectOption<T>):void {\n        super.initialiseRenderedOption(option);\n\n        // Boldens the item so it appears selected in the dropdown.\n        option.isActive = option.value === this.selectedOption;\n    }\n\n    private drawSelectedOption():void {\n        // Updates the active class on the newly selected option.\n        if (this._renderedOptions) {\n            this.onAvailableOptionsRendered();\n        }\n\n        if (this.selectedOption != undefined && this.optionTemplate) {\n            this.drawTemplate(this._optionTemplateSibling, this.selectedOption);\n        }\n    }\n}\n\n// Value accessor directive for the select to support ngModel.\n@Directive({\n    selector: \"sui-select\",\n    host: {\n        \"(selectedOptionChange)\": \"onChange($event)\",\n        \"(touched)\": \"onTouched()\"\n    },\n    providers: [customValueAccessorFactory(SuiSelectValueAccessor)]\n})\nexport class SuiSelectValueAccessor<T, U> extends CustomValueAccessor<U, SuiSelect<T, U>> {\n    constructor(host:SuiSelect<T, U>) {\n        super(host);\n    }\n}\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { FormsModule } from \"@angular/forms\";\nimport { SuiDropdownModule } from \"../dropdown/internal\";\nimport { SuiUtilityModule } from \"../../misc/util/internal\";\nimport { SuiLocalizationModule } from \"../../behaviors/localization/internal\";\nimport { SuiSelect, SuiSelectValueAccessor } from \"./components/select\";\nimport { SuiSelectOption } from \"./components/select-option\";\nimport { SuiSelectSearch } from \"./directives/select-search\";\nimport { SuiMultiSelect, SuiMultiSelectValueAccessor } from \"./components/multi-select\";\nimport { SuiMultiSelectLabel } from \"./components/multi-select-label\";\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        SuiDropdownModule,\n        SuiUtilityModule,\n        SuiLocalizationModule\n    ],\n    declarations: [\n        SuiSelect,\n        SuiSelectOption,\n        SuiSelectSearch,\n        SuiSelectValueAccessor,\n        SuiMultiSelect,\n        SuiMultiSelectLabel,\n        SuiMultiSelectValueAccessor\n    ],\n    exports: [\n        SuiSelect,\n        SuiSelectOption,\n        SuiSelectSearch,\n        SuiSelectValueAccessor,\n        SuiMultiSelect,\n        SuiMultiSelectValueAccessor\n    ]\n})\nexport class SuiSelectModule {}\n","import { EventEmitter } from \"@angular/core\";\n\nexport type SidebarTransition = \"overlay\" | \"push\" | \"scale down\" | \"uncover\" | \"slide along\" | \"slide out\";\n\nexport const SidebarTransition = {\n    Overlay: \"overlay\" as SidebarTransition,\n    Push: \"push\" as SidebarTransition,\n    ScaleDown: \"scale down\" as SidebarTransition,\n    Uncover: \"uncover\" as SidebarTransition,\n    SlideAlong: \"slide along\" as SidebarTransition,\n    SlideOut: \"slide out\" as SidebarTransition\n};\n\nexport type SidebarDirection = \"left\" | \"right\" | \"top\" | \"bottom\";\n\nexport const SidebarDirection = {\n    Left: \"left\" as SidebarDirection,\n    Right: \"right\" as SidebarDirection,\n    Top: \"top\" as SidebarDirection,\n    Bottom: \"bottom\" as SidebarDirection\n};\n\nexport class SidebarService {\n    public isVisible:boolean;\n    public isAnimating:boolean;\n    public wasJustOpened:boolean;\n\n    public direction:SidebarDirection;\n\n    private _width:number;\n    private _height:number;\n\n    public get width():number {\n        if (this.direction === SidebarDirection.Left) {\n            return this._width;\n        }\n        if (this.direction === SidebarDirection.Right) {\n            return -this._width;\n        }\n        return 0;\n    }\n\n    public set width(width:number) {\n        this._width = width;\n        this.widthChange.emit();\n    }\n\n    public get height():number {\n        if (this.direction === SidebarDirection.Top) {\n            return this._height;\n        }\n        if (this.direction === SidebarDirection.Bottom) {\n            return -this._height;\n        }\n        return 0;\n    }\n\n    public set height(height:number) {\n        this._height = height;\n        this.heightChange.emit();\n    }\n\n    public isVisibleChange:EventEmitter<boolean>;\n    public widthChange:EventEmitter<void>;\n    public heightChange:EventEmitter<void>;\n\n    private _isAnimatingTimeout:number;\n\n    public transition:SidebarTransition;\n\n    constructor(isVisible:boolean = false) {\n        this.isVisible = isVisible;\n        this.isAnimating = false;\n        this.wasJustOpened = false;\n\n        this.isVisibleChange = new EventEmitter<boolean>();\n        this.widthChange = new EventEmitter<void>();\n        this.heightChange = new EventEmitter<void>();\n\n        this.width = 260;\n        this.height = 0;\n\n        this.transition = SidebarTransition.Uncover;\n    }\n\n    public setVisibleState(isVisible:boolean):void {\n        if (this.isVisible !== isVisible) {\n            this.isVisible = isVisible;\n            this.isAnimating = true;\n            this.wasJustOpened = true;\n\n            this.isVisibleChange.emit(isVisible);\n\n            setTimeout(() => this.wasJustOpened = false);\n            clearTimeout(this._isAnimatingTimeout);\n            this._isAnimatingTimeout = window.setTimeout(() => this.isAnimating = false, 500);\n        }\n    }\n\n    public toggleVisibleState():void {\n        this.setVisibleState(!this.isVisible);\n    }\n}\n","import { Component, HostBinding, Input, Output, Renderer2, ElementRef, EventEmitter } from \"@angular/core\";\nimport { SidebarService, SidebarTransition, SidebarDirection } from \"../services/sidebar.service\";\n\n@Component({\n    selector: \"sui-sidebar\",\n    template: `<ng-content></ng-content>`\n})\nexport class SuiSidebar {\n    public service:SidebarService;\n\n    @HostBinding(\"class.ui\")\n    @HostBinding(\"class.sidebar\")\n    @HostBinding(\"class.menu\")\n    public readonly hasClasses:boolean;\n\n    @Input()\n    public get transition():SidebarTransition {\n        return this.service.transition;\n    }\n\n    public set transition(transition:SidebarTransition) {\n        this.service.transition.split(\" \").forEach(c => this.setClass(c, false));\n\n        this.service.transition = transition;\n\n        this.service.transition.split(\" \").forEach(c => this.setClass(c, true));\n    }\n\n    @Input()\n    public get direction():SidebarDirection {\n        return this.service.direction;\n    }\n\n    public set direction(direction:SidebarDirection) {\n        this.setClass(this.service.direction, false);\n\n        this.service.direction = direction;\n\n        this.setClass(this.service.direction, true);\n    }\n\n    @HostBinding(\"class.visible\")\n    @Input()\n    public get isVisible():boolean {\n        return this.service.isVisible;\n    }\n\n    public set isVisible(isVisible:boolean) {\n        this.service.setVisibleState(isVisible);\n    }\n\n    @Output()\n    public get isVisibleChange():EventEmitter<boolean> {\n        return this.service.isVisibleChange;\n    }\n\n    @HostBinding(\"class.animating\")\n    public get isAnimating():boolean {\n        return this.service.isAnimating;\n    }\n\n    constructor(private _renderer:Renderer2, private _element:ElementRef) {\n        this.service = new SidebarService();\n        // We set the default here as well to force the classes to update.\n        this.transition = SidebarTransition.Uncover;\n        this.direction = SidebarDirection.Left;\n\n        setTimeout(() => this.updateDimensions());\n        this.service.isVisibleChange.subscribe(() => this.updateDimensions());\n\n        this.hasClasses = true;\n    }\n\n    private updateDimensions():void {\n        this.service.width = this._element.nativeElement.offsetWidth;\n        this.service.height = this._element.nativeElement.offsetHeight;\n    }\n\n    private setClass(className:string, isAdd:boolean = true):void {\n        if (isAdd) {\n            this._renderer.addClass(this._element.nativeElement, className);\n        } else {\n            this._renderer.removeClass(this._element.nativeElement, className);\n        }\n    }\n\n    public open():void {\n        this.service.setVisibleState(true);\n    }\n\n    public close():void {\n        this.service.setVisibleState(false);\n    }\n\n    public toggle():void {\n        this.service.toggleVisibleState();\n    }\n}\n","import { Component, Input, HostBinding, HostListener, ElementRef, Renderer2 } from \"@angular/core\";\nimport { SidebarService, SidebarTransition } from \"../services/sidebar.service\";\n\n@Component({\n    selector: \"sui-sidebar-sibling\",\n    template: `<ng-content></ng-content>`,\n    styles: [`\n:host {\n    display: block;\n}\n`]\n})\nexport class SuiSidebarSibling {\n    private _service:SidebarService;\n\n    public get service():SidebarService {\n        return this._service;\n    }\n\n    public set service(service:SidebarService) {\n        this._service = service;\n\n        setTimeout(() => this.updateTransform());\n        this._service.isVisibleChange.subscribe(() => this.updateTransform());\n    }\n\n    @Input()\n    public isDimmedWhenVisible:boolean;\n\n    @HostBinding(\"class.visible\")\n    public get isVisible():boolean {\n        if (!this.service) {\n            return false;\n        }\n        return this.service.isVisible;\n    }\n\n    @HostBinding(\"class.dimmed\")\n    public get isDimmed():boolean {\n        if (!this.service) {\n            return false;\n        }\n        return this.service.isVisible && this.isDimmedWhenVisible;\n    }\n\n    @HostBinding(\"class.pusher\")\n    public readonly hasClasses:boolean;\n\n    constructor(private _renderer:Renderer2, private _element:ElementRef) {\n        this.isDimmedWhenVisible = false;\n\n        this.hasClasses = true;\n    }\n\n    private updateTransform():void {\n        this._renderer.removeStyle(this._element.nativeElement, \"transform\");\n        this._renderer.removeStyle(this._element.nativeElement, \"-webkit-transform\");\n\n        if (this.service.isVisible &&\n            this.service.transition !== SidebarTransition.Overlay &&\n            this.service.transition !== SidebarTransition.ScaleDown) {\n\n            const translate = `translate3d(${this.service.width}px, ${this.service.height}px, 0)`;\n            this._renderer.setStyle(this._element.nativeElement, \"transform\", translate);\n            this._renderer.setStyle(this._element.nativeElement, \"-webkit-transform\", translate);\n        }\n    }\n\n    @HostListener(\"click\", [\"$event\"])\n    public onClick(event:MouseEvent):void {\n        if (this.service.isVisible && !this.service.wasJustOpened) {\n            this.service.setVisibleState(false);\n        }\n    }\n}\n","import { Component, AfterContentInit, HostBinding, ContentChild } from \"@angular/core\";\nimport { SidebarService } from \"../services/sidebar.service\";\nimport { SuiSidebar } from \"./sidebar\";\nimport { SuiSidebarSibling } from \"./sidebar-sibling\";\n\n@Component({\n    selector: \"sui-sidebar-container\",\n    template: `<ng-content></ng-content>`,\n    styles: [`\n:host {\n    display: block;\n}\n`]\n})\nexport class SuiSidebarContainer implements AfterContentInit {\n    public service:SidebarService;\n\n    @HostBinding(\"class.pushable\")\n    public readonly hasClasses:boolean;\n\n    @ContentChild(SuiSidebar)\n    public sidebar:SuiSidebar;\n\n    @ContentChild(SuiSidebarSibling)\n    public sibling:SuiSidebarSibling;\n\n    constructor() {\n        this.hasClasses = true;\n    }\n\n    public ngAfterContentInit():void {\n        if (!this.sidebar) {\n            throw new Error(\"You must include a <sui-sidebar> element within the container.\");\n        }\n        this.service = this.sidebar.service;\n\n        if (!this.sibling) {\n            throw new Error(\"You must include a <sui-sidebar-sibling> element within the container.\");\n        }\n        this.sibling.service = this.service;\n    }\n}\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { SuiSidebar } from \"./components/sidebar\";\nimport { SuiSidebarContainer } from \"./components/sidebar-container\";\nimport { SuiSidebarSibling } from \"./components/sidebar-sibling\";\n\n@NgModule({\n    imports: [\n        CommonModule\n    ],\n    declarations: [\n        SuiSidebar,\n        SuiSidebarContainer,\n        SuiSidebarSibling\n    ],\n    exports: [\n        SuiSidebar,\n        SuiSidebarContainer,\n        SuiSidebarSibling\n    ]\n})\nexport class SuiSidebarModule {}\n","import { SuiTabHeader } from \"../directives/tab-header\";\nimport { SuiTabContent } from \"../directives/tab-content\";\n\nexport class Tab {\n    public id:string;\n    public header:SuiTabHeader;\n    public content:SuiTabContent;\n    public index:number;\n\n    constructor(header:SuiTabHeader, content:SuiTabContent) {\n        this.id = header.id;\n        this.header = header;\n        this.content = content;\n\n        // So that the header and content isActive properties are always in sync.\n        this.header.isActiveChange\n            .subscribe(() => this.content.isActive = this.isActive);\n    }\n\n    // Saves accessing .header.isActive every time.\n    public get isActive():boolean {\n        return this.header.isActive;\n    }\n\n    public set isActive(active:boolean) {\n        // Use `setActiveState` so as not to fire 'external changes' event.\n        this.header.setActiveState(active);\n    }\n\n    // Saves accessing .header.isDisabled every time.\n    public get isDisabled():boolean {\n        return this.header.isDisabled;\n    }\n}\n","import { HostBinding, Input, Directive, EventEmitter, HostListener, Output } from \"@angular/core\";\n\n@Directive({\n    selector: \"[suiTabHeader]\"\n})\nexport class SuiTabHeader {\n    @HostBinding(\"class.item\")\n    public readonly hasClasses:boolean;\n\n    @Input(\"suiTabHeader\")\n    public id:string;\n\n    // Internally keeps track of whether the header is active.\n    private _isActive:boolean;\n\n    // Enables use of [(isActive)] so state can be set using booleans.\n    @Output()\n    public isActiveChange:EventEmitter<boolean>;\n\n    // Fires only when `isActive` changes due to user input.\n    public isActiveExternalChange:EventEmitter<boolean>;\n\n    // Fires whenever a tab is activated having previously been deactivated.\n    @Output(\"activate\")\n    public onActivate:EventEmitter<void>;\n\n    // Fires whenever a tab is deactivated having previously been activated.\n    @Output(\"deactivate\")\n    public onDeactivate:EventEmitter<void>;\n\n    @HostBinding(\"class.active\")\n    @Input()\n    public get isActive():boolean {\n        return this._isActive;\n    }\n\n    public set isActive(active:boolean) {\n        let isActive = active;\n        // Only used by @Input(), runs whenever user input changes `isActive`.\n        // Run in timeout because `isDisabled` can prohibit user from changing `isActive`.\n        // so update is delayed to avoid 'changed after checked' error.\n        setTimeout(() => {\n            // Only allow change if tab header is not disabled.\n            isActive = !this.isDisabled ? active : false;\n            this.setActiveState(isActive);\n\n            // Fire 'external change' event as user input has occured.\n            this.isActiveExternalChange.emit(isActive);\n        });\n    }\n\n    private _isDisabled:boolean;\n\n    @HostBinding(\"class.disabled\")\n    @Input()\n    public get isDisabled():boolean {\n        return this._isDisabled;\n    }\n\n    public set isDisabled(disabled:boolean) {\n        // Only update if value provided is different to current one.\n        if (this._isDisabled !== disabled) {\n            this._isDisabled = disabled;\n\n            // If now disabled, then tab header must be deactivated.\n            if (this.isDisabled) {\n                this.isActive = false;\n            }\n        }\n    }\n\n    constructor() {\n        this._isActive = false;\n        this.isActiveChange = new EventEmitter<boolean>();\n        this.isActiveExternalChange = new EventEmitter<boolean>();\n\n        this.onActivate = new EventEmitter<void>();\n        this.onDeactivate = new EventEmitter<void>();\n\n        this.isDisabled = false;\n\n        this.hasClasses = true;\n    }\n\n    // Internally update active state.\n    public setActiveState(active:boolean):void {\n        // If (cast) active value has changed:\n        if (!!this._isActive !== active) {\n            // Update to the new value.\n            this._isActive = active;\n\n            // Fire the appropriate activation event.\n            if (active) {\n                this.onActivate.emit();\n            } else {\n                this.onDeactivate.emit();\n            }\n        }\n\n        // Regardless, emit a change to `isActive`, so [(isActive)] works correctly.\n        this.isActiveChange.emit(active);\n    }\n\n    @HostListener(\"click\")\n    public onClick():void {\n        if (!this.isDisabled) {\n            // Activate the tab when clicked, so long as it isn't disabled.\n            this.isActive = true;\n        }\n    }\n}\n","import { HostBinding, Directive, Input } from \"@angular/core\";\n\n@Directive({\n    selector: \"[suiTabContent]\"\n})\nexport class SuiTabContent {\n    @HostBinding(\"class.tab\")\n    public readonly hasClasses:boolean;\n\n    @Input(\"suiTabContent\")\n    public id:string;\n\n    @HostBinding(\"class.active\")\n    public isActive:boolean;\n\n    constructor() {\n        this.isActive = false;\n\n        this.hasClasses = true;\n    }\n}\n","import { Component, ContentChildren, QueryList, AfterContentInit } from \"@angular/core\";\nimport { SuiTabHeader } from \"../directives/tab-header\";\nimport { SuiTabContent } from \"../directives/tab-content\";\nimport { Tab } from \"../classes/tab\";\n\n@Component({\n    selector: \"sui-tabset\",\n    template: `<ng-content></ng-content>`\n})\nexport class SuiTabset implements AfterContentInit {\n    @ContentChildren(SuiTabHeader, {descendants: true})\n    private _tabHeaders:QueryList<SuiTabHeader>;\n\n    @ContentChildren(SuiTabContent, {descendants: true})\n    private _tabContents:QueryList<SuiTabContent>;\n\n    // List of all tabs in the tabset.\n    public tabs:Tab[];\n\n    // Keeps track of the currently active tab.\n    private _activeTab:Tab;\n\n    public get activeTab():Tab {\n        return this._activeTab;\n    }\n\n    // When setting a tab as the currently active tab, it automatically gains\n    // `isActive` status (saves littering `isActive = true` everywhere).\n    public set activeTab(tab:Tab) {\n        this._activeTab = tab;\n        tab.isActive = true;\n    }\n\n    // Keeps track of the number of times `internalComponentsUpdated` is called.\n    private _barrierCount:number;\n\n    constructor() {\n        this.tabs = [];\n        this._barrierCount = 0;\n    }\n\n    public ngAfterContentInit():void {\n        // Fire `internalComponentsUpdated` when the query lists change.\n        this._tabHeaders.changes.subscribe(() => this.internalComponentsUpdated());\n        this._tabContents.changes.subscribe(() => this.internalComponentsUpdated());\n\n        // Initially load the tabs.\n        this.loadTabs();\n    }\n\n    // Fires whenever either the tab headers or tab contents query lists update.\n    private internalComponentsUpdated():void {\n        // We are using a 'counting barrier of n = 2', i.e. the code within only runs after the method is called twice.\n        // This is so that both the headers and contents query lists can update before we run code that matches the two up.\n        this._barrierCount++;\n\n        if (this._barrierCount === 2) {\n            // Reset the barrier so it can be called again.\n            this._barrierCount = 0;\n\n            // Update the tabs.\n            this.loadTabs();\n        }\n    }\n\n    // Connects tab headers to tab contents, and creates a tab instance for each pairing.\n    private loadTabs():void {\n        // Remove any tabs that no longer have an associated header.\n        this.tabs = this.tabs.filter(t => !!this._tabHeaders.find(tH => tH === t.header));\n\n        this._tabHeaders\n            // Filter out the loaded headers with attached tab instances.\n            .filter(tH => !this.tabs.find(t => t.header === tH))\n            .forEach(tH => {\n                const content = this._tabContents.find(tC => tC.id === tH.id);\n\n                if (!content) {\n                    // Error if an associated tab content cannot be found for the given header.\n                    throw new Error(\"A [suiTabHeader] must have a related [suiTabContent].\");\n                }\n\n                // Create a new tab instance for this header & content combo.\n                const tab = new Tab(tH, content);\n\n                // Subscribe to any external changes in the tab header's active state. External changes are triggered by user input.\n                tab.header.isActiveExternalChange.subscribe(() => this.onHeaderActiveChanged(tab));\n\n                // Add the new instance to the list of tabs.\n                this.tabs.push(tab);\n            });\n\n        // Assign each tab an index (which denotes the order they physically appear in).\n        this._tabHeaders\n            .forEach((tH, i) => {\n                const tab = this.tabs.find(t => t.header === tH);\n                if (tab) {\n                    tab.index = i;\n                }\n            });\n\n        // Sort the tabs by their index.\n        this.tabs.sort((a, b) => a.index - b.index);\n\n\n        if (!this.activeTab) { // Check if there are no current existing active tabs.\n            // If so, we must activate the first available tab.\n            this.activateFirstTab();\n        } else if (!this.tabs.find(t => t === this.activeTab)) { // O'wise check if current active tab has been deleted.\n            // If so, we must find the closest.\n            // Use `setTimeout` as this causes a 'changed after checked' error o'wise.\n            setTimeout(() => this.activateClosestTab(this.activeTab));\n        }\n\n        if (this.tabs.length === 0) {\n            // Error if there aren't any tabs in the tabset.\n            throw new Error(\"You cannot have no tabs!\");\n        }\n    }\n\n    // Fires whenever a tab header's active state is externally changed.\n    private onHeaderActiveChanged(tab:Tab):void {\n        // If the tab has become activated, but was not previously the active tab:\n        if (tab.isActive && this.activeTab !== tab) {\n            // Deactivate all of the tabs.\n            this.tabs.filter(t => t !== tab).forEach(t => t.isActive = false);\n\n            // Set the currently active tab to this one.\n            this.activeTab = tab;\n        }\n\n        // If the tab has become deactivated, but was previously the active tab:\n        if (!tab.isActive && this.activeTab === tab) {\n            // Activate the closest tab to it.\n            this.activateClosestTab(tab);\n        }\n    }\n\n    // Activate the first tab in the set.\n    public activateFirstTab():void {\n        this.activeTab = this.tabs[0];\n    }\n\n    // Activates the closest available tab to a given one.\n    public activateClosestTab(tab:Tab):void {\n        let nextAvailable:Tab | undefined;\n\n        // When the exited tab's index is higher than all available tabs,\n        if (tab.index >= this.tabs.length) {\n            // Activate the last tab.\n            nextAvailable = this.tabs[this.tabs.length - 1];\n        }\n\n        // If that didn't work, try the following cases:\n        if (!nextAvailable) {\n            if (!this.tabs.find(t => t === tab)) { // When the exited tab no longer exists,\n                // Replace it with a tab at the same index.\n                nextAvailable = this.tabs[tab.index];\n            } else { // Or if the exited tab still exists,\n                // Go to the tab immediately to the left.\n                nextAvailable = this.tabs[Math.max(tab.index - 1, 0)];\n            }\n        }\n\n        // However, if the chosen tab is disabled,\n        if (nextAvailable.isDisabled) {\n            // Activate the closest available tab to it.\n            return this.activateClosestTab(nextAvailable);\n        }\n\n        this.activeTab = nextAvailable;\n    }\n}\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { SuiTabset } from \"./components/tabset\";\nimport { SuiTabHeader } from \"./directives/tab-header\";\nimport { SuiTabContent } from \"./directives/tab-content\";\n\n@NgModule({\n    imports: [\n        CommonModule\n    ],\n    declarations: [\n        SuiTabset,\n        SuiTabHeader,\n        SuiTabContent\n    ],\n    exports: [\n        SuiTabset,\n        SuiTabHeader,\n        SuiTabContent\n    ]\n})\nexport class SuiTabsModule {}\n","import { NgModule } from \"@angular/core\";\n\n// Collections\nimport {\n    SuiMessageModule,\n    SuiPaginationModule\n} from \"./collections/internal\";\n\n// Modules\nimport {\n    SuiAccordionModule,\n    SuiCheckboxModule,\n    SuiCollapseModule,\n    SuiDatepickerModule,\n    SuiDimmerModule,\n    SuiDropdownModule,\n    SuiModalModule,\n    SuiPopupModule,\n    SuiProgressModule,\n    SuiRatingModule,\n    SuiSearchModule,\n    SuiSidebarModule,\n    SuiTabsModule,\n    SuiSelectModule,\n    SuiTransitionModule\n} from \"./modules/internal\";\n\n// Behaviors\nimport {\n    SuiLocalizationModule\n} from \"./behaviors/internal\";\n\n// Misc\nimport {\n    SuiUtilityModule\n} from \"./misc/internal\";\n\n@NgModule({\n    exports: [\n        // Collections\n        SuiMessageModule,\n        SuiPaginationModule,\n\n        // Modules\n        SuiAccordionModule,\n        SuiCheckboxModule,\n        SuiCollapseModule,\n        SuiDatepickerModule,\n        SuiDimmerModule,\n        SuiDropdownModule,\n        SuiModalModule,\n        SuiPopupModule,\n        SuiProgressModule,\n        SuiRatingModule,\n        SuiSearchModule,\n        SuiSelectModule,\n        SuiSidebarModule,\n        SuiTabsModule,\n        SuiTransitionModule,\n\n        // Behaviors\n        SuiLocalizationModule,\n\n        // Misc\n        SuiUtilityModule\n    ]\n})\nexport class SuiModule {}\n"],"names":["(/** @type {?} */ ($extend)).default","format","isUAWebView[\"default\"]","bowser.mobile","bowser.tablet"],"mappings":";;;;;;;;;;;;;;;;;;AAEA,MAAM,IAAI,GAAiB;IACvB,UAAU,EAAE;QACR,MAAM,EAAE;YACJ,SAAS,EAAE,UAAU,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,QAAQ,EAAE,WAAW,EAAE,SAAS,EAAE,UAAU,EAAE,UAAU;SAC3H;QACD,WAAW,EAAE;YACT,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK;SACrF;QACD,QAAQ,EAAE;YACN,QAAQ,EAAE,QAAQ,EAAE,SAAS,EAAE,WAAW,EAAE,UAAU,EAAE,QAAQ,EAAE,UAAU;SAC/E;QACD,aAAa,EAAE;YACX,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK;SAClD;QACD,cAAc,EAAE;YACZ,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;SACpC;QACD,UAAU,EAAE;YACR,MAAM,EAAE,MAAM;SACjB;QACD,mBAAmB,EAAE;YACjB,IAAI,EAAE,IAAI;SACb;QACD,mBAAmB,EAAE;YACjB,IAAI,EAAE,IAAI;SACb;QACD,OAAO,EAAE;YACL,IAAI,EAAE,QAAQ;YACd,QAAQ,EAAE,oBAAoB;YAC9B,IAAI,EAAE,aAAa;YACnB,KAAK,EAAE,WAAW;YAClB,IAAI,EAAE,MAAM;SACf;QACD,cAAc,EAAE,CAAC;KACpB;IACD,MAAM,EAAE;QACJ,WAAW,EAAE,WAAW;QACxB,SAAS,EAAE;YACP,MAAM,EAAE,YAAY;YACpB,OAAO,EAAE,kCAAkC;SAC9C;KACJ;IACD,MAAM,EAAE;QACJ,gBAAgB,EAAE,YAAY;QAC9B,MAAM,EAAE;YACJ,WAAW,EAAE,YAAY;SAC5B;QACD,KAAK,EAAE;YACH,WAAW,EAAE,WAAW;YACxB,kBAAkB,EAAE,uBAAuB;YAC3C,eAAe,EAAE,qBAAqB;SACzC;KACJ;CACJ,CAAC;;;;;;ACvDF;;;;;AAKA,mBAAsB,GAAK;IACvB,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC;CAC1C;;;;;;;AAED,oBAA0B,MAAQ,EAAE,MAAQ;;IAExC,MAAM,MAAM,GAAGA,gBAAwB,IAAI,OAAO,CAAC;IACnD,OAAO,MAAM,CAAC,IAAI,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC;CACvC;;;;;AAED,cAAc,QAAe;IACzB,OAAO,QAAQ,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;CAClD;;IAmBG;QACI,IAAI,CAAC,gBAAgB,GAAG,IAAI,YAAY,EAAQ,CAAC;QAEjD,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;QAC5B,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;QAClB,IAAI,CAAC,SAAS,GAAG,OAAO,CAAC;QACzB,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;KAC5B;;;;QAbU,QAAQ;QACf,OAAO,IAAI,CAAC,SAAS,CAAC;;;;;;IAcnB,WAAW,CAAC,QAAe;QAC9B,IAAI,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,IAAI,CAAC,QAAQ,CAAC,EAAE;YACzC,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;YAC1B,IAAI,CAAC,gBAAgB,CAAC,IAAI,EAAE,CAAC;SAChC;;;;;;IAGE,GAAG,CAAC,WAAkB,IAAI,CAAC,QAAQ;;QACtC,MAAM,MAAM,GAAG,SAAS,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;QAC/C,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE;YAC/B,MAAM,IAAI,KAAK,CAAC,UAAU,QAAQ,gBAAgB,CAAC,CAAC;SACvD;QACD,UAAU,CAAC,MAAM,EAAE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;QACjD,OAAO,SAAS,CAAC,MAAM,CAAC,CAAC;;;;;;;;IAGtB,QAAQ,CACX,MAAuB,EACvB,SAA4C;QAE5C,OAAO,UAAU,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE,SAAS,CAAC,CAAC;;;;;;;IAG7C,IAAI,CAAC,QAAe,EAAE,MAA2B;QACpD,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,SAAS,CAAC,MAAM,CAAC,CAAC;QACjD,IAAI,CAAC,gBAAgB,CAAC,IAAI,EAAE,CAAC;;;;;;;IAG1B,KAAK,CAAC,QAAe,EAAE,MAA2B;QACrD,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC;;;;;;;IAG9C,WAAW,CAAC,KAAY,EAAE,SAA4B;QACzD,OAAO,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,IAAI,MAAM,CAAC,KAAK,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;;;;YAvD/F,UAAU;;;;;;;;;ACtBX;;;YAIC,QAAQ,SAAC;gBACN,OAAO,EAAE,CAAC,YAAY,CAAC;gBACvB,SAAS,EAAE,CAAC,sBAAsB,CAAC;aACtC;;;;;;;;;;;;;;;;;;;;;;;;ICNG,KAAE;IACF,MAAG;IACH,SAAM;IACN,SAAM;;wCAHN,EAAE;wCACF,GAAG;wCACH,MAAM;wCACN,MAAM;AAGV;;;;QAQe,cAAc;QACrB,QAAQ,IAAI,CAAC,SAAS;YAClB,KAAK,mBAAmB,CAAC,EAAE,EAAE,OAAO,IAAI,CAAC;YACzC,KAAK,mBAAmB,CAAC,GAAG,EAAE,OAAO,KAAK,CAAC;SAC9C;QAED,OAAO,EAAE,CAAC;;;;;;;;IAQd,YAAY,IAAW,EACX,WAAkB,GAAG,EACrB,YAAgC,mBAAmB,CAAC,MAAM,EAC1D,aAA0B,SAAQ;QAE1C,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;;;QAIjB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;QAEtC,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QACpC,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;KAChC;CACJ;;;;;;AC5CD;;;;QAUgB,QAAQ;QAChB,OAAO,IAAI,CAAC,SAAS,IAAI,SAAS,IAAI,IAAI,CAAC,QAAQ,IAAI,SAAS,IAAI,IAAI,CAAC,eAAe,IAAI,SAAS,CAAC;;;;;QAW/F,WAAW;QAClB,OAAO,IAAI,CAAC,YAAY,CAAC;;;;;QAMlB,SAAS;QAChB,OAAO,IAAI,CAAC,UAAU,CAAC;;;;;QAMhB,QAAQ;QACf,OAAO,IAAI,CAAC,SAAS,CAAC;;;;;QAId,WAAW;QACnB,OAAO,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;;;;;QAId,UAAU;QAClB,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;;;;;;IAM/C,YAAY,qBAA6B,IAAI,EAAE,UAAiB,OAAO;;QAEnE,IAAI,CAAC,UAAU,GAAG,kBAAkB,CAAC;QACrC,IAAI,CAAC,SAAS,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC;QAElC,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;QACxB,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;QAEjB,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;KAC7B;;;;;IAGM,gBAAgB,CAAC,QAAkB;QACtC,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;QAC1B,IAAI,CAAC,iBAAiB,EAAE,CAAC;;;;;;IAItB,eAAe,CAAC,OAAkB;QACrC,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;QACxB,IAAI,CAAC,iBAAiB,EAAE,CAAC;;;;;;IAItB,sBAAsB,CAAC,cAAgC;QAC1D,IAAI,CAAC,eAAe,GAAG,cAAc,CAAC;QACtC,IAAI,CAAC,iBAAiB,EAAE,CAAC;;;;;;IAGtB,OAAO,CAAC,UAAqB;;QAGhC,MAAM,eAAe,GAAG,CAAC,QAAQ,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM,EAAE,QAAQ,CAAC,CAAC,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;QAChH,IAAI,eAAe,EAAE;YACjB,UAAU,CAAC,SAAS,GAAG,mBAAmB,CAAC,MAAM,CAAC;SACrD;aAAM,IAAI,UAAU,CAAC,SAAS,IAAI,SAAS,IAAI,UAAU,CAAC,SAAS,KAAK,mBAAmB,CAAC,MAAM,EAAE;;YAEjG,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,UAAU,GAAG,mBAAmB,CAAC,GAAG,GAAG,mBAAmB,CAAC,EAAE,CAAC;YAC1F,IAAI,IAAI,CAAC,UAAU,EAAE;;gBAEjB,IAAI,IAAI,CAAC,UAAU,CAAC,SAAS,KAAK,mBAAmB,CAAC,EAAE,EAAE;oBACtD,UAAU,CAAC,SAAS,GAAG,mBAAmB,CAAC,GAAG,CAAC;iBAClD;qBAAM,IAAI,IAAI,CAAC,UAAU,CAAC,SAAS,KAAK,mBAAmB,CAAC,GAAG,EAAE;oBAC9D,UAAU,CAAC,SAAS,GAAG,mBAAmB,CAAC,EAAE,CAAC;iBACjD;aACJ;SACJ;;QAGD,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAE7B,IAAI,CAAC,iBAAiB,EAAE,CAAC;;;;;IAGrB,iBAAiB;QACrB,IAAI,CAAC,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,YAAY,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE;;YAE1D,OAAO;SACV;QAED,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;;QAEzB,MAAM,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC;;QAGpC,UAAU,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,IAAI,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,CAAC;QAC3E,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,EAAE,WAAW,CAAC,CAAC;QACpD,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,EAAE,UAAU,CAAC,cAAc,CAAC,CAAC;;QAGlE,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,EAAE,mBAAmB,EAAE,GAAG,UAAU,CAAC,QAAQ,IAAI,CAAC,CAAC;QACxF,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,EAAE,SAAS,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;QAEjE,IAAI,UAAU,CAAC,SAAS,KAAK,mBAAmB,CAAC,EAAE,EAAE;;YAEjD,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;SAC1B;;QAGD,IAAI,CAAC,iBAAiB,GAAG,MAAM,CAAC,UAAU,CAAC,MAAM,IAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC,EAAE,UAAU,CAAC,QAAQ,CAAC,CAAC;;;;;;IAIrG,gBAAgB,CAAC,UAAqB;;QAE1C,UAAU,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,IAAI,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,CAAC;QAC9E,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,EAAE,WAAW,CAAC,CAAC;QACvD,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,EAAE,UAAU,CAAC,cAAc,CAAC,CAAC;QAErE,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,EAAE,mBAAmB,CAAC,CAAC;QAC/D,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,EAAE,SAAS,CAAC,CAAC;QAErD,IAAI,UAAU,CAAC,SAAS,KAAK,mBAAmB,CAAC,EAAE,EAAE;;YAEjD,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;SAC1B;aAAM,IAAI,UAAU,CAAC,SAAS,KAAK,mBAAmB,CAAC,GAAG,EAAE;;YAEzD,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;YACxB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;SACzB;QAED,IAAI,UAAU,CAAC,UAAU,EAAE;;YAEvB,UAAU,CAAC,UAAU,EAAE,CAAC;SAC3B;;QAGD,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC;QACpB,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;QAE1B,IAAI,CAAC,eAAe,CAAC,YAAY,EAAE,CAAC;;QAGpC,IAAI,CAAC,iBAAiB,EAAE,CAAC;;;;;;IAItB,IAAI,CAAC,aAAwB,IAAI,CAAC,WAAW;QAChD,IAAI,CAAC,UAAU,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE;YACnC,OAAO;SACV;QAED,YAAY,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;QACrC,IAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC,CAAC;;;;;IAI/B,OAAO;QACV,IAAI,CAAC,UAAU,EAAE,CAAC;QAClB,IAAI,CAAC,IAAI,EAAE,CAAC;;;;;IAIT,UAAU;QACb,IAAI,IAAI,CAAC,WAAW,EAAE;YAClB,IAAI,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;YACjC,OAAO;SACV;QACD,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;;CAExB;;;;;;AClMD;;;;;;IAoCI,YAAsB,SAAmB,EAAY,QAAmB,EAAU,eAAiC;QAA7F,cAAS,GAAT,SAAS,CAAU;QAAY,aAAQ,GAAR,QAAQ,CAAW;QAAU,oBAAe,GAAf,eAAe,CAAkB;+BAlBlF,IAAI;KAkBkF;;;;;IAzBvH,IACW,aAAa,CAAC,EAAuB;;QAE5C,IAAI,CAAC,uBAAuB,CAAC,EAAE,CAAC,CAAC;KACpC;;;;IAKD,IACW,SAAS;QAChB,IAAI,IAAI,CAAC,WAAW,EAAE;YAClB,OAAO,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC;SACrC;QACD,OAAO,KAAK,CAAC;KAChB;;;;IAED,IACW,QAAQ;QACf,IAAI,IAAI,CAAC,WAAW,EAAE;YAClB,OAAO,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC;SACpC;QACD,OAAO,KAAK,CAAC;KAChB;;;;;IAKM,uBAAuB,CAAC,oBAAyC;QACpE,IAAI,CAAC,WAAW,GAAG,oBAAoB,CAAC;QACxC,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAClD,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC;QAC9D,IAAI,CAAC,WAAW,CAAC,sBAAsB,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;;;;YAxCrE,SAAS,SAAC;gBACP,QAAQ,EAAE,iBAAiB;gBAC3B,QAAQ,EAAE,YAAY;aACzB;;;;YANQ,SAAS;YAAE,UAAU;YAAiC,iBAAiB;;;4BAW3E,KAAK;8BAML,WAAW,SAAC,kBAAkB;wBAG9B,WAAW,SAAC,eAAe;uBAQ3B,WAAW,SAAC,cAAc;;;;;;;AC5B/B;;;YAIC,QAAQ,SAAC;gBACN,OAAO,EAAE,CAAC,YAAY,CAAC;gBACvB,YAAY,EAAE;oBACV,aAAa;iBAChB;gBACD,OAAO,EAAE;oBACL,aAAa;iBAChB;gBACD,SAAS,EAAE,EAAE;aAChB;;;;;;;;;;;;ACbD;IA0CI;QACI,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;QAC1B,IAAI,CAAC,SAAS,GAAG,IAAI,YAAY,EAAc,CAAC;QAEhD,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;QAEzB,IAAI,CAAC,oBAAoB,GAAG,IAAI,oBAAoB,EAAE,CAAC;QACvD,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC;QACzB,IAAI,CAAC,kBAAkB,GAAG,GAAG,CAAC;QAE9B,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;KACnB;;;;IAEM,OAAO;QACV,IAAI,CAAC,oBAAoB,CAAC,OAAO,CAAC,IAAI,UAAU,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,kBAAkB,EAAE,mBAAmB,CAAC,GAAG,EAAE;YAChH,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;YACxB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SAC7B,CAAC,CAAC,CAAC;;;;YApDX,SAAS,SAAC;gBACP,QAAQ,EAAE,aAAa;gBACvB,QAAQ,EAAE;;;;;CAKb;gBACG,MAAM,EAAE,CAAC;;;;;CAKZ,CAAC;aACD;;;;;4BAEI,KAAK;wBAGL,MAAM,SAAC,SAAS;yBAOhB,KAAK;iCAGL,KAAK;oBAGL,KAAK,SAAC,OAAO;;;;;;;ACvClB;;;YAKC,QAAQ,SAAC;gBACN,OAAO,EAAE;oBACL,YAAY;oBACZ,mBAAmB;iBACtB;gBACD,YAAY,EAAE;oBACV,UAAU;iBACb;gBACD,OAAO,EAAE;oBACL,UAAU;iBACb;aACJ;;;;;;;;;;;;;;;;;AChBD;IAiHI;QACI,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QACvB,IAAI,CAAC,UAAU,GAAG,IAAI,YAAY,EAAU,CAAC;QAE7C,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;QACnB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;QACjB,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;QACnB,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;QAC/B,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;QAC9B,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;KAC3B;;;;IAlED,IACW,OAAO;QACd,OAAO,IAAI,CAAC,QAAQ,CAAC;KACxB;;;;;QAEU,OAAO,CAAC,KAAwB;QACvC,IAAI,CAAC,QAAQ,GAAG,CAAC,KAAK,IAAI,SAAS,IAAI,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,CAAC,CAAC,GAAG,SAAS,CAAC;;;;;IAM1E,IACW,cAAc;QACrB,OAAO,IAAI,CAAC,eAAe,CAAC;KAC/B;;;;;QAEU,cAAc,CAAC,KAAY;QAClC,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;QAC1C,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;;;;;IAGlF,IACW,kBAAkB;;QACzB,MAAM,OAAO,GAAG,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,SAAS,CAAC;QAChD,OAAO,IAAI,CAAC,mBAAmB,IAAI,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC;KAC/D;;;;;QAEU,kBAAkB,CAAC,KAAa;QACvC,IAAI,CAAC,mBAAmB,GAAG,KAAK,CAAC;;;;;IAYrC,IACW,IAAI;QACX,OAAO,IAAI,CAAC,KAAK,CAAC;KACrB;;;;;QAEU,IAAI,CAAC,KAAY;QACxB,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;;;;;QAGb,KAAK;QACZ,OAAO,IAAI,CAAC,MAAM,CAAC;;;;;IAkBhB,WAAW;QACd,OAAO,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;;;;;IAGlB,OAAO;QACV,OAAO,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC;;;;;;IAG/B,OAAO,CAAC,OAAc;;QACzB,MAAM,KAAK,GAAU,CAAC,MAAM,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;QACtG,IAAI,KAAK,KAAK,IAAI,CAAC,KAAK,EAAE;YACtB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;YACnB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SACpC;;;;;IAIE,WAAW;QACd,IAAI,CAAC,WAAW,EAAE,CAAC;;;;;IAIf,WAAW;QACf,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;QAE9E,MAAM,CAAC,KAAK,EAAE,GAAG,CAAC,GAAG,IAAI,CAAC,eAAe,EAAE,CAAC;QAE5C,IAAI,CAAC,MAAM,GAAG,KAAK,CAAS,GAAG,GAAG,KAAK,CAAC;aACnC,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;aACf,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;;;;;IAGtB,eAAe;;QACnB,MAAM,OAAO,GAAG,CAAC,IAAI,CAAC,OAAO,IAAI,SAAS,IAAI,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,SAAS,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC;;QAEtG,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,OAAO,CAAC,GAAG,CAAC,CAAC;;QAChD,IAAI,KAAK,GAAG,CAAC,CAAC;;QACd,IAAI,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC;QAEzB,IAAI,IAAI,CAAC,SAAS,EAAE;;YAChB,MAAM,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,GAAG,CAAC,CAAC,CAAC;;YAC3C,MAAM,WAAW,GAAG,OAAO,GAAG,CAAC,KAAK,CAAC,GAAG,UAAU,GAAG,CAAC,GAAG,UAAU,CAAC;YAEpE,IAAI,IAAI,CAAC,IAAI,IAAI,UAAU,EAAE;gBACzB,GAAG,GAAG,OAAO,CAAC;aACjB;iBAAM,IAAI,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,IAAI,GAAG,UAAU,EAAE;gBAChD,KAAK,GAAG,IAAI,CAAC,SAAS,GAAG,OAAO,CAAC;aACpC;iBAAM;gBACH,KAAK,GAAG,IAAI,CAAC,IAAI,GAAG,UAAU,GAAG,CAAC,CAAC;gBACnC,GAAG,GAAG,IAAI,CAAC,IAAI,GAAG,WAAW,CAAC;aACjC;SACJ;aAAM;YACH,KAAK,GAAG,IAAI,GAAG,OAAO,CAAC;YACvB,GAAG,GAAG,KAAK,GAAG,OAAO,CAAC;SACzB;QAED,OAAO,CAAC,KAAK,EAAE,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;;;;YAtLrD,SAAS,SAAC;gBACP,QAAQ,EAAE,gBAAgB;gBAC1B,QAAQ,EAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;CA4Bb;gBACG,MAAM,EAAE,CAAC;;;;CAIZ,CAAC;aACD;;;;;yBAGI,WAAW,SAAC,UAAU,cACtB,WAAW,SAAC,kBAAkB,cAC9B,WAAW,SAAC,YAAY;yBAMxB,MAAM;sBAUN,KAAK;uBASL,KAAK;6BAGL,KAAK;iCAUL,KAAK;+BAUL,KAAK;wBAGL,KAAK;0BAGL,KAAK;mBAGL,KAAK;;;;;;;ACpGV;;;YAKC,QAAQ,SAAC;gBACN,OAAO,EAAE,CAAC,YAAY,CAAC;gBACvB,OAAO,EAAE,CAAC,aAAa,CAAC;gBACxB,YAAY,EAAE,CAAC,aAAa,CAAC;gBAC7B,SAAS,EAAE,EAAE;aAChB;;;;;;;;;;;;;;;;;;;;;;ACVD;;;;IA2FI,YAAoB,eAAiC;QAAjC,oBAAe,GAAf,eAAe,CAAkB;QACjD,IAAI,CAAC,oBAAoB,GAAG,IAAI,oBAAoB,CAAC,KAAK,CAAC,CAAC;QAE5D,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACrB,IAAI,CAAC,YAAY,GAAG,IAAI,YAAY,CAAU,KAAK,CAAC,CAAC;KACxD;;;;;QA5DU,OAAO,CAAC,OAA2B;QAC1C,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;QACxB,IAAI,CAAC,eAAe,CAAC,aAAa,EAAE,CAAC;;;;;IAQzC,IACW,MAAM;QACb,OAAO,IAAI,CAAC,OAAO,CAAC;KACvB;;;;;QAEU,MAAM,CAAC,KAAa;;QAE3B,MAAM,MAAM,GAAG,CAAC,CAAC,KAAK,CAAC;QAEvB,IAAI,MAAM,KAAK,IAAI,CAAC,MAAM,EAAE;;YAExB,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;YAEtB,IAAI,MAAM,IAAI,IAAI,CAAC,QAAQ,EAAE;;gBAEzB,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;aACxC;YACD,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;;YAGpC,IAAI,CAAC,oBAAoB,CAAC,OAAO,EAAE,CAAC;YACpC,IAAI,CAAC,oBAAoB,CAAC,OAAO,CAAC,IAAI,UAAU,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC;SAC/F;;;;;QAGM,UAAU;QACjB,IAAI,IAAI,CAAC,QAAQ,EAAE;YACf,OAAO,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC;SACnC;QAED,OAAO,MAAM,CAAC;;;;;QAGP,kBAAkB;QACzB,IAAI,IAAI,CAAC,QAAQ,EAAE;;YAEf,OAAO,IAAI,CAAC,QAAQ,CAAC,kBAAkB,CAAC;SAC3C;;QAED,OAAO,CAAC,CAAC;;;;;IAaN,MAAM;QACT,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;YAClB,IAAI,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC;SAC9B;;;;YAjGR,SAAS,SAAC;gBACP,QAAQ,EAAE,qBAAqB;gBAC/B,QAAQ,EAAE,mBAAmB;gBAC7B,QAAQ,EAAE;;;;;;;;;;;CAWb;gBACG,MAAM,EAAE,CAAC;;;;;;;;;;CAUZ,CAAC;aACD;;;;YA9BgD,iBAAiB;;;yBAyC7D,KAAK;qBAKL,KAAK;2BA0CL,MAAM;;;;;;;ACtFX;IAQI;QACI,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QAExB,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC;QACzB,IAAI,CAAC,kBAAkB,GAAG,GAAG,CAAC;QAE9B,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;KACpB;;;;;IAEM,QAAQ,CAAC,KAAuB;QACnC,KAAK,CAAC,OAAO,GAAG,IAAI,CAAC;QACrB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;;;;;;IAGrB,gBAAgB,CAAC,KAAuB;QAC3C,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE;YACnB,OAAO;SACV;QAED,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;YACjB,IAAI,CAAC,KAAK,KAAK,EAAE;gBACb,CAAC,CAAC,MAAM,GAAG,KAAK,CAAC;aACpB;SACJ,CAAC,CAAC;;CAEV;;;;;;ACnCD;IAkDI;;QAEI,IAAI,CAAC,QAAQ,GAAG,IAAI,mBAAmB,EAAE,CAAC;QAE1C,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;KAC1B;;;;IA7BD,IACW,WAAW;QAClB,OAAO,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC;KACpC;;;;;QAEU,WAAW,CAAC,KAAa;QAChC,IAAI,CAAC,QAAQ,CAAC,WAAW,GAAG,KAAK,CAAC;;;;;;IAGtC,IACW,UAAU,CAAC,UAAiB;QACnC,IAAI,CAAC,QAAQ,CAAC,UAAU,GAAG,UAAU,CAAC;KACzC;;;;;IAED,IACW,kBAAkB,CAAC,QAAe;QACzC,IAAI,CAAC,QAAQ,CAAC,kBAAkB,GAAG,QAAQ,CAAC;KAC/C;;;;IAcM,kBAAkB;QACrB,IAAI,CAAC,YAAY,EAAE,CAAC;;QAGpB,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,SAAS,CAAC,MAAM,IAAI,CAAC,YAAY,EAAE,CAAC,CAAC;;;;;IAGvD,YAAY;QACf,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,IAAI,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;;;;YA7D5D,SAAS,SAAC;gBACP,QAAQ,EAAE,eAAe;gBACzB,QAAQ,EAAE;;CAEb;gBACG,MAAM,EAAE,CAAC;;;;;;;;;;CAUZ,CAAC;aACD;;;;;yBAEI,WAAW,SAAC,UAAU,cACtB,WAAW,SAAC,iBAAiB;0BAG7B,KAAK;yBASL,KAAK;iCAKL,KAAK;sBAOL,eAAe,SAAC,iBAAiB,EAAE,EAAC,WAAW,EAAE,IAAI,EAAC;;;;;;;AC/C3D;;;;;gBAoD+B,QAAmB,EAAU,SAAmB;QAAhD,aAAQ,GAAR,QAAQ,CAAW;QAAU,cAAS,GAAT,SAAS,CAAU;QACvE,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;;QAGtB,IAAI,CAAC,gBAAgB,GAAG,GAAG,CAAC;QAE5B,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;QACzB,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;;;;;IApD/B,IACW,UAAU;QACjB,OAAO,IAAI,CAAC,WAAW,CAAC;KAC3B;;;;IAKD,IACW,WAAW;QAClB,OAAO,CAAC,IAAI,CAAC,UAAU,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC;KACjD;;;;IAGD,IACW,YAAY;QACnB,OAAO,IAAI,CAAC,aAAa,CAAC;KAC7B;;;;IAOD,IACW,WAAW;QAClB,OAAO,IAAI,CAAC,WAAW,CAAC;KAC3B;;;;;QAGU,WAAW,CAAC,KAAa;QAChC,IAAI,KAAK,EAAE;YACP,IAAI,CAAC,IAAI,EAAE,CAAC;SACf;aAAM;YACH,IAAI,CAAC,IAAI,EAAE,CAAC;SACf;;;;;QAMO,kBAAkB;QAC1B,OAAO,IAAI,CAAC,SAAS,GAAG,CAAC,GAAG,IAAI,CAAC,gBAAgB,CAAC;;;;;IAa/C,IAAI;QACP,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;QAC1B,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;;QAGzB,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,aAAa,EAAE,UAAU,EAAE,QAAQ,CAAC,CAAC;;QAG3E,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,YAAY,EAAE,CAAC,EAAE,KAAK,EAAE;YAC7D,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;SAC9B,CAAC,CAAC;;;;;IAGA,IAAI;QACP,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;;QAG1B,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,YAAY,EAAE,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,YAAY,EAAE,IAAI,EAAE;;YAEnG,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,aAAa,EAAE,UAAU,CAAC,CAAC;YAEpE,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;YAC3B,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;SAC3B,CAAC,CAAC;;;;;;;;;IAGC,OAAO,CAAC,WAAkB,EAAE,SAAgB,EAAE,mBAA2B,KAAK,EAAE,WAAsB,SAAQ;;QAClH,MAAM,YAAY,GAAG;YACjB;gBACI,MAAM,EAAE,CAAC;gBACT,MAAM,EAAE,GAAG,WAAW,IAAI;aAC7B;YACD;gBACI,MAAM,EAAE,CAAC;gBACT,MAAM,EAAE,GAAG,SAAS,IAAI;aAC3B;SACJ,CAAC;QAEF,IAAI,gBAAgB,EAAE;YAClB,YAAY,CAAC,IAAI,CAAC;gBACd,MAAM,EAAE,CAAC;gBACT,MAAM,EAAE,MAAM;aACjB,CAAC,CAAC;SACN;;;QAID,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,OAAO,CAC/B,YAAY,EACZ;YACI,KAAK,EAAE,CAAC;;YAER,QAAQ,EAAE,IAAI,CAAC,kBAAkB;YACjC,UAAU,EAAE,CAAC;YACb,MAAM,EAAE,MAAM;YACd,IAAI,EAAE,MAAM;SACf,CACJ,CAAC;QAEF,IAAI,IAAI,CAAC,SAAS,EAAE;;YAEhB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;SAC1B;QAED,UAAU,CAAC,MAAM,QAAQ,EAAE,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC;;;;YA5H3D,SAAS,SAAC;gBACP,QAAQ,EAAE,eAAe;aAC5B;;;;YAJmB,UAAU;YAAsB,SAAS;;;yBAOxD,WAAW,SAAC,gBAAgB;0BAQ5B,WAAW,SAAC,iBAAiB;2BAM7B,WAAW,SAAC,kBAAkB;0BAU9B,KAAK;+BAcL,KAAK;;;;;;;AC7CV;;;YAIC,QAAQ,SAAC;gBACN,OAAO,EAAE;oBACL,YAAY;iBACf;gBACD,YAAY,EAAE;oBACV,WAAW;iBACd;gBACD,OAAO,EAAE;oBACL,WAAW;iBACd;aACJ;;;;;;;;;;;;ACdD;;;YAOC,QAAQ,SAAC;gBACN,OAAO,EAAE;oBACL,YAAY;oBACZ,iBAAiB;oBACjB,mBAAmB;iBACtB;gBACD,YAAY,EAAE;oBACV,YAAY;oBACZ,iBAAiB;iBACpB;gBACD,OAAO,EAAE;oBACL,YAAY;oBACZ,iBAAiB;iBACpB;gBACD,SAAS,EAAE,EAAE;aAChB;;;;;;;;;;;;;;;;;ACtBD;;;;AAOA;;;;IACI,YAAoB,KAAO;QAAP,UAAK,GAAL,KAAK,CAAE;iCAEA,SAAQ;KAFJ;;;;;IAIxB,QAAQ,CAAC,CAAiB;QAC7B,OAAO,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;;;;;;IAG3B,yBAAyB,CAAC,EAAa;QAC1C,IAAI,CAAC,iBAAiB,GAAG,EAAE,CAAC;;CAEnC;;;;;AAQD,gCAAuC,IAAa;IAChD,OAAO;QACH,OAAO,EAAE,aAAa;QACtB,WAAW,EAAE,UAAU,CAAC,MAAM,IAAI,CAAC;QACnC,KAAK,EAAE,IAAI;KACd,CAAC;CACL;;;;;;ACjCD;;;;AAOA;;;;IACI,YAAoB,KAAO;QAAP,UAAK,GAAL,KAAK,CAAE;wBAET,CAAC,CAAC,QAAO;yBACR,SAAQ;KAHI;;;;;IAKxB,UAAU,CAAC,KAAO;QACrB,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;;;;;;IAG1B,gBAAgB,CAAC,EAAc;QAClC,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;;;;;;IAGhB,iBAAiB,CAAC,EAAa;QAClC,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;;CAE3B;;;;;AAQD,oCAA2C,IAAa;IACpD,OAAO;QACH,OAAO,EAAE,iBAAiB;QAC1B,WAAW,EAAE,UAAU,CAAC,MAAM,IAAI,CAAC;QACnC,KAAK,EAAE,IAAI;KACd,CAAC;CACL;;;;;;;;ICpCG,QAAS;IACT,MAAO;IACP,SAAU;IACV,QAAS;IAET,UAAW;IACX,SAAU;IAEV,SAAU;IACV,YAAa;;gBATb,IAAI;gBACJ,EAAE;gBACF,KAAK;gBACL,IAAI;gBAEJ,MAAM;gBACN,KAAK;gBAEL,KAAK;gBACL,SAAS;;AAmBb,MAAa,IAAI,GAAG;IAChB,KAAK,EAAE;;;;;;QACH,KAAK,CAAC,CAAQ,EAAE,SAAgB,CAAC;YAC7B,OAAO,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,MAAM,CAAC,CAAC;SACrD;;;;;;;QACD,KAAK,CAAI,KAAS,EAAE,WAAkB;;YAClC,MAAM,OAAO,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;;YAE/B,MAAM,MAAM,GAAS,EAAE,CAAC;YACxB,OAAO,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE;gBACvB,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAAE,WAAW,CAAC,CAAC,CAAC;aAC/C;YACD,OAAO,MAAM,CAAC;SACjB;;;;;;;QACD,OAAO,CAAI,KAAS,EAAE,KAAa;YAC/B,OAAO,KAAK,CAAC,MAAM,CACf,CAAC,MAAM,EAAE,CAAC;;gBACN,MAAM,UAAU,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,QAAQ,EAAE,CAAC;gBACvC,MAAM,CAAC,UAAU,CAAC,GAAG,MAAM,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;gBAC9C,MAAM,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;gBAC3B,OAAO,MAAM,CAAC;aACjB,EACD,MAAM,EAAE,CAAC,CAAC;SACjB;;;;;;QACD,OAAO,CAAI,KAAW;YAClB,OAAO,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE,EAAE,CAAC,KAAK,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;SACpD;KACJ;IAED,MAAM,EAAE;;;;;;;QACJ,OAAO,CAAC,GAAU,EAAE,MAAa,EAAE,OAAc;;YAC7C,IAAI,CAAC,GAAG,GAAG,CAAC;YACZ,OAAO,CAAC,CAAC,MAAM,GAAG,MAAM,EAAE;gBACtB,CAAC,GAAG,OAAO,GAAG,CAAC,CAAC;aACnB;YACD,OAAO,CAAC,CAAC;SACZ;KACJ;IAED,GAAG,EAAE;;;;;QACD,qBAAqB,CAAC,cAAsB;;YACxC,IAAI,KAAK,GAAG,cAAc,CAAC;YAC3B,IAAI,OAAO,cAAc,KAAK,QAAQ,EAAE;gBACpC,KAAK,GAAG,IAAI,CAAC;aAChB;YAED,OAAO,KAAK,CAAC;SAChB;KACJ;IAED,MAAM,EAAE;;;;;;;QACJ,SAAS,CAAO,MAAQ,EAAE,IAAY;YAClC,IAAI,CAAC,IAAI,EAAE;gBACP,0BAAO,MAAa,GAAM;aAC7B;;YAED,IAAI,QAAQ,sBAAG,MAAa,GAAqB;YAEjD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;gBAC/D,QAAQ,GAAG,oBAAC,QAAe,IAAsB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;aAC1D;YAED,0BAAO,QAAe,GAAM;SAC/B;KACJ;IAED,IAAI,EAAE;;;;;;QACF,KAAK,CAAC,CAAQ,EAAE,CAAQ;YACpB,OAAO,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;SAChC;;;;;;QACD,OAAO,CAAC,CAAQ,EAAE,CAAQ;YACtB,OAAO,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;SAC/B;;;;;;QACD,SAAS,CAAC,CAAQ,EAAE,CAAQ;YACxB,OAAO,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;SAChC;;;;;;QACD,GAAG,CAAC,CAAQ,EAAE,CAAQ;;YAClB,MAAM,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC;YAClB,IAAI,GAAG,GAAG,CAAC,EAAE;gBACT,OAAO,GAAG,GAAG,CAAC,CAAC;aAClB;YACD,OAAO,GAAG,CAAC;SACd;KACJ;CACJ,CAAC;;;;;;AClHF;;IAGI,SAAU;IACV,OAAQ;IACR,QAAS;IACT,OAAQ;IACR,OAAQ;IACR,SAAU;;4BALV,MAAM;4BACN,IAAI;4BACJ,KAAK;4BACL,IAAI;4BACJ,IAAI;4BACJ,MAAM;;AAGV,MAAa,QAAQ,GAAG;;;;;;;IACpB,OAAO,CAAC,SAAuB,EAAE,IAAS,EAAE,WAAmB,KAAK;QAChE,QAAQ,SAAS;YACb,KAAK,aAAa,CAAC,MAAM;;gBACrB,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,WAAW,EAAE,GAAG,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;gBAC3D,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;gBACxB,IAAI,CAAC,QAAQ,EAAE;oBACX,MAAM;iBACT;;YAEL,KAAK,aAAa,CAAC,IAAI;gBACnB,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;gBACjB,IAAI,CAAC,QAAQ,EAAE;oBACX,MAAM;iBACT;;YAEL,KAAK,aAAa,CAAC,KAAK;gBACpB,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;gBAChB,IAAI,CAAC,QAAQ,EAAE;oBACX,MAAM;iBACT;;YAEL,KAAK,aAAa,CAAC,IAAI;gBACnB,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;gBACjB,IAAI,CAAC,QAAQ,EAAE;oBACX,MAAM;iBACT;;YAEL,KAAK,aAAa,CAAC,IAAI;gBACnB,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;gBACnB,IAAI,CAAC,QAAQ,EAAE;oBACX,MAAM;iBACT;;YAEL,KAAK,aAAa,CAAC,MAAM;gBACrB,IAAI,CAAC,UAAU,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;SAC7B;QAED,OAAO,IAAI,CAAC;KACf;;;;;;IAED,KAAK,CAAC,SAAuB,EAAE,IAAS;QACpC,QAAQ,SAAS;YACb,KAAK,aAAa,CAAC,IAAI;gBACnB,IAAI,CAAC,QAAQ,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;YAEzB,KAAK,aAAa,CAAC,KAAK;gBACpB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;;YAE1C,KAAK,aAAa,CAAC,IAAI;gBACnB,IAAI,CAAC,QAAQ,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,CAAC,CAAC;gBAC/B,MAAM;YACV,KAAK,aAAa,CAAC,IAAI;gBACnB,IAAI,CAAC,UAAU,CAAC,EAAE,EAAE,EAAE,EAAE,GAAG,CAAC,CAAC;gBAC7B,MAAM;YACV,KAAK,aAAa,CAAC,MAAM;gBACrB,IAAI,CAAC,UAAU,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC;gBACzB,MAAM;SACb;QAED,OAAO,IAAI,CAAC;KACf;;;;;;;IAED,KAAK,CAAC,SAAuB,EAAE,CAAM,EAAE,CAAM;;QACzC,IAAI,KAAK,GAAG,IAAI,CAAC;QACjB,QAAQ,SAAS;YACb,KAAK,aAAa,CAAC,MAAM;gBACrB,KAAK,GAAG,KAAK,IAAI,CAAC,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC,UAAU,EAAE,CAAC;;YAEvD,KAAK,aAAa,CAAC,IAAI;gBACnB,KAAK,GAAG,KAAK,IAAI,CAAC,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC,QAAQ,EAAE,CAAC;;YAEnD,KAAK,aAAa,CAAC,IAAI;gBACnB,KAAK,GAAG,KAAK,IAAI,CAAC,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC,OAAO,EAAE,CAAC;;YAEjD,KAAK,aAAa,CAAC,KAAK;gBACpB,KAAK,GAAG,KAAK,IAAI,CAAC,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC,QAAQ,EAAE,CAAC;;YAEnD,KAAK,aAAa,CAAC,IAAI;gBACnB,KAAK,GAAG,KAAK,IAAI,CAAC,CAAC,WAAW,EAAE,KAAK,CAAC,CAAC,WAAW,EAAE,CAAC;SAC5D;QACD,OAAO,KAAK,CAAC;KAChB;;;;;;IAED,IAAI,CAAC,SAAuB,EAAE,IAAS;QACnC,OAAO,QAAQ,CAAC,GAAG,CAAC,SAAS,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;KAC3C;;;;;;;IAED,GAAG,CAAC,SAAuB,EAAE,IAAS,EAAE,CAAQ;;QAC5C,MAAM,IAAI,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;;QAChC,MAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;;QAC9B,MAAM,GAAG,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;QAE3B,QAAQ,SAAS;YACb,KAAK,aAAa,CAAC,MAAM;gBACrB,IAAI,CAAC,WAAW,CAAC,IAAI,GAAG,CAAC,GAAG,EAAE,CAAC,CAAC;gBAChC,IAAI,IAAI,CAAC,QAAQ,EAAE,KAAK,KAAK,EAAE;oBAC3B,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;iBACnB;gBACD,MAAM;YACV,KAAK,aAAa,CAAC,IAAI;gBACnB,IAAI,CAAC,WAAW,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC;gBAC3B,IAAI,IAAI,CAAC,QAAQ,EAAE,KAAK,KAAK,EAAE;oBAC3B,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;iBACnB;gBACD,MAAM;YACV,KAAK,aAAa,CAAC,KAAK;gBACpB,IAAI,CAAC,QAAQ,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;gBACzB,IAAI,IAAI,CAAC,QAAQ,EAAE,KAAK,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE;oBAClD,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;iBACnB;gBACD,MAAM;YACV,KAAK,aAAa,CAAC,IAAI;gBACnB,IAAI,CAAC,OAAO,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;gBACtB,MAAM;YACV,KAAK,aAAa,CAAC,IAAI;gBACnB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC,CAAC;gBACnC,MAAM;YACV,KAAK,aAAa,CAAC,MAAM;gBACrB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,UAAU,EAAE,GAAG,CAAC,CAAC,CAAC;gBACvC,MAAM;SACb;QACD,OAAO,IAAI,CAAC;KACf;;;;;;IAED,QAAQ,CAAC,SAAuB,EAAE,IAAS;;QACvC,MAAM,IAAI,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;;QAChC,MAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;;QAC9B,MAAM,GAAG,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;QAE3B,QAAQ,SAAS;YACb,KAAK,aAAa,CAAC,MAAM;gBACrB,IAAI,CAAC,WAAW,CAAC,IAAI,GAAG,EAAE,CAAC,CAAC;gBAC5B,IAAI,IAAI,CAAC,QAAQ,EAAE,KAAK,KAAK,EAAE;oBAC3B,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;iBACnB;gBACD,MAAM;YACV,KAAK,aAAa,CAAC,IAAI;gBACnB,IAAI,CAAC,WAAW,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC;gBAC3B,IAAI,IAAI,CAAC,QAAQ,EAAE,KAAK,KAAK,EAAE;oBAC3B,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;iBACnB;gBACD,MAAM;YACV,KAAK,aAAa,CAAC,KAAK;gBACpB,IAAI,CAAC,QAAQ,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;gBACzB,IAAI,IAAI,CAAC,QAAQ,EAAE,KAAK,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE;oBAClD,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;iBACnB;gBACD,MAAM;YACV,KAAK,aAAa,CAAC,IAAI;gBACnB,IAAI,CAAC,OAAO,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;gBACtB,MAAM;YACV,KAAK,aAAa,CAAC,IAAI;;gBACnB,MAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;gBAC9B,IAAI,CAAC,QAAQ,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;gBACzB,IAAI,IAAI,CAAC,QAAQ,EAAE,KAAK,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE;oBAClD,IAAI,CAAC,QAAQ,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;iBAC5B;gBACD,MAAM;YACV,KAAK,aAAa,CAAC,MAAM;;gBACrB,MAAM,OAAO,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC;gBAClC,IAAI,CAAC,UAAU,CAAC,OAAO,GAAG,CAAC,CAAC,CAAC;SACpC;QACD,OAAO,IAAI,CAAC;KACf;;;;;IAED,KAAK,CAAC,IAAS;QACX,OAAO,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC;KACnC;CACJ,CAAC;;;;;;ACpLF;;;;;;IAWI,YAAoB,eAA8B,EAC9B,2BACA;QAFA,oBAAe,GAAf,eAAe,CAAe;QAC9B,8BAAyB,GAAzB,yBAAyB;QACzB,cAAS,GAAT,SAAS;KAAa;;;;;;;IAEnC,eAAe,CAAI,IAAY,EAAE,YAAuB,EAAE;;QAE7D,MAAM,OAAO,GAAG,IAAI,CAAC,yBAAyB,CAAC,uBAAuB,mBAAC,IAAe,EAAC,CAAC;;QAGxF,MAAM,QAAQ,GAAG,kBAAkB,CAAC,gBAAgB,CAChD,SAAS,EACT,IAAI,CAAC,SAAS,CACjB,CAAC;;QAGF,MAAM,YAAY,GAAG,OAAO,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;QAE9C,OAAO,YAAY,CAAC;;;;;;;;;IAGjB,UAAU,CAAmC,aAA8B,EAAE,QAAuB,EAAE,OAAS;QAClH,aAAa,CAAC,kBAAkB,CAAI,QAAQ,EAAE,OAAO,CAAC,CAAC;;;;;;;;IAIpD,YAAY,CAAI,YAA4B,EAAE,aAA8B;QAC/E,aAAa,CAAC,MAAM,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;;;;;;;IAI5C,mBAAmB,CAAI,YAA4B;QACtD,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC;;;;;;;IAIpD,qBAAqB,CAAI,YAA4B;QACxD,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC;;;;;;;;IAIpD,aAAa,CAAI,YAA4B,EAAE,OAAe;QACjE,OAAO,CAAC,WAAW,CAAC,YAAY,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC;;;;;;;IAItD,kBAAkB,CAAI,YAA4B;QACrD,IAAI,CAAC,aAAa,CAAC,YAAY,qBAAE,QAAQ,CAAC,aAAa,CAAC,MAAM,CAAC,GAAE,CAAC;;;;;;;IAG/D,kBAAkB,CAAI,YAA4B;;QACrD,MAAM,OAAO,qBAAG,YAAY,CAAC,QAAQ,CAAC,aAAwB,EAAC;;QAE/D,IAAI,OAAO,CAAC,UAAU,EAAE;YACpB,OAAO,CAAC,UAAU,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;SAC3C;;;;YAxDR,UAAU;;;;YARK,cAAc;YAAE,wBAAwB;YAAE,QAAQ;;;;;;;ACAlE;AAmBA,MAAa,oBAAoB,GAAG;IAChC,IAAI,oBAAE,MAA8B,CAAA;IACpC,OAAO,oBAAE,UAAkC,CAAA;IAC3C,GAAG,oBAAE,KAA6B,CAAA;IAClC,QAAQ,oBAAE,WAAmC,CAAA;IAC7C,OAAO,oBAAE,UAAkC,CAAA;IAC3C,IAAI,oBAAE,MAA8B,CAAA;IACpC,UAAU,oBAAE,aAAqC,CAAA;IACjD,UAAU,oBAAE,aAAqC,CAAA;IACjD,MAAM,oBAAE,QAAgC,CAAA;IACxC,WAAW,oBAAE,cAAsC,CAAA;IACnD,QAAQ,oBAAE,WAAmC,CAAA;IAC7C,KAAK,oBAAE,OAA+B,CAAA;IACtC,WAAW,oBAAE,cAAsC,CAAA;CACtD,CAAC;;;;;AAWF,2BAA2B,SAA8B;IACrD,IAAI,CAAC,SAAS,IAAI,SAAS,KAAK,oBAAoB,CAAC,IAAI,EAAE;QACvD,OAAO,MAAM,CAAC;KACjB;IAGD,MAAM,CAAC,SAAS,EAAE,SAAS,CAAC,GAAG,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;;IAGpD,MAAM,eAAe,GAAG,CAAC,SAAS,CAAC,CAAC;;IAGpC,QAAQ,SAAS;QACb,KAAK,KAAK,CAAC;QACX,KAAK,MAAM;YACP,eAAe,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAC9B,MAAM;QACV,KAAK,QAAQ,CAAC;QACd,KAAK,OAAO;YACR,eAAe,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YAC5B,MAAM;KACb;;IAGD,yBAAO,eAAe,CAAC,IAAI,CAAC,GAAG,CAAc,EAAC;CACjD;;;;;AAED,2BAA2B,MAAa;IACpC,IAAI,CAAC,MAAM,IAAI,MAAM,KAAK,MAAM,EAAE;QAC9B,OAAO,MAAM,CAAC;KACjB;IAED,MAAM,CAAC,SAAS,EAAE,SAAS,CAAC,GAAG,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;;IAEjD,MAAM,eAAe,GAAG,CAAC,SAAS,CAAC,CAAC;IAEpC,QAAQ,SAAS;QACb,KAAK,KAAK,CAAC;QACX,KAAK,QAAQ;YACT,QAAQ,SAAS;gBACb,KAAK,OAAO;oBACR,eAAe,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;oBAC7B,MAAM;gBACV,KAAK,KAAK;oBACN,eAAe,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;oBAC9B,MAAM;aACb;YACD,MAAM;QACV,KAAK,MAAM,CAAC;QACZ,KAAK,OAAO;YACR,QAAQ,SAAS;gBACb,KAAK,OAAO;oBACR,eAAe,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;oBAC5B,MAAM;gBACV,KAAK,KAAK;oBACN,eAAe,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;oBAC/B,MAAM;aACb;YACD,MAAM;KACb;IAED,yBAAO,eAAe,CAAC,IAAI,CAAC,GAAG,CAAyB,EAAC;CAC5D;AAED;;;;QAUe,SAAS;QAChB,OAAO,IAAI,CAAC,UAAU,CAAC;;;;;;QAGhB,SAAS,CAAC,SAA8B;QAC/C,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;QAC5B,IAAI,IAAI,CAAC,OAAO,EAAE;YACd,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,SAAS,GAAG,iBAAiB,CAAC,SAAS,CAAC,CAAC;SACjE;;;;;;QAGM,QAAQ,CAAC,QAAgB;QAChC,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;;;;;QAGnB,eAAe;QACtB,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE;YACpB,OAAO,oBAAoB,CAAC,IAAI,CAAC;SACpC;QAED,OAAO,iBAAiB,CAAC,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC;;;;;QAG/C,KAAK;QACZ,OAAO,IAAI,CAAC,YAAY,CAAC;;;;;;;;IAG7B,YAAY,MAAiB,EAAE,OAAkB,EAAE,SAA8B,EAAE,aAAqB;QACpG,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;QAC5B,IAAI,CAAC,cAAc,GAAG,aAAa,CAAC;QACpC,IAAI,CAAC,IAAI,EAAE,CAAC;KACf;;;;IAEM,IAAI;;QACP,MAAM,SAAS,GAAmB;YAC9B,YAAY,EAAE;gBACV,eAAe,EAAE,KAAK;aACzB;YACD,eAAe,EAAE;gBACb,mBAAmB,EAAE,IAAI;gBACzB,iBAAiB,EAAE,QAAQ,CAAC,IAAI;aACnC;YACD,KAAK,EAAE;gBACH,OAAO,EAAE,IAAI,CAAC,cAAc;aAC/B;YACD,MAAM,EAAE;gBACJ,EAAE,EAAE,CAAC,IAAgB;oBACjB,IAAI,IAAI,CAAC,SAAS,EAAE;;wBAChB,MAAM,OAAO,GAAG,IAAI,CAAC,gBAAgB,EAAE,CAAC;wBACxC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,IAAI,OAAO,CAAC,IAAI,CAAC;wBACzC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,IAAI,OAAO,CAAC,GAAG,CAAC;qBAC1C;oBACD,OAAO,IAAI,CAAC;iBACf;aACJ;SACJ,CAAC;QAEF,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE;YACtB,OAAO,SAAS,CAAC,KAAK,CAAC;SAC1B;QAED,IAAI,CAAC,OAAO,qBAAG,IAAI,MAAM,CACrB,IAAI,CAAC,MAAM,CAAC,aAAa,EACzB,IAAI,CAAC,OAAO,CAAC,aAAa,EAC1B;YACI,SAAS,EAAE,iBAAiB,CAAC,IAAI,CAAC,UAAU,CAAC;YAC7C,SAAS;YACT,QAAQ,EAAE,OAAO,IAAI,IAAI,CAAC,YAAY,GAAG,OAAO;YAChD,QAAQ,EAAE,MAAM,IAAI,IAAI,CAAC,YAAY,GAAG,MAAM;SACjD,CAAmB,CAAA,CAAC;;;;;IAGtB,MAAM;QACT,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC;;;;;IAGnB,OAAO;QACV,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;;;;;IAGnB,gBAAgB;;QACpB,IAAI,IAAI,GAAG,CAAC,CAAC;;QAAC,IAAI,GAAG,GAAG,CAAC,CAAC;;QAG1B,MAAM,QAAQ,GAAG,UAAU,CAAC,MAAM,CAAC,gBAAgB,CAAC,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,gBAAgB,CAAC,WAAW,CAAC,CAAC,CAAC;;QAE/G,MAAM,WAAW,GAAG,CAAC,UAAU,GAAG,CAAC,GAAG,CAAC,IAAI,QAAQ,CAAC;QAEpD,IAAI,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,WAAW,IAAI,WAAW,GAAG,CAAC,EAAE;;YAC1D,MAAM,iBAAiB,GAAG,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,WAAW,GAAG,CAAC,CAAC;YACpE,IAAI,IAAI,CAAC,UAAU,KAAK,oBAAoB,CAAC,OAAO,IAAI,IAAI,CAAC,UAAU,KAAK,oBAAoB,CAAC,UAAU,EAAE;gBACzG,IAAI,GAAG,iBAAiB,GAAG,WAAW,CAAC;aAC1C;YACD,IAAI,IAAI,CAAC,UAAU,KAAK,oBAAoB,CAAC,QAAQ,IAAI,IAAI,CAAC,UAAU,KAAK,oBAAoB,CAAC,WAAW,EAAE;gBAC3G,IAAI,GAAG,WAAW,GAAG,iBAAiB,CAAC;aAC1C;SACJ;QAED,IAAI,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,YAAY,IAAI,WAAW,GAAG,CAAC,EAAE;;YAC3D,MAAM,kBAAkB,GAAG,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,YAAY,GAAG,CAAC,CAAC;YACtE,IAAI,IAAI,CAAC,UAAU,KAAK,oBAAoB,CAAC,OAAO,IAAI,IAAI,CAAC,UAAU,KAAK,oBAAoB,CAAC,QAAQ,EAAE;gBACvG,GAAG,GAAG,kBAAkB,GAAG,WAAW,CAAC;aAC1C;YACD,IAAI,IAAI,CAAC,UAAU,KAAK,oBAAoB,CAAC,UAAU,IAAI,IAAI,CAAC,UAAU,KAAK,oBAAoB,CAAC,WAAW,EAAE;gBAC7G,GAAG,GAAG,WAAW,GAAG,kBAAkB,CAAC;aAC1C;SACJ;QACD,OAAO,EAAE,GAAG,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE,CAAC;;CAGjD;;;;;;ACvOD;;;YAIC,QAAQ,SAAC;gBACN,OAAO,EAAE,CAAC,YAAY,CAAC;gBACvB,SAAS,EAAE;oBACP,mBAAmB;iBACtB;aACJ;;;;;;;;;;;;ACTD;IAyDI;QACI,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,aAAa,GAAG,IAAI,YAAY,EAAW,CAAC;QACjD,IAAI,CAAC,SAAS,GAAG,IAAI,YAAY,EAAQ,CAAC;QAE1C,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QACxB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QAExB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;KAC1B;;;;QApBU,gBAAgB;QACvB,OAAO,IAAI,CAAC,SAAS,GAAG,EAAE,GAAG,SAAS,CAAC;;;;;QAGhC,mBAAmB;QAC1B,OAAO,IAAI,CAAC,UAAU,GAAG,UAAU,GAAG,SAAS,CAAC;;;;;;IAkB7C,WAAW,CAAC,KAAK;QACpB,KAAK,CAAC,cAAc,EAAE,CAAC;KAC1B;;;;;IAGM,OAAO,CAAC,CAAC;QACZ,IAAI,CAAC,IAAI,CAAC,UAAU,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;YACtC,IAAI,CAAC,MAAM,EAAE,CAAC;YACd,IAAI,CAAC,aAAa,EAAE,CAAC;SACxB;KACJ;;;;;IAGM,UAAU,CAAC,CAAC;QACf,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC;KACzB;;;;IAEM,MAAM;QACT,IAAI,CAAC,SAAS,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC;QACjC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;;;;;;IAGrC,UAAU,CAAC,KAAa;QAC3B,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;;;;;IAGnB,aAAa;QACjB,IAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;;;;YA1FnD,SAAS,SAAC;gBACP,QAAQ,EAAE,cAAc;gBACxB,QAAQ,EAAE,aAAa;gBACvB,QAAQ,EAAE;;;;;;;;;;;CAWb;aACA;;;;;yBAEI,WAAW,SAAC,UAAU,cACtB,WAAW,SAAC,gBAAgB;mBAG5B,KAAK;wBAGL,WAAW,SAAC,eAAe;4BAG3B,MAAM,SAAC,aAAa;wBAGpB,MAAM,SAAC,SAAS;yBAGhB,KAAK;yBAGL,WAAW,SAAC,iBAAiB,cAC7B,KAAK;+BAWL,SAAS,SAAC,UAAU;0BAcpB,YAAY,SAAC,WAAW,EAAE,CAAC,QAAQ,CAAC;sBAKpC,YAAY,SAAC,OAAO,EAAE,CAAC,QAAQ,CAAC;yBAQhC,YAAY,SAAC,UAAU,EAAE,CAAC,QAAQ,CAAC;;8BA2BF,SAAQ,mBAAyC;;;;IACnF,YAAY,IAAgB;QACxB,KAAK,CAAC,IAAI,CAAC,CAAC;KACf;;;YAXJ,SAAS,SAAC;gBACP,QAAQ,EAAE,cAAc;gBACxB,IAAI,EAAE;oBACF,eAAe,EAAE,kBAAkB;oBACnC,WAAW,EAAE,aAAa;iBAC7B;gBACD,SAAS,EAAE,CAAC,0BAA0B,CAAC,wBAAwB,CAAC,CAAC;aACpE;;;;YAEoB,WAAW;;;;;;;AC7GhC;;;AAyBA;IAyCI;QACI,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,oBAAoB,GAAG,IAAI,YAAY,EAAK,CAAC;QAClD,IAAI,CAAC,SAAS,GAAG,IAAI,YAAY,EAAQ,CAAC;QAE1C,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QACxB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QAExB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;KAC1B;;;;QAjBU,gBAAgB;QACvB,OAAO,IAAI,CAAC,SAAS,GAAG,EAAE,GAAG,SAAS,CAAC;;;;;QAGhC,mBAAmB;QAC1B,OAAO,IAAI,CAAC,UAAU,GAAG,UAAU,GAAG,SAAS,CAAC;;;;;;IAe7C,WAAW,CAAC,CAAY;QAC3B,CAAC,CAAC,cAAc,EAAE,CAAC;KACtB;;;;IAGM,OAAO;QACV,IAAI,CAAC,IAAI,CAAC,UAAU,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;YACtC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC;YAC/B,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;YAClD,IAAI,CAAC,MAAM,EAAE,CAAC;YACd,IAAI,CAAC,UAAU,EAAE,CAAC;SACrB;KACJ;;;;IAGM,UAAU;QACb,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC;KACzB;;;;IAEM,MAAM;QACT,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,YAAY,KAAK,IAAI,CAAC,KAAK,CAAC;;;;;;IAG/C,UAAU,CAAC,KAAO;QACrB,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;QAC1B,IAAI,CAAC,MAAM,EAAE,CAAC;;;;;IAGV,UAAU;QACd,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;;;;YAlGhD,SAAS,SAAC;gBACP,QAAQ,EAAE,kBAAkB;gBAC5B,QAAQ,EAAE;;;;;;;;;;;;CAYb;aACA;;;;;yBAEI,WAAW,SAAC,UAAU,cACtB,WAAW,SAAC,aAAa,cACzB,WAAW,SAAC,gBAAgB;mBAG5B,KAAK;oBAGL,KAAK;wBAGL,WAAW,SAAC,eAAe;mCAK3B,MAAM,SAAC,oBAAoB;wBAG3B,MAAM,SAAC,SAAS;yBAGhB,KAAK;yBAGL,WAAW,SAAC,iBAAiB,cAC7B,KAAK;4BAGL,SAAS,SAAC,OAAO;0BAsBjB,YAAY,SAAC,WAAW,EAAE,CAAC,QAAQ,CAAC;sBAKpC,YAAY,SAAC,OAAO;yBAUpB,YAAY,SAAC,UAAU;;;;;AA2B5B,2BAAsC,SAAQ,mBAAmC;;;;IAC7E,YAAY,IAAgB;QACxB,KAAK,CAAC,IAAI,CAAC,CAAC;KACf;;;YAXJ,SAAS,SAAC;gBACP,QAAQ,EAAE,kBAAkB;gBAC5B,IAAI,EAAE;oBACF,sBAAsB,EAAE,kBAAkB;oBAC1C,WAAW,EAAE,aAAa;iBAC7B;gBACD,SAAS,EAAE,CAAC,0BAA0B,CAAC,qBAAqB,CAAC,CAAC;aACjE;;;;YAEoB,QAAQ;;;;;;;ACxH7B;;;AAQA;;;;IAYI,YAAmB,OAAkB;QAAlB,YAAO,GAAP,OAAO,CAAW;QACjC,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACtB,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;KACxB;;;;IAEM,kBAAkB;QACrB,IAAI,CAAC,aAAa,EAAE,CAAC;QACrB,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,SAAS,CAAC,MAAM,IAAI,CAAC,aAAa,EAAE,CAAC,CAAC;QAEhE,IAAI,CAAC,YAAY,EAAE,CAAC;QACpB,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,SAAS,CAAC,MAAM,IAAI,CAAC,YAAY,EAAE,CAAC,CAAC;;;;;IAG9D,aAAa;QACjB,IAAI,CAAC,YAAY;aACZ,MAAM,CAAC,CAAC,IAAI,CAAC,KAAK,IAAI,CAAC;aACvB,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,CAAC;;;;;IAGjC,YAAY;QAChB,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,WAAW,EAAE,CAAC,CAAC;QAC9C,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;;QAErB,MAAM,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,eAAe,CAAC,OAAO,EAAE,EAAE,MAAM,CAAC,CAAC;QAC1E,MAAM;aACD,IAAI,CAAC,MAAM,CAAC;aACZ,GAAG,CAAC,CAAC,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC;aACnB,OAAO,CAAC,CAAC,IAAI,CAAC;aACV,OAAO,CAAC,CAAC,IAAI,IAAI,CAAC,UAAU;aACxB,IAAI,CAAC,CAAC,CAAC,oBAAoB;aACvB,SAAS,CAAC,CAAC,CAAG;YACX,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;gBAChB,CAAC,CAAC,OAAO,CAAC,KAAK,IAAI,KAAK,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;aAC3C;SACJ,CAAC,CAAC,CAAC,CAAC,CAAC;;;;YAjD7B,SAAS,SAAC;gBACP,QAAQ,EAAE,oDAAoD;aACjE;;;;YAPiE,UAAU;;;2BAYvE,eAAe,SAAC,eAAe,EAAE,EAAE,WAAW,EAAE,IAAI,EAAE;8BAGtD,eAAe,SAAC,QAAQ,EAAE,EAAE,WAAW,EAAE,IAAI,EAAE;;;;;;;ACfpD;;;YAOC,QAAQ,SAAC;gBACN,OAAO,EAAE;oBACL,YAAY;oBACZ,WAAW;iBACd;gBACD,YAAY,EAAE;oBACV,WAAW;oBACX,wBAAwB;oBACxB,QAAQ;oBACR,qBAAqB;oBACrB,eAAe;iBAClB;gBACD,OAAO,EAAE;oBACL,WAAW;oBACX,wBAAwB;oBACxB,QAAQ;oBACR,qBAAqB;oBACrB,eAAe;iBAClB;aACJ;;;;;;;;;;;;;;;;;;;;;;AC1BD;;IAOI,WAAY;IACZ,WAAY;IACZ,OAAQ;;0BAFR,QAAQ;0BACR,QAAQ;0BACR,IAAI;AAGR;;;;;IA2EI,YAAY,MAAqB,EAAS,YAAoC;QAApC,iBAAY,GAAZ,YAAY,CAAwB;8BAY3C,SAAQ;QAXvC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QAErB,IAAI,CAAC,WAAW,GAAG,IAAI,IAAI,EAAE,CAAC;QAE9B,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,YAAY,CAAC,cAAc,CAAC;QAEvD,IAAI,CAAC,YAAY,GAAG,IAAI,YAAY,EAAQ,CAAC;QAE7C,IAAI,CAAC,KAAK,EAAE,CAAC;KAChB;;;;QAlFU,MAAM;QACb,OAAO,IAAI,CAAC,OAAO,CAAC;;;;;;QAGb,MAAM,CAAC,MAAqB;QACnC,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;QACtB,MAAM,CAAC,YAAY,CAAC,IAAI,CAAC,aAAa,IAAI,IAAI,CAAC,WAAW,CAAC,CAAC;;;;;QAIrD,WAAW;QAClB,OAAO,IAAI,CAAC,WAAW,KAAK,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,SAAS,CAAC;;;;;QAMpD,YAAY;QACnB,OAAO,IAAI,CAAC,aAAa,CAAC;;;;;;QAGnB,YAAY,CAAC,IAAqB;QACzC,IAAI,IAAI,EAAE;YACN,IAAI,CAAC,aAAa,GAAG,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;YAC1C,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;SAC3C;aAAM;YACH,IAAI,CAAC,aAAa,GAAG,SAAS,CAAC;SAClC;QAED,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,IAAI,CAAC,aAAa,IAAI,IAAI,CAAC,WAAW,CAAC,CAAC;QACjE,IAAI,CAAC,cAAc,EAAE,CAAC;;;;;QAMf,OAAO;QACd,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,MAAM,CAAC,YAAY,EAAE;YAC3C,OAAO,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,YAAY,GAAG,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC;SAC9F;QACD,OAAO,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC;;;;;;QAG1C,OAAO,CAAC,GAAoB;QACnC,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC;;;;;QAGb,OAAO;QACd,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,MAAM,CAAC,YAAY,EAAE;YAC3C,OAAO,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,YAAY,GAAG,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC;SAC9F;QACD,OAAO,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC;;;;;;QAG1C,OAAO,CAAC,GAAoB;QACnC,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC;;;;;QAKb,cAAc;QACrB,OAAO,IAAI,CAAC,eAAe,CAAC;;;;;;QAGrB,cAAc,CAAC,cAAqB;QAC3C,IAAI,cAAc,IAAI,SAAS,EAAE;YAC7B,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,cAAc,CAAC,CAAC,CAAC;SACnE;;;;;IAmBE,KAAK;QACR,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,SAAS,CAAC;QAElD,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE;;YACrB,IAAI,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC;YACzC,IAAI,IAAI,CAAC,QAAQ,EAAE;gBACf,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,EAAE,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC,CAAC;aACxD;YACD,IAAI,IAAI,CAAC,QAAQ,EAAE;gBACf,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,EAAE,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC,CAAC;aACxD;YAED,IAAI,CAAC,WAAW,GAAG,IAAI,IAAI,CAAC,OAAO,CAAC,CAAC;YACrC,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;YAE3C,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,WAAW,CAAC;SACvD;;;;;;;IAGE,UAAU,CAAC,IAAS,EAAE,QAAyB;QAClD,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QAExB,IAAI,QAAQ,KAAK,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,SAAS,EAAE;YAC7C,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;YAEzB,OAAO,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SACvC;QAED,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;;;;;;IAGrD,OAAO,CAAC,QAAyB;QACpC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;;;;;;;IAGjD,UAAU,CAAC,QAAgD,EAAE,QAAyB;;QAC1F,MAAM,OAAO,GAAG,QAAQ,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QACvC,IAAI,OAAO,IAAI,SAAS,EAAE;YACtB,MAAM,IAAI,KAAK,CAAC,oBAAoB,CAAC,CAAC;SACzC;QACD,IAAI,CAAC,WAAW,GAAG,OAAO,CAAC;;CAElC;;;;;;AC9ID;;;;IAWI,YAAY,IAAS;QACjB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;KACpB;CACJ;;;;;IA6BG,YAAmB,cAAgC;QAAhC,mBAAc,GAAd,cAAc,CAAkB;QAC/C,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QAEtB,IAAI,CAAC,UAAU,GAAG,IAAI,YAAY,EAAW,CAAC;KACjD;;;;IAxBD,IACW,YAAY;QACnB,OAAO,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC;KACjC;;;;IAED,IACW,QAAQ;QACf,OAAO,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC;KAC7B;;;;IAED,IACW,OAAO;QACd,OAAO,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC;KAC5B;;;;IAcM,WAAW;QACd,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;YAChB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;YACrB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;SACvC;KACJ;;;;IAGM,YAAY;QACf,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACtB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;KACvC;;;YA7CJ,SAAS,SAAC;gBACP,QAAQ,EAAE,gBAAgB;aAC7B;;;;YAlBmE,iBAAiB;;;mBAoBhF,KAAK,SAAC,cAAc;2BAGpB,WAAW,SAAC,gBAAgB;uBAK5B,WAAW,SAAC,cAAc;sBAK1B,WAAW,SAAC,aAAa;uBAKzB,WAAW,SAAC,aAAa;0BAWzB,YAAY,SAAC,WAAW;2BAQxB,YAAY,SAAC,YAAY;;;;;;;AC1D9B;;IAOI,OAAQ;IACR,QAAS;IACT,OAAQ;IACR,OAAQ;IACR,SAAU;;kCAJV,IAAI;kCACJ,KAAK;kCACL,IAAI;kCACJ,IAAI;kCACJ,MAAM;;;;AAIV;;;;;;IAqCI,YAAY,QAAkB,EAAE,QAAyB,EAAE,MAA2B;QAClF,IAAI,CAAC,KAAK,GAAG,QAAQ,CAAC;QACtB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QAErB,IAAI,CAAC,wBAAwB,GAAG,QAAQ,CAAC,MAAM,CAAC,UAAU,EAAE,SAAS,EAAE,CAAC,CAAe,KAAK,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC,CAAC;KAC1H;;;;;IAlCD,IACW,OAAO,CAAC,OAAuB;QACtC,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;QACxB,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;QAEjC,IAAI,CAAC,OAAO,CAAC,cAAc,GAAG;YAC1B,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC;YAEtB,OAAO,IAAI,CAAC,gBAAgB,CAAC;YAC7B,IAAI,CAAC,aAAa,EAAE,CAAC;SACxB,CAAC;KACL;;;;QAEU,OAAO;QACd,OAAO,IAAI,CAAC,QAAQ,CAAC;;;;;QAKd,WAAW;QAClB,OAAO,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC;;;;;QAGzB,YAAY;QACnB,OAAO,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC;;;;;;IAc9B,OAAO,CAAC,IAAiB;QAC5B,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;;;;;IAG5C,OAAO;QACV,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;;;;;IAK9B,eAAe;QAClB,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,SAAS,CAAC,MAAM,IAAI,CAAC,sBAAsB,EAAE,CAAC,CAAC;QAC3E,IAAI,CAAC,sBAAsB,EAAE,CAAC;;;;;IAG1B,sBAAsB;QAC1B,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC,IACzB,CAAC,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC,QAAgB;YACpC,IAAI,QAAQ,EAAE;gBACV,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;aAC9B;SACJ,CAAC,CAAC,CAAC;QAER,IAAI,CAAC,aAAa,EAAE,CAAC;QACrB,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;;;;;IAGtC,aAAa;;QACjB,IAAI,IAAI,GAAG,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,YAAY,CAAC,IAAI,CAAC,YAAY,CAAC,GAAG,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,WAAW,CAAC;QAC3H,IAAI,IAAI,CAAC,gBAAgB,IAAI,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,YAAY,CAAC,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,EAAE;YACvF,IAAI,GAAG,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC;SACrC;;QAED,MAAM,oBAAoB,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC;QAC/G,IAAI,oBAAoB,IAAI,CAAC,oBAAoB,CAAC,UAAU,EAAE;YAC1D,IAAI,CAAC,gBAAgB,GAAG,oBAAoB,CAAC;SAChD;;;;;;IAGG,aAAa,CAAC,IAA6B;QAC/C,IAAI,IAAI,EAAE;YACN,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,QAAQ,GAAG,KAAK,CAAC,CAAC;;YACrD,MAAM,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,CAAC,IAAI,KAAK,IAAI,CAAC,CAAC;YAClE,IAAI,QAAQ,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE;gBAChC,QAAQ,CAAC,QAAQ,GAAG,IAAI,CAAC;gBACzB,QAAQ,CAAC,cAAc,CAAC,aAAa,EAAE,CAAC;aAC3C;YAED,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;SAChC;;;;;;IAGG,iBAAiB,CAAC,CAAe;QACrC,IAAI,IAAI,CAAC,gBAAgB,IAAI,CAAC,CAAC,OAAO,KAAK,OAAO,CAAC,KAAK,EAAE;YACtD,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;YACpC,OAAO;SACV;QAED,IAAI,CAAC,IAAI,CAAC,gBAAgB,EAAE;YACxB,IAAI,CAAC,aAAa,EAAE,CAAC;SACxB;;QAED,MAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;;QACnE,IAAI,eAAe,GAAG,IAAI,CAAC;;QAC3B,IAAI,KAAK,GAAG,CAAC,CAAC;QAEd,QAAQ,CAAC,CAAC,OAAO;YACb,KAAK,OAAO,CAAC,KAAK;gBACd,KAAK,IAAI,CAAC,CAAC;gBACX,MAAM;YACV,KAAK,OAAO,CAAC,IAAI;gBACb,KAAK,IAAI,CAAC,CAAC;gBACX,eAAe,GAAG,KAAK,CAAC;gBACxB,MAAM;YACV,KAAK,OAAO,CAAC,IAAI;gBACb,KAAK,IAAI,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC;gBAC7B,MAAM;YACV,KAAK,OAAO,CAAC,EAAE;gBACX,KAAK,IAAI,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC;gBAC7B,eAAe,GAAG,KAAK,CAAC;gBACxB,MAAM;YACV;gBACI,OAAO;SACd;;QAGD,CAAC,CAAC,cAAc,EAAE,CAAC;;QAEnB,IAAI,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC,CAAC;QAExD,IAAI,QAAQ,IAAI,QAAQ,CAAC,UAAU,EAAE;YACjC,OAAO;SACV;QAED,IAAI,QAAQ,IAAI,CAAC,QAAQ,CAAC,cAAc,EAAE;YACtC,OAAO,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;SACvC;QAED,IAAI,QAAQ,IAAI,QAAQ,CAAC,cAAc,EAAE;YACrC,IAAI,KAAK,GAAG,KAAK,IAAI,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM,EAAE;gBACrD,eAAe,GAAG,IAAI,CAAC;aAC1B;SACJ;QAED,IAAI,CAAC,QAAQ,EAAE;;YACX,IAAI,aAAa,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;;YAEzE,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,OAAO,CAAC;YAE5D,IAAI,eAAe,EAAE;gBACjB,aAAa,IAAI,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC;aACvD;iBAAM;gBACH,aAAa,IAAI,SAAS,CAAC,MAAM,CAAC;aACrC;YAED,QAAQ,GAAG,SAAS,CAAC,aAAa,GAAG,KAAK,CAAC,CAAC;YAE5C,IAAI,QAAQ,CAAC,UAAU,EAAE;gBACrB,OAAO;aACV;SACJ;QAED,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;QAClC,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;;;;;IAGxD,WAAW;QACd,IAAI,CAAC,wBAAwB,EAAE,CAAC;;;;6BAzKnC,YAAY,SAAC,eAAe;sBAI5B,KAAK;;;;;;;ACvBV;;;AAIA;CAKC;kBAEyB,SAAQ,gBAAgB;IAC9C;QACI,KAAK,EAAE,CAAC;QAER,IAAI,CAAC,WAAW,GAAG,gBAAgB,CAAC,IAAI,CAAC;QACzC,IAAI,CAAC,SAAS,GAAG,gBAAgB,CAAC,IAAI,CAAC;QAEvC,IAAI,CAAC,OAAO,GAAG,IAAI,GAAG,CAAqC;YACvD,CAAC,gBAAgB,CAAC,IAAI,EAAE,gBAAgB,CAAC,KAAK,CAAC;YAC/C,CAAC,gBAAgB,CAAC,KAAK,EAAE,gBAAgB,CAAC,IAAI,CAAC;YAC/C,CAAC,gBAAgB,CAAC,IAAI,EAAE,gBAAgB,CAAC,IAAI,CAAC;SACjD,CAAC,CAAC;QAEH,IAAI,CAAC,IAAI,GAAG,IAAI,GAAG,CAAqC;YACpD,CAAC,gBAAgB,CAAC,IAAI,EAAE,gBAAgB,CAAC,IAAI,CAAC;YAC9C,CAAC,gBAAgB,CAAC,KAAK,EAAE,gBAAgB,CAAC,IAAI,CAAC;YAC/C,CAAC,gBAAgB,CAAC,IAAI,EAAE,gBAAgB,CAAC,KAAK,CAAC;SAClD,CAAC,CAAC;KACN;CACJ;AAED,kBAA0B,SAAQ,gBAAgB;IAC9C;QACI,KAAK,EAAE,CAAC;QAER,IAAI,CAAC,WAAW,GAAG,gBAAgB,CAAC,IAAI,CAAC;QACzC,IAAI,CAAC,SAAS,GAAG,gBAAgB,CAAC,MAAM,CAAC;QAEzC,IAAI,CAAC,OAAO,GAAG,IAAI,GAAG,CAAqC;YACvD,CAAC,gBAAgB,CAAC,IAAI,EAAE,gBAAgB,CAAC,MAAM,CAAC;YAChD,CAAC,gBAAgB,CAAC,MAAM,EAAE,gBAAgB,CAAC,MAAM,CAAC;SACrD,CAAC,CAAC;QAEH,IAAI,CAAC,IAAI,GAAG,IAAI,GAAG,CAAqC;YACpD,CAAC,gBAAgB,CAAC,IAAI,EAAE,gBAAgB,CAAC,MAAM,CAAC;YAChD,CAAC,gBAAgB,CAAC,MAAM,EAAE,gBAAgB,CAAC,IAAI,CAAC;SACnD,CAAC,CAAC;KACN;CACJ;AAED,sBAA8B,SAAQ,gBAAgB;IAClD;QACI,KAAK,EAAE,CAAC;QAER,IAAI,CAAC,WAAW,GAAG,gBAAgB,CAAC,IAAI,CAAC;QACzC,IAAI,CAAC,SAAS,GAAG,gBAAgB,CAAC,MAAM,CAAC;QAEzC,IAAI,CAAC,OAAO,GAAG,IAAI,GAAG,CAAqC;YACvD,CAAC,gBAAgB,CAAC,IAAI,EAAE,gBAAgB,CAAC,KAAK,CAAC;YAC/C,CAAC,gBAAgB,CAAC,KAAK,EAAE,gBAAgB,CAAC,IAAI,CAAC;YAC/C,CAAC,gBAAgB,CAAC,IAAI,EAAE,gBAAgB,CAAC,IAAI,CAAC;YAC9C,CAAC,gBAAgB,CAAC,IAAI,EAAE,gBAAgB,CAAC,MAAM,CAAC;YAChD,CAAC,gBAAgB,CAAC,MAAM,EAAE,gBAAgB,CAAC,MAAM,CAAC;SACrD,CAAC,CAAC;QAEH,IAAI,CAAC,IAAI,GAAG,IAAI,GAAG,CAAqC;YACpD,CAAC,gBAAgB,CAAC,IAAI,EAAE,gBAAgB,CAAC,IAAI,CAAC;YAC9C,CAAC,gBAAgB,CAAC,KAAK,EAAE,gBAAgB,CAAC,IAAI,CAAC;YAC/C,CAAC,gBAAgB,CAAC,IAAI,EAAE,gBAAgB,CAAC,KAAK,CAAC;YAC/C,CAAC,gBAAgB,CAAC,IAAI,EAAE,gBAAgB,CAAC,IAAI,CAAC;YAC9C,CAAC,gBAAgB,CAAC,MAAM,EAAE,gBAAgB,CAAC,IAAI,CAAC;SACnD,CAAC,CAAC;KACN;CACJ;AAED,mBAA2B,SAAQ,gBAAgB;IAC/C;QACI,KAAK,EAAE,CAAC;QAER,IAAI,CAAC,WAAW,GAAG,gBAAgB,CAAC,KAAK,CAAC;QAC1C,IAAI,CAAC,SAAS,GAAG,gBAAgB,CAAC,KAAK,CAAC;QAExC,IAAI,CAAC,OAAO,GAAG,IAAI,GAAG,CAAqC;YACvD,CAAC,gBAAgB,CAAC,IAAI,EAAE,gBAAgB,CAAC,KAAK,CAAC;YAC/C,CAAC,gBAAgB,CAAC,KAAK,EAAE,gBAAgB,CAAC,KAAK,CAAC;SACnD,CAAC,CAAC;QAEH,IAAI,CAAC,IAAI,GAAG,IAAI,GAAG,CAAqC;YACpD,CAAC,gBAAgB,CAAC,IAAI,EAAE,gBAAgB,CAAC,KAAK,CAAC;YAC/C,CAAC,gBAAgB,CAAC,KAAK,EAAE,gBAAgB,CAAC,IAAI,CAAC;SAClD,CAAC,CAAC;KACN;CACJ;AAED,kBAA0B,SAAQ,gBAAgB;IAC9C;QACI,KAAK,EAAE,CAAC;QAER,IAAI,CAAC,WAAW,GAAG,gBAAgB,CAAC,IAAI,CAAC;QACzC,IAAI,CAAC,SAAS,GAAG,gBAAgB,CAAC,IAAI,CAAC;QAEvC,IAAI,CAAC,OAAO,GAAG,IAAI,GAAG,CAAqC;YACvD,CAAC,gBAAgB,CAAC,IAAI,EAAE,gBAAgB,CAAC,IAAI,CAAC;SACjD,CAAC,CAAC;QAEH,IAAI,CAAC,IAAI,GAAG,IAAI,GAAG,CAAqC;YACpD,CAAC,gBAAgB,CAAC,IAAI,EAAE,gBAAgB,CAAC,IAAI,CAAC;SACjD,CAAC,CAAC;KACN;CACJ;;;;;;AC9GD;;;AAIA;;;;;;;IAUI,YAAY,IAAiB,EAAE,SAAuB,EAAE,QAAyB,EAAE,QAAe;QAC9F,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;KAC5B;;;;;IAEM,YAAY,CAAC,YAAiB;QACjC,IAAI,CAAC,YAAY,GAAG,QAAQ,CAAC,OAAO,CAAC,aAAa,CAAC,IAAI,EAAE,IAAI,IAAI,EAAE,EAAE,IAAI,CAAC,CAAC;QAC3E,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;;CAExC;oBAE2B,SAAQ,cAAc;;;;;;IAC9C,YAAY,SAAuB,EAAE,QAAyB,EAAE,QAAe;QAC3E,KAAK,CAAC,YAAY,CAAC,QAAQ,EAAE,SAAS,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAAC;KAC/D;CACJ;AAED,gBAAwB,SAAQ,cAAc;IAC1C;QACI,KAAK,CACD,aAAa,CAAC,IAAI,EAClB,IAAI,YAAY,EAAE,EAClB,QAAQ,CAAC,CAAC;KACjB;CACJ;AAED,iBAAyB,SAAQ,cAAc;IAC3C;QACI,KAAK,CACD,aAAa,CAAC,KAAK,EACnB,IAAI,aAAa,EAAE,EACnB,OAAO,CAAC,CAAC;KAChB;CACJ;AAED,gBAAwB,SAAQ,cAAc;IAC1C;QACI,KAAK,CACD,aAAa,CAAC,IAAI,EAClB,IAAI,YAAY,EAAE,EAClB,MAAM,CAAC,CAAC;KACf;CACJ;AAED,oBAA4B,SAAQ,cAAc;IAC9C;QACI,KAAK,CACD,YAAY,CAAC,IAAI,EACjB,aAAa,CAAC,MAAM,EACpB,IAAI,gBAAgB,EAAE,EACtB,gBAAgB,CAAC,CAAC;KACzB;CACJ;AAED,gBAAwB,SAAQ,cAAc;IAC1C;QACI,KAAK,CACD,YAAY,CAAC,QAAQ,EACrB,aAAa,CAAC,MAAM,EACpB,IAAI,YAAY,EAAE,EAClB,MAAM,CAAC,CAAC;KACf;;;;;IAEM,YAAY,CAAC,YAAiB;QACjC,IAAI,CAAC,YAAY,GAAG,QAAQ,CAAC,KAAK,CAAC,aAAa,CAAC,IAAI,EAAE,QAAQ,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC,CAAC;QACrF,IAAI,CAAC,YAAY,GAAG,QAAQ,CAAC,QAAQ,CAAC,aAAa,CAAC,IAAI,EAAE,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;;CAEpG;;;;;;ACnFD;;;;;IAMI,YAAY,SAAuB,EAAE,UAAkB;QACnD,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;QAC5B,IAAI,CAAC,WAAW,GAAG,UAAU,CAAC;KACjC;;;;;;IAEM,KAAK,CAAC,CAAM,EAAE,CAAkB;QACnC,IAAI,IAAI,CAAC,UAAU,KAAK,aAAa,CAAC,MAAM,EAAE;YAC1C,OAAO,CAAC,CAAC,CAAC;gBACP,QAAQ,CAAC,KAAK,CAAC,aAAa,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC;gBACxC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,UAAU,EAAE,EAAE,CAAC,CAAC,KAAK,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,UAAU,EAAE,EAAE,CAAC,CAAC,CAAC;SACxF;QAED,OAAO,CAAC,CAAC,CAAC,IAAI,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;;;;;;;IAGjD,QAAQ,CAAC,CAAM,EAAE,CAAkB;QACtC,IAAI,IAAI,CAAC,WAAW,EAAE;YAClB,OAAO,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC;SACzB;QAED,OAAO,CAAC,CAAC,KAAK,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,UAAU,EAAE,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;;;;;;;IAGpE,WAAW,CAAC,CAAM,EAAE,CAAkB;QACzC,IAAI,IAAI,CAAC,WAAW,EAAE;YAClB,OAAO,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC;SACzB;QAED,OAAO,CAAC,CAAC,KAAK,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,EAAE,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;;;;;;;;IAGtE,OAAO,CAAC,IAAS,EAAE,IAAqB,EAAE,KAAsB;QACnE,OAAO,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;;CAEzE;;;;;;ACvCD;;;;;;AA8BA,yBAAyB,MAA2B,EAC3B,WAAkB,EAClB,aAA0C;IAE/D,OAAO,CAAC,UAAiB,EAAE,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,WAAW,EAAE;;QACvD,MAAM,KAAK,GAAG,aAAa,GAAG,aAAa,CAAC,UAAU,CAAC,GAAG,UAAU,CAAC;QACrE,OAAO,MAAM,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,CAAC;KAC9B,CAAC;CACL;;;;;;AAED,8BAA8B,MAA2B,EAAE,WAAkB;IACzE,OAAO,CAAC,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,WAAW,EAAE,KAAK,MAAM,CAAC,IAAI,CAAC,CAAC;CAC7D;;;;;;AAED,sBAAsB,QAA6B,EAAE,WAAkB;IACnE,OAAO,CAAC,WAAW,EAAE,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,WAAW,EAAE,KACjD,WAAW,CAAC,KAAK,CAAC,KAAK,QAAQ,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;CAC3D;;;;;;AAED,sBAAsB,QAA6B,EAAE,WAAkB;IACnE,OAAO,CAAC,GAAG,MAAM,CAAC,EAAE,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,WAAW,EAAE,KAChD,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,QAAQ,CAAC,WAAW,CAAC;SACnC,GAAG,CAAC,CAAC,IAAI,IAAI,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;SAC7B,SAAS,CAAC,OAAO,IAAI,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;CACvD;AAED;;;;QAIgB,OAAO;QACf,OAAO;YACH,YAAY,EAAE,IAAI,CAAC,aAAa;YAChC,MAAM,EAAE,IAAI,CAAC,OAAO;SACvB,CAAC;;;;;IAGN,YAAY,MAA8B;QACtC,IAAI,CAAC,aAAa,qBAAG,MAAM,CAAC,cAAqC,CAAA,CAAC;;QAElE,MAAM,aAAa,GAAG;YAClB,IAAI,EAAE,MAAM,CAAC,QAAQ;YACrB,KAAK,EAAE,MAAM,CAAC,aAAa;YAC3B,MAAM,EAAE,MAAM,CAAC,cAAc;SAChC,CAAC;;QAEF,MAAM,WAAW,GAAG;YAChB,IAAI,EAAE,MAAM,CAAC,MAAM;YACnB,KAAK,EAAE,MAAM,CAAC,WAAW;SAC5B,CAAC;;QAEF,MAAM,eAAe,GAAG;YACpB,IAAI,EAAE,MAAM,CAAC,UAAU;YACvB,SAAS,EAAE,MAAM,CAAC,mBAAmB;YACrC,SAAS,EAAE,MAAM,CAAC,mBAAmB;SACxC,CAAC;;QAEF,MAAM,oBAAoB,GAAG;YACzB,IAAI,EAAE,MAAM,CAAC,UAAU;YACvB,KAAK,EAAE,MAAM,CAAC,mBAAmB,CAAC,MAAM,CAAC,MAAM,CAAC,mBAAmB,CAAC;SACvE,CAAC;QAEF,IAAI,CAAC,OAAO,qBAAG,aAAoB,CAAA,CAAC;QACpC,IAAI,CAAC,OAAO,CAAC,QAAQ,qBACd,IAAI,CAAC,OAAO,CAAC,QAAQ,EACrB;YACC,OAAO,EAAE,eAAe,CAAC,aAAa,EAAE,MAAM,CAAC;YAC/C,QAAQ,EAAE,oBAAoB,CAAC,aAAa,EAAE,MAAM,CAAC;YACrD,KAAK,EAAE,eAAe,CAAC,WAAW,EAAE,MAAM,CAAC;YAC3C,MAAM,EAAE,oBAAoB,CAAC,WAAW,EAAE,MAAM,CAAC;YACjD,SAAS,EAAE,eAAe,CAAC,eAAe,EAAE,MAAM,EAAE,CAAC,KAAY;gBAC7D,OAAO,KAAK,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;aAClC,CAAC;YACF,UAAU,EAAE,oBAAoB,CAAC,eAAe,EAAE,MAAM,CAAC;SAC5D,CACJ,CAAC;QACF,IAAI,CAAC,OAAO,CAAC,KAAK,qBACX,IAAI,CAAC,OAAO,CAAC,KAAK,EAClB;YACC,QAAQ,EAAE,YAAY,CAAC,aAAa,EAAE,MAAM,CAAC;YAC7C,OAAO,EAAE,YAAY,CAAC,aAAa,EAAE,MAAM,CAAC;YAC5C,MAAM,EAAE,YAAY,CAAC,WAAW,EAAE,MAAM,CAAC;YACzC,KAAK,EAAE,YAAY,CAAC,WAAW,EAAE,MAAM,CAAC;YACxC,UAAU,EAAC,YAAY,CAAC,oBAAoB,EAAE,MAAM,CAAC;YACrD,SAAS,EAAC,YAAY,CAAC,oBAAoB,EAAE,MAAM,CAAC;SACvD,CACJ,CAAC;KACL;;;;;;IAEM,MAAM,CAAC,CAAM,EAAE,CAAQ;QAC1B,OAAO,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;;;;;;;;IAG/B,KAAK,CAAC,EAAS,EAAE,CAAQ,EAAE,EAAO;QACrC,OAAO,KAAK,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;;CAE7C;;;;;;AC9HD;;;;;IAOI,YAAYC,SAAa,EAAE,MAA8B;QACrD,IAAI,CAAC,OAAO,GAAGA,SAAM,CAAC;QACtB,IAAI,CAAC,OAAO,GAAG,IAAI,aAAa,CAAC,MAAM,CAAC,CAAC;KAC5C;;;;;IAEM,MAAM,CAAC,IAAS;QACnB,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;;;;;;;IAG5C,KAAK,CAAC,UAAiB,EAAE,WAAgB,IAAI,IAAI,EAAE;QACtD,OAAO,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,UAAU,EAAE,IAAI,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;;CAErE;wBAE+B,SAAQ,UAAU;;;;;IAC9C,YAAY,IAAmB,EAAE,MAA8B;;QAC3D,MAAM,eAAe,GAAkC;YACnD,IAAI,EAAE,OAAO;YACb,QAAQ,EAAE,kBAAkB;YAC5B,IAAI,EAAE,YAAY;YAClB,KAAK,EAAE,SAAS;YAChB,IAAI,EAAE,MAAM;SACf,CAAC;QAEF,KAAK,CAAC,eAAe,CAAC,IAAI,CAAC,EAAE,MAAM,CAAC,CAAC;KACxC;CACJ;;;;;;AClCD;;;;QASe,OAAO;QACd,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,cAAc,CAAC,CAAC;;;;;;;;;IAKrD,YAAY,KAAU,EAAE,KAAY,EAAE,KAAoB,EAAE,OAAwB,EAAE,QAAqB;QACvG,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,YAAY,GAAG,OAAO,CAAC;QAC5B,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;KAC7B;;;;;IAEM,IAAI,CAAC,IAAiB;QACzB,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;;;;;;IAGlE,SAAS,CAAC,IAA6B;QAC1C,IAAI,CAAC,IAAI,EAAE;YACP,OAAO,CAAC,CAAC,CAAC;SACb;QACD,OAAO,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,IAAI,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;;;;;;IAGvE,YAAY,CAAC,IAAS;QACzB,OAAO,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC;;CAE3E;;;;AAED;;;;QAYe,YAAY;QACnB,OAAO,IAAI,YAAY,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;;;;;QAG1D,MAAM;QACb,OAAO,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC;;;;;QAGzB,WAAW;;QAClB,MAAM,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;QACvC,IAAI,SAAS,IAAI,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE;YACnC,OAAO,SAAS,CAAC,IAAI,IAAI,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC;SACjD;QACD,OAAO,IAAI,CAAC;;;;;QAGL,eAAe;;QACtB,MAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;QACvD,IAAI,QAAQ,IAAI,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE;YAClC,OAAO,QAAQ,CAAC,IAAI,IAAI,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC;SAChD;QACD,OAAO,IAAI,CAAC;;;;;;;IAGhB,YAAY,QAAsB,EAAE,IAAW,EAAE,OAAc;QAC3D,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,QAAQ,qBAAG,QAAkB,IAAG,CAAC,CAAC;QACvC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;KAC1B;;;;;IAEM,WAAW,CAAC,OAAuB;QACtC,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QAEvB,IAAI,CAAC,OAAO,EAAE,CAAC;;;;;IAGZ,OAAO;QACV,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;QAExD,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;QACnG,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,EAAE,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;;;;;;IAGxG,IAAI,CAAC,QAAgB;QACxB,IAAI,QAAQ,EAAE;YACV,OAAO,IAAI,CAAC,QAAQ,EAAE,CAAC;SAC1B;QACD,OAAO,IAAI,CAAC,YAAY,EAAE,CAAC;;;;;IAGxB,QAAQ;QACX,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;QACvD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC;QAC7B,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC;QACzB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;;;;;IAGhG,YAAY;QACf,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;QAC3D,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC;QACzB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC;QAC7B,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,EAAE,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;;;;;;IAGxG,IAAI,CAAC,QAAgB;QACxB,IAAI,QAAQ,EAAE;YACV,OAAO,IAAI,CAAC,IAAI,CAAC;SACpB;QACD,OAAO,IAAI,CAAC,QAAQ,CAAC;;;;;;IAGjB,SAAS,CAAC,SAAc;;QAC5B,MAAM,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;QACxC,IAAI,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE;YAC1B,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;SAChD;;QACD,MAAM,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;;QACpC,MAAM,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,SAAS,CAAC,CAAC;QAE/C,OAAO,IAAI,aAAa,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,EAAE,IAAI,CAAC,OAAO,CAAC,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;;;;;;IAGlG,SAAS,CAAC,IAAS;QACzB,OAAO,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,EAAE,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC;KAChE;;;;;IAES,SAAS,CAAC,UAAe;QAC/B,OAAO,IAAI,CAAC,KAAK;aACZ,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC;aAClB,GAAG,CAAC,CAAC,IAAI,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,EAAE,QAAQ,CAAC,KAAK,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;KAE7E;;;;;;IAES,SAAS,CAAC,SAAgB,EAAE,QAAa;QAC/C,OAAO,SAAS,CAAC,GAAG,CAAC,IAAI;;YACrB,MAAM,IAAI,GAAG,IAAI,YAAY,CAAC,IAAI,CAAC,CAAC;YAEpC,IAAI,CAAC,UAAU,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;YACpG,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;YAC9E,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,IAAI,EAAE,CAAC,CAAC;YAC9D,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,UAAU,CAAC;YAEpC,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;YAEnC,OAAO,IAAI,CAAC;SACf,CAAC,CAAC;KACN;CAGJ;;;;;;ACjKD;IAgCI;QACI,IAAI,CAAC,SAAS,GAAG,IAAI,YAAY,EAAQ,CAAC;KAC7C;;;YA/BJ,SAAS,SAAC;gBACP,QAAQ,EAAE,yBAAyB;gBACnC,QAAQ,EAAE;;;;;;;;;;CAUb;gBACG,MAAM,EAAE,CAAC;;;;;;CAMZ,CAAC;aACD;;;;;qBAGI,KAAK;wBAGL,MAAM,SAAC,SAAS;;;;;;;AC7BrB;AAOA,MAAa,cAAc,GAAG;IAC1B,IAAI,oBAAE,MAAwB,CAAA;IAC9B,KAAK,oBAAE,OAAyB,CAAA;IAChC,IAAI,oBAAE,MAAwB,CAAA;IAC9B,QAAQ,oBAAE,UAA4B,CAAA;IACtC,IAAI,oBAAE,MAAwB,CAAA;CACjC,CAAC;AAmBF;;;;IAQI,YAAY,mBAA0C;QAClD,IAAI,CAAC,OAAO,GAAG,IAAI,eAAe,CAAC,IAAI,cAAc,EAAE,EAAE,mBAAmB,CAAC,GAAG,EAAE,CAAC,UAAU,CAAC,CAAC;QAE/F,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;KAC1B;;;;;IAGM,WAAW,CAAC,CAAY;QAC3B,CAAC,CAAC,cAAc,EAAE,CAAC;KACtB;;;YAlCJ,SAAS,SAAC;gBACP,QAAQ,EAAE,gBAAgB;gBAC1B,QAAQ,EAAE;;;;;;;;CAQb;gBACG,MAAM,EAAE,CAAC;;;;CAIZ,CAAC;aACD;;;;YA5BQ,sBAAsB;;;yBA8B1B,WAAW,SAAC,UAAU,cACtB,WAAW,SAAC,cAAc,cAC1B,WAAW,SAAC,gBAAgB;0BAW5B,YAAY,SAAC,WAAW,EAAE,CAAC,QAAQ,CAAC;;;;;;;AC7CzC;AAOA,MAAa,YAAY,GAAG;IACxB,KAAK,oBAAE,OAAuB,CAAA;IAC9B,KAAK,oBAAE,OAAuB,CAAA;IAC9B,YAAY,oBAAE,cAA8B,CAAA;IAC5C,KAAK,oBAAE,OAAuB,CAAA;IAC9B,MAAM,oBAAE,QAAwB,CAAA;CACnC,CAAC;;;;;IA+BE,YAAY,WAAwB,EAAE;QAClC,IAAI,CAAC,SAAS,GAAG,oBAAoB,CAAC,OAAO,CAAC;QAC9C,IAAI,CAAC,OAAO,GAAG,YAAY,CAAC,KAAK,CAAC;QAClC,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QACxB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACrB,IAAI,CAAC,UAAU,GAAG,OAAO,CAAC;QAC1B,IAAI,CAAC,kBAAkB,GAAG,GAAG,CAAC;QAC9B,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACtB,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;KACjC;CACJ;;;;;;ACzDD;;;;IAsII,YAAmB,UAAqB;QAArB,eAAU,GAAV,UAAU,CAAW;QACpC,IAAI,CAAC,oBAAoB,GAAG,IAAI,oBAAoB,CAAC,KAAK,CAAC,CAAC;QAE5D,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QAErB,IAAI,CAAC,MAAM,GAAG,IAAI,YAAY,EAAQ,CAAC;QACvC,IAAI,CAAC,OAAO,GAAG,IAAI,YAAY,EAAQ,CAAC;QAExC,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;KACrB;;;;QAjEU,MAAM;QACb,OAAO,IAAI,CAAC,OAAO,CAAC;;;;;;QAOb,MAAM,CAAC,MAAiB;QAC/B,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;;;;;QAIf,SAAS;;QAEhB,OAAO,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,CAAC;;;;;QAIzC,SAAS;QAChB,OAAO,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC;;;;;QAGvC,cAAc;;QACrB,MAAM,OAAO,GAAmB,EAAE,CAAC;QACnC,IAAI,IAAI,CAAC,SAAS,EAAE;YAChB,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,IAAI,CAAC;SAClC;QACD,IAAI,IAAI,CAAC,SAAS,EAAE;YAChB,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,IAAI,CAAC;SAClC;QACD,IAAI,IAAI,CAAC,MAAM,CAAC,UAAU,EAAE;YACxB,OAAO,eAAY,IAAI,CAAC;SAC3B;QACD,IAAI,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE;YACrB,OAAO,YAAS,IAAI,CAAC;SACxB;QACD,IAAI,IAAI,CAAC,MAAM,CAAC,SAAS,EAAE;YACvB,OAAO,cAAW,IAAI,CAAC;SAC1B;QACD,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE;YAClB,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC;SACpC;QACD,IAAI,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE;YACnB,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC;SACrC;QACD,OAAO,OAAO,CAAC;;;;;IAqBZ,IAAI;;QAEP,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;;YAEd,YAAY,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;;YAGlC,UAAU,CAAC;gBACP,IAAI,CAAC,kBAAkB,GAAG,IAAI,kBAAkB,CAC5C,IAAI,CAAC,OAAO,EACZ,IAAI,CAAC,UAAU,CAAC,OAAO,EACvB,IAAI,CAAC,MAAM,CAAC,SAAS,EACrB,gBAAgB,CACnB,CAAC;gBACF,IAAI,CAAC,kBAAkB,CAAC,QAAQ,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC;aAC3D,CAAC,CAAC;;YAGH,IAAI,CAAC,oBAAoB,CAAC,OAAO,EAAE,CAAC;YACpC,IAAI,CAAC,oBAAoB,CAAC,OAAO,CAC7B,IAAI,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,UAAU,EAAE,IAAI,CAAC,MAAM,CAAC,kBAAkB,EAAE,mBAAmB,CAAC,EAAE,EAAE;;gBAE3F,MAAM,SAAS,qBAAG,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,aAAa,CAAC,aAAa,CAAuB,EAAC;gBACnG,IAAI,SAAS,EAAE;;oBAEX,UAAU,CAAC,MAAM,SAAS,CAAC,KAAK,EAAE,EAAE,EAAE,CAAC,CAAC;;oBAExC,UAAU,CAAC,MAAM,SAAS,CAAC,KAAK,EAAE,EAAE,IAAI,CAAC,MAAM,CAAC,kBAAkB,CAAC,CAAC;iBACvE;aACJ,CAAC,CAAC,CAAC;;YAGR,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;YACpB,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;SACtB;;;;;IAGE,MAAM;QACT,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;YACd,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;SACtB;QAED,OAAO,IAAI,CAAC,KAAK,EAAE,CAAC;;;;;IAGjB,KAAK;;QAER,IAAI,IAAI,CAAC,MAAM,EAAE;;YAEb,IAAI,CAAC,oBAAoB,CAAC,OAAO,EAAE,CAAC;YACpC,IAAI,CAAC,oBAAoB,CAAC,OAAO,CAC7B,IAAI,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,UAAU,EAAE,IAAI,CAAC,MAAM,CAAC,kBAAkB,EAAE,mBAAmB,CAAC,GAAG,CAAC,CAAC,CAAC;;YAGrG,YAAY,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;;YAElC,IAAI,CAAC,cAAc,GAAG,MAAM,CAAC,UAAU,CAAC,MAAM,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,IAAI,CAAC,MAAM,CAAC,kBAAkB,CAAC,CAAC;;YAGnG,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;SACxB;;;;;;IAIE,OAAO,CAAC,KAAgB;;QAE3B,KAAK,CAAC,eAAe,EAAE,CAAC;KAC3B;;;YA9MJ,SAAS,SAAC;gBACP,QAAQ,EAAE,WAAW;gBACrB,QAAQ,EAAE;;;;;;;;;;;;;;;;;CAiBb;gBACG,MAAM,EAAE,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAgCZ,CAAC;aACD;;;;YA3DgD,UAAU;;;yBAmFtD,SAAS,SAAC,WAAW,EAAE,EAAE,IAAI,EAAE,gBAAgB,EAAE;8BA6CjD,SAAS,SAAC,iBAAiB,EAAE,EAAE,IAAI,EAAE,gBAAgB,EAAE;uBAGvD,WAAW,SAAC,eAAe;sBA6E3B,YAAY,SAAC,OAAO,EAAE,CAAC,QAAQ,CAAC;;;;;;;AChNrC;;;AAYA;;;;;;;IAgBI,YAAsB,SAAmB,EACnB,QAAmB,EACnB,iBAAqC,EAC/C,MAAkB;QAHR,cAAS,GAAT,SAAS,CAAU;QACnB,aAAQ,GAAR,QAAQ,CAAW;QACnB,sBAAiB,GAAjB,iBAAiB,CAAoB;;QAIvD,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,iBAAiB,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC;;QAGtE,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,MAAM,CAAC;;QAG3B,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,SAAS,CAAC,MAAM,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC;KACtD;;;;QAxBU,KAAK;;QAEZ,OAAO,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC;;;;;;IAwBhC,SAAS,CAAC,MAAoB;QACjC,IAAI,MAAM,EAAE;YACR,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;SAC5C;;;;;IAGE,WAAW;;QAEd,YAAY,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;;QAGnC,IAAI,CAAC,eAAe,GAAG,MAAM,CAAC,UAAU,CAAC,MAAM,IAAI,CAAC,IAAI,EAAE,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;;;;;IAGlF,IAAI;;QAEP,IAAI,CAAC,iBAAiB,CAAC,mBAAmB,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;QAE/D,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,QAAQ,EAAE;YAC5B,IAAI,CAAC,iBAAiB,CAAC,aAAa,CAAC,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,aAAa,CAAC,CAAC;SACvG;aAAM;;YAEH,IAAI,CAAC,iBAAiB,CAAC,kBAAkB,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;SACjE;;QAGD,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC;;QAGlC,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,SAAS;aAClC,MAAM,CAAC,UAAU,EAAE,OAAO,EAAE,CAAC,CAAY,KACtC,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,CAAC;;QAGjC,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;;QAGlB,MAAM,SAAS,GAAG,mBAAC,IAAuB,GAAE,WAAW,CAAC;QACxD,IAAI,SAAS,EAAE;YACX,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SACxB;;;;;IAGE,KAAK;;QAER,YAAY,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;QAEnC,IAAI,IAAI,CAAC,aAAa,EAAE;;YAEpB,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;SACtB;;QAGD,MAAM,SAAS,GAAG,mBAAC,IAAuB,GAAE,YAAY,CAAC;QACzD,IAAI,SAAS,EAAE;YACX,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SACxB;;;;;IAGE,aAAa;;QAEhB,IAAI,CAAC,IAAI,CAAC,aAAa,KAAK,IAAI,CAAC,aAAa,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE;YACnE,OAAO,IAAI,CAAC,WAAW,EAAE,CAAC;SAC7B;;QAGD,OAAO,IAAI,CAAC,KAAK,EAAE,CAAC;;;;;IAGjB,MAAM;;QAET,IAAI,CAAC,IAAI,CAAC,aAAa,KAAK,IAAI,CAAC,aAAa,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE;YACnE,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;SACtB;;QAGD,OAAO,IAAI,CAAC,KAAK,EAAE,CAAC;;;;;IAIjB,YAAY;QACf,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,OAAO,KAAK,YAAY,CAAC,KAAK,EAAE;YAClD,IAAI,CAAC,WAAW,EAAE,CAAC;SACtB;KACJ;;;;IAGM,YAAY;QACf,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,OAAO,KAAK,YAAY,CAAC,KAAK,EAAE;YAClD,IAAI,CAAC,KAAK,EAAE,CAAC;SAChB;KACJ;;;;IAGM,OAAO;QACV,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,OAAO,KAAK,YAAY,CAAC,KAAK;YAChD,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,OAAO,KAAK,YAAY,CAAC,YAAY,EAAE;;YAGzD,IAAI,CAAC,aAAa,EAAE,CAAC;SACxB;aAAM,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,OAAO,KAAK,YAAY,CAAC,KAAK;aAC/C,CAAC,IAAI,CAAC,aAAa,KAAK,IAAI,CAAC,aAAa,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE;;YAE5E,IAAI,CAAC,WAAW,EAAE,CAAC;SACtB;KACJ;;;;;IAEO,eAAe,CAAC,CAAY;;QAEhC,IAAI,IAAI,CAAC,aAAa,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,OAAO,KAAK,YAAY,CAAC,YAAY,EAAE;;YAC/E,MAAM,MAAM,qBAAG,CAAC,CAAC,MAAiB,EAAC;;YAEnC,IAAI,CAAC,mBAAC,IAAI,CAAC,QAAQ,CAAC,aAAwB,GAAE,QAAQ,CAAC,MAAM,CAAC,EAAE;gBAC5D,IAAI,CAAC,KAAK,EAAE,CAAC;aAChB;SACJ;;;;;IAIE,SAAS;QACZ,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,OAAO,KAAK,YAAY,CAAC,KAAK,EAAE;YAClD,IAAI,CAAC,WAAW,EAAE,CAAC;SACtB;KACJ;;;;;IAGM,UAAU,CAAC,CAAK;QACnB,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC,CAAC,aAAa,CAAC;YACtD,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC,CAAC,aAAa,CAAC;YAC9D,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,OAAO,KAAK,YAAY,CAAC,KAAK,EAAE;YAElD,IAAI,CAAC,KAAK,EAAE,CAAC;SAChB;KACJ;;;;IAES,OAAO;QACb,YAAY,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;QAEnC,IAAI,IAAI,CAAC,aAAa,CAAC,QAAQ,IAAI,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,kBAAkB,EAAE;YAC/E,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,kBAAkB,CAAC,OAAO,EAAE,CAAC;SAC5D;QAED,IAAI,CAAC,iBAAiB,CAAC,qBAAqB,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;QAEjE,IAAI,IAAI,CAAC,iBAAiB,EAAE;YACxB,IAAI,CAAC,iBAAiB,EAAE,CAAC;SAC5B;KACJ;;;;IAEM,WAAW;QACd,IAAI,CAAC,OAAO,EAAE,CAAC;;;;2BAvElB,YAAY,SAAC,YAAY;2BAOzB,YAAY,SAAC,YAAY;sBAOzB,YAAY,SAAC,OAAO;wBAyBpB,YAAY,SAAC,SAAS;yBAOtB,YAAY,SAAC,UAAU,EAAE,CAAC,QAAQ,CAAC;;;;;;;ACtKxC;;;AAGA,iCAA4C,SAAQ,kBAAkB;;;;;;;;IAUlE,YAAY,QAAkB,EAClB,OAAkB,EAClB,gBAAoC,EAC5B,YACR,MAAkB;QAE1B,KAAK,CAAC,QAAQ,EAAE,OAAO,EAAE,gBAAgB,EAAE,MAAM,CAAC,CAAC;QAHnC,eAAU,GAAV,UAAU;KAI7B;;;;QAbU,iBAAiB;QACxB,IAAI,IAAI,CAAC,oBAAoB,EAAE;YAC3B,OAAO,IAAI,CAAC,oBAAoB,CAAC,QAAQ,CAAC;SAC7C;;;;;IAYE,IAAI;QACP,IAAI,CAAC,IAAI,CAAC,oBAAoB,EAAE;YAC5B,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,iBAAiB,CAAC,eAAe,mBAAC,IAAI,CAAC,UAAqB,EAAC,CAAC;YAC/F,IAAI,CAAC,iBAAiB,CAAC,YAAY,CAAC,IAAI,CAAC,oBAAoB,EAAE,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC;SAC9F;QAED,KAAK,CAAC,IAAI,EAAE,CAAC;;;;;IAGP,OAAO;QACb,KAAK,CAAC,OAAO,EAAE,CAAC;QAEhB,IAAI,IAAI,CAAC,oBAAoB,EAAE;YAC3B,IAAI,CAAC,oBAAoB,CAAC,OAAO,EAAE,CAAC;YACpC,IAAI,CAAC,oBAAoB,GAAG,SAAS,CAAC;SACzC;KACJ;CACJ;;;;;;ACzCD;;;AAqBA,gCAA2C,SAAQ,kBAAkB;;;;;;;IAIjE,YAAY,QAAkB,EAClB,OAAkB,EAClB,gBAAoC,EACpC,MAAkB;QAE1B,KAAK,CAAC,QAAQ,EAAE,OAAO,EAAE,gBAAgB,EAAE,MAAM,CAAC,CAAC;KACtD;;;;;IAEM,SAAS,CAAC,MAA+B;QAC5C,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;QAExB,IAAI,MAAM,EAAE;YACR,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;YAChC,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC;SACjC;;;;;IAGE,IAAI;;QAEP,IAAI,IAAI,CAAC,QAAQ,EAAE;YACf,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,KAAK,EAAE,CAAC;YAEnC,IAAI,CAAC,iBAAiB,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,eAAe,EAAE,IAAI,CAAC,QAAQ,EAAE;gBACzE,SAAS,EAAE,IAAI,CAAC,KAAK;gBACrB,OAAO,EAAE,IAAI,CAAC,OAAO;aACxB,CAAC,CAAC;SACN;QAED,KAAK,CAAC,IAAI,EAAE,CAAC;;CAEpB;;;;;;ACvDD;;;;QA8Ee,SAAS;QAChB,IAAI,IAAI,CAAC,SAAS,EAAE;YAChB,OAAO,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,CAAC;SAC5C;;;;;QAGM,SAAS;QAChB,IAAI,IAAI,CAAC,SAAS,EAAE;;YAChB,MAAM,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC;YAClD,IAAI,SAAS,KAAK,IAAI,CAAC,SAAS,EAAE;gBAC9B,OAAO,QAAQ,CAAC;aACnB;YACD,OAAO,SAAS,CAAC;SACpB;;;;YAxFR,SAAS,SAAC;gBACP,QAAQ,EAAE,iBAAiB;gBAC3B,QAAQ,EAAE;;;CAGb;gBACG,MAAM,EAAE,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CA2DZ,CAAC;aACD;;;wBAEI,KAAK;uBAGL,WAAW,SAAC,gBAAgB,cAC5B,KAAK;;;;;;;AC3EV,oBAI4B,SAAQ,WAAW;IAC3C;;QAEI,KAAK,EAAE,CAAC;KACX;;;YALJ,UAAU;;;;;;;;;ACHX;;;AAcA,uBAAkC,SAAQ,0BAA6B;;;;;;;IAqFnE,YAAY,QAAkB,EAClB,OAAkB,EAClB,gBAAoC,EACpC,aAA4B;QAEpC,KAAK,CAAC,QAAQ,EAAE,OAAO,EAAE,gBAAgB,EAAE,IAAI,WAAW,CAAC,aAAa,CAAC,CAAC,CAAC;KAC9E;;;;;IA1FD,IACW,WAAW,CAAC,MAAa;QAChC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,MAAM,GAAG,MAAM,CAAC;KACrC;;;;;IAED,IACW,SAAS,CAAC,IAAW;QAC5B,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC;KACjC;;;;;IAED,IACW,aAAa,CAAC,QAAgB;QACrC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,UAAU,GAAG,IAAI,CAAC,GAAG,CAAC,qBAAqB,CAAC,QAAQ,CAAC,CAAC;KAC3E;;;;;IAED,IACW,UAAU,CAAC,KAAa;QAC/B,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,qBAAqB,CAAC,KAAK,CAAC,CAAC;KACrE;;;;;IAED,IACW,WAAW,CAAC,MAAc;QACjC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,qBAAqB,CAAC,MAAM,CAAC,CAAC;KACvE;;;;;IAED,IACW,YAAY,CAAC,OAAe;QACnC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC,qBAAqB,CAAC,OAAO,CAAC,CAAC;KACzE;;;;;IAED,IACW,eAAe,CAAC,UAAiB;QACxC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,UAAU,GAAG,UAAU,CAAC;KAC7C;;;;;IAED,IACW,uBAAuB,CAAC,QAAe;QAC9C,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,kBAAkB,GAAG,QAAQ,CAAC;KACnD;;;;;IAED,IACW,cAAc,CAAC,SAA8B;QACpD,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,GAAG,SAAS,CAAC;KAC3C;;;;;IAED,IACW,UAAU,CAAC,KAAgB;QAClC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,GAAG,KAAK,CAAC;KACnC;;;;;IAED,IACW,SAAS,CAAC,IAAc;QAC/B,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC;KACjC;;;;;IAED,IACW,UAAU,CAAC,KAAY;QAC9B,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,GAAG,KAAK,CAAC;KACnC;;;;IAED,IACW,YAAY;QACnB,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC;KACpC;;;;;QAEU,YAAY,CAAC,OAAoB;QACxC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,OAAO,GAAG,OAAO,CAAC;;;;;;IAGxC,IACW,aAAa,CAAC,QAA0D;QAC/E,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;KAC5B;;;;;IAED,IACW,oBAAoB,CAAC,OAAqB;QACjD,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;KAC1B;;;;;IAED,IACW,WAAW,CAAC,MAA0C;QAC7D,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;KAC1B;;;YAvFJ,SAAS,SAAC;gBACP,QAAQ,EAAE,YAAY;gBACtB,QAAQ,EAAE,UAAU;aACvB;;;;YAbmD,SAAS;YAAlC,UAAU;YACqB,mBAAmB;YAGpE,cAAc;;;0BAWlB,KAAK;wBAKL,KAAK;4BAKL,KAAK;yBAKL,KAAK;0BAKL,KAAK;2BAKL,KAAK;8BAKL,KAAK;sCAKL,KAAK;6BAKL,KAAK;yBAKL,KAAK;wBAKL,KAAK;yBAKL,KAAK;2BAKL,KAAK;4BASL,KAAK;mCAKL,KAAK;0BAKL,KAAK;;;;;;;AC9FV;;;YASC,QAAQ,SAAC;gBACN,OAAO,EAAE;oBACL,YAAY;oBACZ,mBAAmB;oBACnB,gBAAgB;iBACnB;gBACD,YAAY,EAAE;oBACV,iBAAiB;oBACjB,aAAa;oBACb,QAAQ;iBACX;gBACD,OAAO,EAAE;oBACL,iBAAiB;oBACjB,QAAQ;iBACX;gBACD,SAAS,EAAE;oBACP,cAAc;iBACjB;gBACD,eAAe,EAAE;oBACb,QAAQ;iBACX;aACJ;;;;;;;;;;;;AC9BD,4BAmBO,SAAQ,2BAA0C;;;;;;;IAuFrD,YAAY,QAAkB,EAClB,OAAkB,EAClB,gBAAoC,EAC7B;QAEf,KAAK,CAAC,QAAQ,EAAE,OAAO,EAAE,gBAAgB,EAAE,aAAa,EAAE,IAAI,WAAW,CAAC;YACtE,OAAO,EAAE,YAAY,CAAC,KAAK;YAC3B,SAAS,EAAE,oBAAoB,CAAC,UAAU;YAC1C,UAAU,EAAE,OAAO;YACnB,kBAAkB,EAAE,GAAG;SAC1B,CAAC,CAAC,CAAC;QAPW,wBAAmB,GAAnB,mBAAmB;;QAUlC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,aAAa,EAAE,IAAI,CAAC,CAAC;QACnE,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,aAAa,EAAE,UAAU,CAAC,CAAC;QAEzE,IAAI,CAAC,cAAc,EAAE,CAAC;QACtB,IAAI,CAAC,mBAAmB,CAAC,gBAAgB,CAAC,SAAS,CAAC,MAAM,IAAI,CAAC,cAAc,EAAE,CAAC,CAAC;QAEjF,IAAI,CAAC,oBAAoB,GAAG,IAAI,YAAY,EAAQ,CAAC;QACrD,IAAI,CAAC,iBAAiB,GAAG,IAAI,YAAY,EAAQ,CAAC;QAElD,IAAI,CAAC,IAAI,GAAG,cAAc,CAAC,QAAQ,CAAC;KACvC;;;;QAzGU,YAAY;QACnB,OAAO,IAAI,CAAC,aAAa,CAAC;;;;;;QAGnB,YAAY,CAAC,IAAqB;QACzC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;QAC1B,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;;;;IAMzC,IACW,IAAI;QACX,OAAO,IAAI,CAAC,KAAK,CAAC;KACrB;;;;;QAEU,IAAI,CAAC,IAAmB;QAC/B,IAAI,CAAC,KAAK,GAAG,IAAI,IAAI,cAAc,CAAC,QAAQ,CAAC;QAC7C,QAAQ,IAAI,CAAC,KAAK;YACd,KAAK,cAAc,CAAC,IAAI;gBACpB,IAAI,CAAC,MAAM,GAAG,IAAI,UAAU,EAAE,CAAC;gBAC/B,MAAM;YACV,KAAK,cAAc,CAAC,KAAK;gBACrB,IAAI,CAAC,MAAM,GAAG,IAAI,WAAW,EAAE,CAAC;gBAChC,MAAM;YACV,KAAK,cAAc,CAAC,IAAI,CAAC;YACzB;gBACI,IAAI,CAAC,MAAM,GAAG,IAAI,UAAU,EAAE,CAAC;gBAC/B,MAAM;YACV,KAAK,cAAc,CAAC,QAAQ;gBACxB,IAAI,CAAC,MAAM,GAAG,IAAI,cAAc,EAAE,CAAC;gBACnC,MAAM;YACV,KAAK,cAAc,CAAC,IAAI;gBACpB,IAAI,CAAC,MAAM,GAAG,IAAI,UAAU,EAAE,CAAC;gBAC/B,MAAM;SACb;QACD,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;;;;;QAoB5B,YAAY;QACnB,OAAO,IAAI,CAAC,mBAAmB,CAAC,QAAQ,CAAe,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,eAAe,CAAC,CAAC;;;;;;IAGrG,IACW,SAAS,CAAC,SAA8B;QAC/C,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,GAAG,SAAS,CAAC;KAC3C;;;;;IAED,IACW,UAAU,CAAC,UAAiB;QACnC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,UAAU,GAAG,UAAU,CAAC;KAC7C;;;;;IAED,IACW,kBAAkB,CAAC,QAAe;QACzC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,kBAAkB,GAAG,QAAQ,CAAC;KACnD;;;;IAiCM,WAAW;QACd,IAAI,IAAI,CAAC,iBAAiB,EAAE;YACxB,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;YACpD,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC;YAChE,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,IAAI,IAAI,IAAI,EAAE,CAAC;YAC5E,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC;YAChE,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;YACtD,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;YAEtD,IAAI,IAAI,CAAC,cAAc,IAAI,SAAS,EAAE;gBAClC,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,cAAc,GAAG,IAAI,CAAC,cAAc,CAAC;aACvE;YAED,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC;YAEvC,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,CAAM;gBACzD,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;gBACtB,IAAI,CAAC,KAAK,EAAE,CAAC;aAChB,CAAC,CAAC;SACN;;;;;;IAGE,WAAW,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,IAAI,EAAgB;QACvD,IAAI,OAAO,IAAI,OAAO,IAAI,IAAI,EAAE;YAC5B,IAAI,CAAC,iBAAiB,CAAC,IAAI,EAAE,CAAC;SACjC;;;;;IAGG,cAAc;QAClB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,mBAAmB,CAAC,GAAG,EAAE,CAAC,UAAU,CAAC;;;;;;IAG5D,QAAQ,CAAC,CAAiB;;QAC7B,MAAM,KAAK,GAAG,CAAC,CAAC,KAAK,CAAC;QAEtB,IAAI,KAAK,IAAI,SAAS,EAAE;;YAEpB,IAAI,IAAI,CAAC,OAAO,IAAI,KAAK,GAAG,IAAI,CAAC,OAAO,EAAE;gBACtC,OAAO,EAAE,UAAU,EAAE,EAAE,QAAQ,EAAE,IAAI,CAAC,OAAO,EAAE,MAAM,EAAE,KAAK,EAAE,EAAE,CAAC;aACpE;YAED,IAAI,IAAI,CAAC,OAAO,IAAI,KAAK,GAAG,IAAI,CAAC,OAAO,EAAE;gBACtC,OAAO,EAAE,UAAU,EAAE,EAAE,QAAQ,EAAE,IAAI,CAAC,OAAO,EAAE,MAAM,EAAE,KAAK,EAAE,EAAE,CAAC;aACpE;SACJ;;;QAID,OAAO,IAAI,CAAC;;;;;;IAGT,UAAU,CAAC,KAAsB;QACpC,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;QAE1B,IAAI,IAAI,CAAC,iBAAiB,EAAE;YACxB,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,YAAY,GAAG,KAAK,CAAC;SACvD;;;;;;IAIE,SAAS,CAAC,CAAe;QAC5B,IAAI,CAAC,CAAC,OAAO,KAAK,OAAO,CAAC,MAAM,EAAE;YAC9B,IAAI,CAAC,KAAK,EAAE,CAAC;SAChB;KACJ;;;YArLJ,SAAS,SAAC;gBACP,QAAQ,EAAE,iBAAiB;gBAC3B,SAAS,EAAE,CAAC,sBAAsB,CAAC,sBAAsB,CAAC,CAAC;aAC9D;;;;YAhB0B,SAAS;YAArB,UAAU;YAMgE,mBAAmB;YAExD,sBAAsB;;;mBA2BrE,KAAK,SAAC,YAAY;0BA4BlB,KAAK,SAAC,mBAAmB;sBAGzB,KAAK,SAAC,eAAe;sBAGrB,KAAK,SAAC,eAAe;6BAGrB,KAAK,SAAC,sBAAsB;8BAK5B,KAAK,SAAC,uBAAuB;wBAO7B,KAAK,SAAC,iBAAiB;yBAKvB,KAAK,SAAC,kBAAkB;iCAKxB,KAAK,SAAC,0BAA0B;mCAKhC,MAAM,SAAC,0BAA0B;gCAGjC,MAAM,SAAC,uBAAuB;wBAuF9B,YAAY,SAAC,SAAS,EAAE,CAAC,QAAQ,CAAC;;yCAaU,SAAQ,mBAAiD;;;;IACtG,YAAmB,IAA2B;QAAI,KAAK,CAAC,IAAI,CAAC,CAAC;QAA3C,SAAI,GAAJ,IAAI,CAAuB;KAAkB;;;YANnE,SAAS,SAAC;gBACP,QAAQ,EAAE,iBAAiB;gBAC3B,IAAI,EAAE,EAAE,4BAA4B,EAAE,kBAAkB,EAAE;gBAC1D,SAAS,EAAE,CAAC,0BAA0B,CAAC,mCAAmC,CAAC,CAAC;aAC/E;;;;YAE2B,sBAAsB;;qCAQL,SAAQ,eAAuC;;;;IACxF,YAAmB,IAA2B;QAAI,KAAK,CAAC,IAAI,CAAC,CAAC;QAA3C,SAAI,GAAJ,IAAI,CAAuB;KAAkB;;;YANnE,SAAS,SAAC;gBACP,QAAQ,EAAE,iBAAiB;gBAC3B,IAAI,EAAE,EAAE,yBAAyB,EAAE,qBAAqB,EAAE;gBAC1D,SAAS,EAAE,CAAC,sBAAsB,CAAC,+BAA+B,CAAC,CAAC;aACvE;;;;YAE2B,sBAAsB;;;;;;;;;;;;ACpNlD;AAUA,MAAM,SAAS,GAAGC,oBAAsB,IAAI,WAAW,CAAC;AAKxD;;;;;;;;IA0EI,YAA2B,UAAiC,EACjC,aAAiD,EACxD,WACA,UACR,mBAA0C;QAJ3B,eAAU,GAAV,UAAU,CAAuB;QACjC,kBAAa,GAAb,aAAa,CAAoC;QACxD,cAAS,GAAT,SAAS;QACT,aAAQ,GAAR,QAAQ;QAGxB,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;QAC9B,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;;QAG5B,IAAI,CAAC,UAAU,CAAC,oBAAoB,CAAC,SAAS,CAAC,MAC3C,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC;QAE/C,mBAAmB,CAAC,gBAAgB,CAAC,SAAS,CAAC,MAC3C,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC;KAClD;;;;IAtFD,IACW,iBAAiB;QACxB,OAAO,IAAI,CAAC,kBAAkB,CAAC;KAClC;;;;;QAEU,iBAAiB,CAAC,QAAgB;QACzC,IAAI,CAAC,kBAAkB,GAAG,QAAQ,CAAC;;QACnC,MAAM,UAAU,GAAGC,MAAa,IAAIC,MAAa,IAAI,SAAS,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;QACpF,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,iBAAiB,IAAI,UAAU,CAAC;;;;;QAKpD,cAAc;QACrB,OAAO,IAAI,CAAC,eAAe,CAAC;;;;;;QAGrB,cAAc,CAAC,MAAc;QACpC,IAAI,CAAC,eAAe,GAAG,MAAM,CAAC;;QAE9B,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,MAAM,CAAC,OAAO,GAAG,IAAI,CAAC,cAAc,GAAG,YAAY,CAAC,MAAM,GAAG,YAAY,CAAC,KAAK,CAAC;;QAEtG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;;;;;QAGnC,MAAM;QACb,IAAI,IAAI,CAAC,cAAc,EAAE;YACrB,OAAO,IAAI,kBAAkB,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC;SACrF;QACD,OAAO,IAAI,UAAU,CAAC,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC;;;;;QAMzG,kBAAkB;QACzB,IAAI,IAAI,CAAC,UAAU,CAAC,YAAY,EAAE;YAC9B,OAAO,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC;SAC3D;;;;;IAGL,IACW,IAAI;QACX,IAAI,IAAI,CAAC,cAAc,EAAE;YACrB,OAAO,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,QAAQ,CAAC;SAC1C;QACD,OAAO,MAAM,CAAC;KACjB;;;;IAED,IACW,GAAG;QACV,IAAI,IAAI,CAAC,cAAc,IAAI,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE;;YAIhD,MAAM,GAAG,GAAG,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,SAAS,EAAE,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC;YACtG,OAAO,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;SAClC;KACJ;;;;IAED,IACW,GAAG;QACV,IAAI,IAAI,CAAC,cAAc,IAAI,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE;;YAIhD,MAAM,GAAG,GAAG,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;YACpD,OAAO,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;SAClC;KACJ;;;;;IAmBO,WAAW,CAAC,KAAwB;;;QAGxC,IAAI,CAAC,IAAI,CAAC,gBAAgB,EAAE;YACxB,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,aAAa,EAAE,OAAO,EAAE,KAAK,IAAI,EAAE,CAAC,CAAC;SACjF;QAED,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;;;;;;IAI3B,SAAS,CAAC,KAAwB;QACrC,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;QAC7B,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;QAEhC,IAAI,CAAC,KAAK,EAAE;;YAER,OAAO,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC;SAChD;;QAED,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,EAAE,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC;QACtE,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC,IAAI,KAAK,KAAK,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE;YAClE,OAAO,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;SAC7C;QACD,OAAO,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC;KAChD;;;;IAGM,UAAU;QACb,IAAI,CAAC,aAAa,CAAC,SAAS,EAAE,CAAC;KAClC;;;YA5HJ,SAAS,SAAC;gBACP,QAAQ,EAAE,sBAAsB;aACnC;;;;YAVQ,sBAAsB,uBAqFd,IAAI;YArFY,mCAAmC,uBAsFnD,IAAI;YA1FmD,SAAS;YAAhD,UAAU;YAElC,sBAAsB;;;gCAgB1B,KAAK,SAAC,yBAAyB;mBAyC/B,WAAW,SAAC,WAAW;kBAQvB,WAAW,SAAC,UAAU;kBAWtB,WAAW,SAAC,UAAU;wBAsCtB,YAAY,SAAC,OAAO,EAAE,CAAC,qBAAqB,CAAC;yBAiB7C,YAAY,SAAC,UAAU;;;;;;;ACtI5B,8BAOsC,SAAQ,oBAAoB;;;;;IACvD,SAAS,CAAC,KAAU;;QACvB,MAAM,UAAU,GAAG,QAAQ,CAAC,OAAO,CAAC,aAAa,CAAC,KAAK,EAAE,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC;QAChF,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,UAAU,CAAC,MAAM,EAAE,GAAG,IAAI,CAAC,OAAO,CAAC,cAAc,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;QACpF,OAAO,UAAU,CAAC;;;;;;;IAGf,aAAa,CAAC,IAAiB,EAAE,QAAa;QACjD,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,QAAQ,EAAE,CAAC;QACpD,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,KAAK,QAAQ,CAAC,QAAQ,EAAE,CAAC;QACnE,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,UAAU,CAAC;;CAE3C;AA8BD,yBAAiC,SAAQ,YAAY;;;;IAUjD,YAAY,QAAkB;QAC1B,KAAK,CAAC,QAAQ,EAAE,gBAAgB,CAAC,IAAI,EAAE,IAAI,wBAAwB,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;KACnG;;;;QAXU,IAAI;;QACX,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,cAAc,CAAC;QACtD,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,cAAc,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;;;;;QAG1E,IAAI;QACX,OAAO,IAAI,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,OAAO,CAAC,KAAK,EAAE,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;;;;YAnC1H,SAAS,SAAC;gBACP,QAAQ,EAAE,wBAAwB;gBAClC,QAAQ,EAAE;;;;;;;;;;;;;;;;;;;;;;;;CAwBb;aACA;;;;YAhDmB,SAAS;;;;;;;ACA7B,8BAOsC,SAAQ,oBAAoB;;;;;;IACvD,aAAa,CAAC,IAAiB,EAAE,QAAa;;QAEjD,MAAM,YAAY,GAAU,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;QACzF,IAAI,CAAC,aAAa,GAAG,IAAI,UAAU,CAAC,YAAY,EAAE,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC/F,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;;CAEnC;AA2BD,yBAAiC,SAAQ,YAAY;;;;IAMjD,YAAY,QAAkB;QAC1B,KAAK,CAAC,QAAQ,EAAE,gBAAgB,CAAC,IAAI,EAAE,IAAI,wBAAwB,CAAC,aAAa,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;KAClG;;;;QANU,IAAI;QACX,OAAO,IAAI,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,OAAO,CAAC,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;;;;YA5BzH,SAAS,SAAC;gBACP,QAAQ,EAAE,wBAAwB;gBAClC,QAAQ,EAAE;;;;;;;;;;;;;;;;;;;;;CAqBb;aACA;;;;YAxCmB,SAAS;;;;;;;ACA7B,gCAQwC,SAAQ,oBAAoB;;;;;IACzD,SAAS,CAAC,KAAU;QACvB,OAAO,QAAQ,CAAC,OAAO,CAAC,aAAa,CAAC,IAAI,EAAE,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC,CAAC;;;;;;IAGtE,SAAS,CAAC,KAAU;QACvB,OAAO,IAAI,CAAC,KAAK;aACZ,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC;aAClB,GAAG,CAAC,CAAC,IAAI,QAAQ,CAAC,GAAG,CAAC,aAAa,CAAC,MAAM,EAAE,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;;;;;;;IAG7E,aAAa,CAAC,IAAiB,EAAE,QAAa;QACjD,IAAI,CAAC,aAAa,GAAG,IAAI,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,OAAO,CAAC,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACzH,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;;CAEnC;AA2BD,2BAAmC,SAAQ,YAAY;;;;IAanD,YAAY,QAAkB;QAC1B,KAAK,CAAC,QAAQ,EAAE,gBAAgB,CAAC,MAAM,EAAE,IAAI,0BAA0B,CAAC,aAAa,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;KACtG;;;;QAdU,IAAI;QACX,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,KAAK,YAAY,CAAC,QAAQ,EAAE;;YAEpD,MAAM,cAAc,GAAU,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,OAAO,CAAC,QAAQ,CAAC,OAAO,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;YAC/F,OAAO,IAAI,UAAU,CAAC,cAAc,EAAE,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;SAC7F;aAAM;;YAEH,MAAM,UAAU,GAAU,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;YACvF,OAAO,IAAI,UAAU,CAAC,UAAU,EAAE,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;SACzF;;;;YAnCR,SAAS,SAAC;gBACP,QAAQ,EAAE,0BAA0B;gBACpC,QAAQ,EAAE;;;;;;;;;;;;;;;;;;;;;CAqBb;aACA;;;;YAjDmB,SAAS;;;;;;;ACA7B,+BAOuC,SAAQ,oBAAoB;;;;;;IACxD,aAAa,CAAC,IAAiB,EAAE,QAAa;QACjD,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC;QACjF,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;;CAEnC;AA2BD,0BAAkC,SAAQ,YAAY;;;;IAKlD,YAAY,QAAkB;QAC1B,KAAK,CAAC,QAAQ,EAAE,gBAAgB,CAAC,KAAK,EAAE,IAAI,yBAAyB,CAAC,aAAa,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;KACpG;;;;QANU,IAAI;QACX,OAAO,IAAI,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,OAAO,CAAC,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;;;;YA3BzH,SAAS,SAAC;gBACP,QAAQ,EAAE,yBAAyB;gBACnC,QAAQ,EAAE;;;;;;;;;;;;;;;;;;;;;CAqBb;aACA;;;;YAtCmB,SAAS;;;;;;;ACA7B,8BAMsC,SAAQ,oBAAoB;;;;;;IACvD,aAAa,CAAC,IAAiB,EAAE,QAAa;QACjD,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,QAAQ,EAAE,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC;QACrF,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,WAAW,EAAE,GAAG,EAAE,CAAC;;CAEpG;AA2BD,yBAAiC,SAAQ,YAAY;;;;IAOjD,YAAY,QAAkB;QAC1B,KAAK,CAAC,QAAQ,EAAE,gBAAgB,CAAC,IAAI,EAAE,IAAI,wBAAwB,CAAC,aAAa,CAAC,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;KACpG;;;;QARU,WAAW;QAClB,OAAO,QAAQ;aACV,OAAO,CAAC,aAAa,CAAC,MAAM,EAAE,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;aACvE,WAAW,EAAE,CAAC;;;;;;IAOhB,GAAG,CAAC,IAAW;QAClB,OAAO,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC;;;;YArC3D,SAAS,SAAC;gBACP,QAAQ,EAAE,wBAAwB;gBAClC,QAAQ,EAAE;;;;;;;;;;;;;;;;;;;;;CAqBb;aACA;;;;YArCmB,SAAS;;;;;;;ACA7B;;;YAoBC,QAAQ,SAAC;gBACN,OAAO,EAAE;oBACL,YAAY;oBACZ,WAAW;oBACX,cAAc;oBACd,qBAAqB;oBACrB,gBAAgB;iBACnB;gBACD,YAAY,EAAE;oBACV,eAAe;oBAEf,oBAAoB;oBACpB,mBAAmB;oBACnB,oBAAoB;oBACpB,mBAAmB;oBACnB,mBAAmB;oBACnB,qBAAqB;oBAErB,aAAa;oBACb,sBAAsB;oBACtB,mCAAmC;oBACnC,+BAA+B;oBAC/B,2BAA2B;iBAC9B;gBACD,OAAO,EAAE;oBACL,sBAAsB;oBACtB,mCAAmC;oBACnC,+BAA+B;oBAC/B,2BAA2B;iBAC9B;gBACD,eAAe,EAAE;oBACb,aAAa;iBAChB;aACJ;;;;;;;;;;;;;;;;;ACrDD,eAoBuB,SAAQ,aAAa;;;;;;IAmDxC,YAAY,QAAkB,EAAE,OAAkB,EAAE,cAAgC;QAChF,KAAK,CAAC,QAAQ,EAAE,OAAO,EAAE,cAAc,CAAC,CAAC;QAEzC,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,cAAc,GAAG,IAAI,YAAY,EAAW,CAAC;QAClD,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QAExB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QAExB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;KAC1B;;;;IApDD,IAEW,QAAQ;QACf,OAAO,IAAI,CAAC,SAAS,CAAC;KACzB;;;;;QAEU,QAAQ,CAAC,KAAa;;QAC7B,MAAM,QAAQ,GAAG,CAAC,CAAC,KAAK,CAAC;QAEzB,IAAI,CAAC,IAAI,CAAC,qBAAqB,EAAE;;YAE7B,IAAI,CAAC,qBAAqB,GAAG,IAAI,oBAAoB,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;YAEzE,IAAI,CAAC,uBAAuB,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;YAEzD,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;SAC7B;aAAM,IAAI,IAAI,CAAC,SAAS,KAAK,QAAQ,EAAE;YAEpC,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;YAE1B,IAAI,CAAC,qBAAqB,CAAC,OAAO,EAAE,CAAC;YACrC,IAAI,CAAC,qBAAqB,CAAC,OAAO,CAC9B,IAAI,UAAU,CAAC,MAAM,EAAE,IAAI,CAAC,kBAAkB,EAAE,QAAQ,GAAG,mBAAmB,CAAC,EAAE,GAAG,mBAAmB,CAAC,GAAG,CAAC,CAAC,CAAC;SACrH;;;;;IAgCE,OAAO;QACV,IAAI,IAAI,CAAC,WAAW,EAAE;YAClB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;YACtB,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;SAC3C;KACJ;;;YAnFJ,SAAS,SAAC;gBACP,QAAQ,EAAE,YAAY;gBACtB,QAAQ,EAAE;;;;CAIb;gBACG,MAAM,EAAE,CAAC;;;;;CAKZ,CAAC;aACD;;;;YAlBsE,SAAS;YAC5E,UAAU;YAAE,iBAAiB;;;yBAmB5B,WAAW,SAAC,UAAU,cACtB,WAAW,SAAC,cAAc;uBAO1B,WAAW,SAAC,cAAc,cAC1B,KAAK;6BAyBL,MAAM;0BAGN,KAAK;yBAGL,KAAK;iCAGL,KAAK;0BAIL,KAAK;sBAeL,YAAY,SAAC,OAAO;;;;;;;ACnFzB;;;YAKC,QAAQ,SAAC;gBACN,OAAO,EAAE;oBACL,YAAY;oBACZ,mBAAmB;iBACtB;gBACD,YAAY,EAAE;oBACV,SAAS;iBACZ;gBACD,OAAO,EAAE;oBACL,SAAS;iBACZ;aACJ;;;;;;;;;;;;;;;;;AChBD;AAKA,MAAa,qBAAqB,GAAG;IACjC,SAAS,oBAAE,WAAoC,CAAA;IAC/C,YAAY,oBAAE,cAAuC,CAAA;IACrD,QAAQ,oBAAE,UAAmC,CAAA;CAChD,CAAC;AAEF;;;;QAiBe,QAAQ;QACf,OAAO,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC;;;;;IAGzB,YAAY,gBAAsC,qBAAqB,CAAC,SAAS;QAC7E,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,IAAI,CAAC,YAAY,GAAG,IAAI,YAAY,EAAW,CAAC;QAEhD,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QAExB,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;QAEnC,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;KACtB;;;;;;IAEM,YAAY,CAAC,MAAc,EAAE,kBAA0B,KAAK;QAC/D,IAAI,IAAI,CAAC,MAAM,KAAK,MAAM,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;;YAE5C,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,MAAM,CAAC;YACvB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;;YAExB,IAAI,CAAC,KAAK,CAAC,MAAM,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;YAEtD,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;;gBAEd,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;aAC3D;YAED,IAAI,IAAI,CAAC,MAAM,IAAI,eAAe,EAAE;;gBAEhC,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;aAC/C;SACJ;aAAM,IAAI,IAAI,CAAC,MAAM,KAAK,MAAM,IAAI,IAAI,CAAC,UAAU,EAAE;;YAElD,IAAI,CAAC,KAAK,CAAC,MAAM,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;SACzD;;;;;;IAGE,gBAAgB,CAAC,UAAkB;QACtC,IAAI,IAAI,CAAC,UAAU,KAAK,UAAU,EAAE;YAChC,IAAI,CAAC,CAAC,UAAU,EAAE;;gBAEd,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;aAC5B;YAED,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC,UAAU,CAAC;SAClC;;;;;IAGE,eAAe;QAClB,IAAI,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;;;;;;IAI7B,aAAa,CAAC,KAAqB;QACtC,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,EAAE;YAChC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YAC1B,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC;SACvB;;;;;;IAIE,iBAAiB,CAAC,KAAqB;QAC1C,OAAO,IAAI,KAAK,KAAK,IAAI,CAAC,CAAC,IAAI,CAAC,QAAQ;aACnC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,QAAQ;aAClB,IAAI,CAAC,MAAM,IAAI,MAAM,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;;;;;IAIvD,aAAa;QAChB,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;YACnB,CAAC,CAAC,MAAM,GAAG,SAAS,CAAC;SACxB,CAAC,CAAC;QACH,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;;;;;;IAIf,KAAK,CAAC,QAAmB;QAC7B,UAAU,CAAC,MAAM,QAAQ,EAAE,CAAC,CAAC;;CAEpC;;;;;;AC5GD;;;;;IA8CI,YAAoB,SAAmB,EAAS,OAAkB;QAA9C,cAAS,GAAT,SAAS,CAAU;QAAS,YAAO,GAAP,OAAO,CAAW;QAC9D,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QAExB,IAAI,CAAC,aAAa,GAAG,UAAU,CAAC;KACnC;;;;QAnCU,UAAU;;QAEjB,MAAM,OAAO,qBAAG,IAAI,CAAC,OAAO,CAAC,aAAwB,EAAC;QACtD,OAAO,OAAO,CAAC,SAAS,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;;;;;QAKvC,UAAU;QACjB,OAAO,IAAI,CAAC,WAAW,CAAC;;;;;;QAGjB,UAAU,CAAC,KAAa;;QAE/B,IAAI,KAAK,EAAE;YACP,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,aAAa,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;SAC3E;aAAM;YACH,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,aAAa,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;SAC9E;;;;;QASM,gBAAgB;QACvB,OAAO,CAAC,CAAC,IAAI,CAAC,iBAAiB,CAAC;;;;;IAS7B,YAAY;;QAEf,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;;;;YA5C1C,SAAS,SAAC;;gBAEP,QAAQ,EAAE,OAAO;aACpB;;;;YAZwC,SAAS;YAAE,UAAU;;;gCAsCzD,YAAY,SAAC,UAAU,CAAC,MAAM,eAAe,CAAC;;qBAsBtB,SAAQ,aAAa;;;;;;IA8E9C,YAAY,QAAkB,EAAE,OAAkB,EAAE,cAAgC;QAChF,KAAK,CAAC,QAAQ,EAAE,OAAO,EAAE,cAAc,CAAC,CAAC;;QAGzC,IAAI,CAAC,qBAAqB,GAAG,IAAI,oBAAoB,CAAC,KAAK,CAAC,CAAC;QAC7D,IAAI,CAAC,uBAAuB,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;QAEzD,IAAI,CAAC,cAAc,GAAG,YAAY,CAAC;QACnC,IAAI,CAAC,sBAAsB,GAAG,GAAG,CAAC;QAElC,IAAI,CAAC,mBAAmB,GAAG,KAAK,CAAC;QACjC,IAAI,CAAC,qBAAqB,GAAG,UAAU,CAAC;;QAGxC,IAAI,CAAC,sBAAsB,GAAG,SAAQ,CAAC;KAC1C;;;;QAnFU,OAAO;QACd,OAAO,IAAI,CAAC,QAAQ,CAAC;;;;;;QAGd,OAAO,CAAC,KAAqB;QACpC,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;;QAEtB,IAAI,cAAc,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC;QAC1C,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,MAAc;YAChD,IAAI,MAAM,KAAK,cAAc,EAAE;;gBAE3B,IAAI,CAAC,qBAAqB,CAAC,OAAO,EAAE,CAAC;gBACrC,IAAI,CAAC,qBAAqB,CAAC,OAAO,CAC9B,IAAI,UAAU,CACV,IAAI,CAAC,cAAc,EACnB,IAAI,CAAC,sBAAsB,EAC3B,mBAAmB,CAAC,MAAM,EAC1B,MAAM,IAAI,CAAC,QAAQ,CAAC,WAAW,GAAG,KAAK,CAAC,CAAC,CAAC;aACrD;YAED,IAAI,CAAC,MAAM,EAAE;;gBAET,IAAI,IAAI,CAAC,aAAa,CAAC,MAAM,GAAG,CAAC,EAAE;oBAC/B,IAAI,CAAC,cAAc,EAAE,CAAC;iBACzB;aACJ;YAED,cAAc,GAAG,MAAM,CAAC;SAC3B,CAAC,CAAC;;;;;;QAGI,aAAa,CAAC,KAAgB;QACrC,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC,SAAS;aACvC,MAAM,CAAC,KAAK,CAAC,aAAa,EAAE,SAAS,EAAE,CAAC,CAAe,KACpD,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,CAAC;;;;;;QAQ1B,KAAK,CAAC,KAAoC;QACjD,IAAI,CAAC,mBAAmB,GAAG,KAAK,CAAC;;;;;QAGzB,WAAW;QACnB,OAAO,IAAI,CAAC,mBAAmB,IAAI,IAAI,CAAC,mBAAmB,CAAC;;;;;QAIpD,MAAM;QACd,OAAO,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC;;;;;;IAkChD,OAAO,CAAC,CAA2B;QACtC,IAAI,CAAC,CAAC,CAAC,YAAY,EAAE;YACjB,CAAC,CAAC,YAAY,GAAG,IAAI,CAAC;YAEtB,IAAI,IAAI,CAAC,QAAQ,CAAC,aAAa,KAAK,qBAAqB,CAAC,SAAS,EAAE;;gBACjE,MAAM,MAAM,qBAAG,CAAC,CAAC,MAA2B,EAAC;gBAC7C,IAAI,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE;;oBAE1G,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;iBAC3C;aACJ;SACJ;KACJ;;;;;IAEM,eAAe,CAAC,CAAe;;QAElC,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE;;YAElE,MAAM,MAAM,qBAAG,CAAC,CAAC,MAAiB,EAAC;YACnC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC;gBAC9B,CAAC,OAAO,CAAC,MAAM,EAAE,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,EAAE,EAAE,OAAO,CAAC,IAAI,EAAE,OAAO,CAAC,IAAI,EAAE,OAAO,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC,OAAO,CAAC,EAAE;gBACrH,CAAC,CAAC,cAAc,EAAE,CAAC;aACtB;YAGD,MAAM,CAAC,QAAQ,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;;YAEhD,IAAI,iBAAiB,GAAmB,IAAI,CAAC;YAC7C,IAAI,IAAI,CAAC,aAAa,CAAC,MAAM,IAAI,CAAC,EAAE;gBAChC,MAAM,CAAC,cAAc,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;gBACtD,iBAAiB,GAAG,cAAc,CAAC,iBAAiB,CAAC;aACxD;YAED,QAAQ,CAAC,CAAC,OAAO;;gBAEb,KAAK,OAAO,CAAC,MAAM,EAAE;oBACjB,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;oBAClC,MAAM;iBACT;;gBAED,KAAK,OAAO,CAAC,IAAI,CAAC;;gBAElB,KAAK,OAAO,CAAC,EAAE,EAAE;oBACb,IAAI,CAAC,aAAa,CAAC,GAAG,EAAE,CAAC;oBACzB,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,iBAAiB,CAAC,eAAe,CAAC,QAAQ,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;;oBAEhF,CAAC,CAAC,cAAc,EAAE,CAAC;oBACnB,MAAM;iBACT;;gBAED,KAAK,OAAO,CAAC,KAAK,EAAE;oBAChB,IAAI,QAAQ,IAAI,CAAC,QAAQ,CAAC,gBAAgB,EAAE;wBACxC,QAAQ,CAAC,YAAY,EAAE,CAAC;wBACxB,MAAM;qBACT;iBACJ;;;gBAGD,KAAK,OAAO,CAAC,KAAK,EAAE;oBAChB,IAAI,QAAQ,IAAI,QAAQ,CAAC,gBAAgB,EAAE;wBACvC,QAAQ,CAAC,iBAAiB,CAAC,OAAO,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;wBAEtD,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,QAAQ,CAAC,iBAAiB,CAAC,eAAe,CAAC,QAAQ,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;qBAC5F;oBACD,MAAM;iBACT;;gBAED,KAAK,OAAO,CAAC,IAAI,EAAE;oBACf,IAAI,IAAI,CAAC,aAAa,CAAC,MAAM,IAAI,CAAC,EAAE;wBAChC,IAAI,CAAC,aAAa,CAAC,GAAG,EAAE,CAAC;wBACzB,MAAM,CAAC,cAAc,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;wBAEtD,cAAc,CAAC,iBAAiB,CAAC,OAAO,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;wBAC7D,cAAc,CAAC,UAAU,GAAG,IAAI,CAAC;qBACpC;oBACD,MAAM;iBACT;aACJ;SACJ;;;;;IAGE,cAAc;QACjB,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;QACxB,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;YACjB,CAAC,CAAC,aAAa,GAAG,IAAI,CAAC,qBAAqB,CAAC;YAC7C,CAAC,CAAC,UAAU,GAAG,KAAK,CAAC;SACxB,CAAC,CAAC;QAEH,IAAI,IAAI,CAAC,mBAAmB,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE;;YAEpD,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,UAAU,GAAG,IAAI,CAAC;YACjC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;YAClC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;SACnD;;;;;;;IAIE,eAAe,CAAC,YAAgC,EAAE,OAAe;QACpE,IAAI,YAAY,EAAE;;YAEd,YAAY,CAAC,UAAU,GAAG,KAAK,CAAC;SACnC;;QAED,IAAI,aAAa,GAAG,IAAI,CAAC,MAAM;aAC1B,SAAS,CAAC,CAAC,IAAI,CAAC,KAAK,YAAY,CAAC,CAAC;;QAExC,IAAI,YAAY,CAAqB;QAErC,QAAQ,OAAO;YACX,KAAK,OAAO,CAAC,KAAK,CAAC;YACnB,KAAK,OAAO,CAAC,KAAK,CAAC;YACnB,KAAK,OAAO,CAAC,IAAI;gBACb,aAAa,IAAI,CAAC,CAAC;gBACnB,MAAM;YACV,KAAK,OAAO,CAAC,EAAE;gBACX,IAAI,aAAa,KAAK,CAAC,CAAC,EAAE;;oBAEtB,aAAa,GAAG,CAAC,CAAC;oBAClB,MAAM;iBACT;gBAED,aAAa,IAAI,CAAC,CAAC;gBACnB,MAAM;SACb;;QAGD,YAAY,GAAG,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,IAAI,YAAY,CAAC;QAE1D,IAAI,YAAY,EAAE;;YAEd,YAAY,CAAC,UAAU,GAAG,IAAI,CAAC;;YAG/B,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,CAAC;SACnC;QAED,OAAO,YAAY,CAAC;;;;;;IAGjB,YAAY,CAAC,IAAwB;;QACxC,MAAM,IAAI,GAAW,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC;;QACjD,MAAM,YAAY,GAAc,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,qBAAqB,EAAE,CAAC;;QAEnF,MAAM,QAAQ,GAAG,IAAI,CAAC,qBAAqB,EAAE,CAAC;;QAE9C,IAAI,YAAY,GAAG,CAAC,CAAC;QAErB,IAAI,YAAY,CAAC,MAAM,GAAG,QAAQ,CAAC,MAAM,EAAE;YACvC,YAAY,GAAG,YAAY,CAAC,MAAM,GAAG,QAAQ,CAAC,MAAM,CAAC;SACxD;QAED,IAAI,YAAY,CAAC,GAAG,GAAG,QAAQ,CAAC,GAAG,EAAE;YACjC,YAAY,GAAG,YAAY,CAAC,GAAG,GAAG,QAAQ,CAAC,GAAG,CAAC;SAClD;QAED,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;;;;;IAGxC,kBAAkB;QACrB,IAAI,CAAC,cAAc,EAAE,CAAC;QACtB,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,SAAS,CAAC,MAAM,IAAI,CAAC,cAAc,EAAE,CAAC,CAAC;;;;;IAG5D,cAAc;;QAElB,IAAI,CAAC,cAAc,EAAE,CAAC;;;;;IAGnB,WAAW;QACd,IAAI,CAAC,sBAAsB,EAAE,CAAC;;;;YA5QrC,SAAS,SAAC;gBACP,QAAQ,EAAE,mBAAmB;aAChC;;;;YA3DwC,SAAS;YAAE,UAAU;YACT,iBAAiB;;;6BA+DjE,KAAK;qCAGL,KAAK;kCAwCL,eAAe,SAAC,mBAAmB,EAAE,EAAC,WAAW,EAAE,IAAI,EAAC;kCAuBxD,KAAK;oCAGL,KAAK;sBAsBL,YAAY,SAAC,OAAO,EAAE,CAAC,QAAQ,CAAC;;;;;;;AC5JrC;;;;IAkFI,YAAoB,QAAmB;QAAnB,aAAQ,GAAR,QAAQ,CAAW;QACnC,IAAI,CAAC,OAAO,GAAG,IAAI,eAAe,EAAE,CAAC;QACrC,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,SAAS,CAAC;YAChC,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE;gBACrB,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;aACvC;SACJ,CAAC,CAAC;KACN;;;;QArEU,QAAQ;;QAEf,OAAO,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,KAAK,IAAI,CAAC,CAAC;;;;;IAGlD,IACW,YAAY;QACnB,OAAO,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC;KACpC;;;;IAED,IACW,QAAQ;;QAEf,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC;KACxD;;;;IAED,IACW,MAAM;QACb,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC;KAC9B;;;;;QAEU,MAAM,CAAC,KAAa;;QAE3B,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC;;;;;IAG9C,IAEW,UAAU;QACjB,OAAO,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC;KAClC;;;;;QAEU,UAAU,CAAC,KAAa;QAC/B,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;;;;;IAMzC,IACW,QAAQ;QACf,IAAI,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE;;YAE1C,OAAO,SAAS,CAAC;SACpB;QACD,IAAI,IAAI,CAAC,SAAS,IAAI,SAAS,EAAE;;YAE7B,OAAO,IAAI,CAAC,SAAS,CAAC;SACzB;;QAED,OAAO,CAAC,CAAC;KACZ;;;;IAED,IACW,SAAS;QAChB,OAAO,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC;KACrC;;;;;QAEU,SAAS,CAAC,KAA2B;QAC5C,IAAI,CAAC,OAAO,CAAC,aAAa,GAAG,KAAK,CAAC;;;;;IAYhC,kBAAkB;QACrB,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;YACb,MAAM,IAAI,KAAK,CAAC,qDAAqD,CAAC,CAAC;SAC1E;QACD,IAAI,CAAC,KAAK,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QAClC,IAAI,CAAC,KAAK,CAAC,aAAa,GAAG,IAAI,CAAC,QAAQ,CAAC;QAEzC,IAAI,CAAC,eAAe,EAAE,CAAC;QACvB,IAAI,CAAC,SAAS,CAAC,OAAO;aACjB,SAAS,CAAC,MAAM,IAAI,CAAC,eAAe,EAAE,CAAC,CAAC;;;;;IAGzC,eAAe;;QAEnB,IAAI,CAAC,QAAQ;aACR,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC;aACnB,OAAO,CAAC,CAAC,IAAI,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC;;;;;;IAI9C,OAAO,CAAC,CAAc;QACzB,IAAI,CAAC,CAAC,CAAC,YAAY,EAAE;YACjB,CAAC,CAAC,YAAY,GAAG,IAAI,CAAC;YAEtB,IAAI,CAAC,OAAO,CAAC,eAAe,EAAE,CAAC;SAClC;KACJ;;;;;IAGM,UAAU,CAAC,CAAa;QAC3B,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC,CAAC,aAAa,CAAC,EAAE;YACxD,IAAI,CAAC,eAAe,EAAE,CAAC;SAC1B;KACJ;;;;;IAGM,UAAU,CAAC,CAA8B;;QAE5C,IAAI,CAAC,CAAC,CAAC,YAAY,EAAE;YAEjB,IAAI,CAAC,CAAC,OAAO,KAAK,OAAO,CAAC,KAAK,EAAE;gBAC7B,CAAC,CAAC,YAAY,GAAG,IAAI,CAAC;gBAEtB,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;aACnC;SACJ;KACJ;;;;IAEO,eAAe;QACnB,IAAI,IAAI,CAAC,OAAO,CAAC,aAAa,KAAK,qBAAqB,CAAC,SAAS;YAC1D,IAAI,CAAC,OAAO,CAAC,aAAa,KAAK,qBAAqB,CAAC,YAAY,EAAE;;YAEvE,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;SACpC;;;;YAxIR,SAAS,SAAC;gBACP,QAAQ,EAAE,eAAe;aAC5B;;;;YARG,UAAU;;;oBAYT,YAAY,SAAC,eAAe;wBAG5B,eAAe,SAAC,WAAW,EAAE,EAAE,WAAW,EAAE,IAAI,EAAE;2BAQlD,MAAM;uBAKN,WAAW,SAAC,cAAc;qBAM1B,KAAK;yBAUL,WAAW,SAAC,gBAAgB,cAC5B,KAAK;wBASL,KAAK,SAAC,UAAU;uBAGhB,WAAW,SAAC,eAAe;wBAc3B,KAAK;sBAqCL,YAAY,SAAC,OAAO,EAAE,CAAC,QAAQ,CAAC;yBAShC,YAAY,SAAC,UAAU,EAAE,CAAC,QAAQ,CAAC;yBAOnC,YAAY,SAAC,UAAU,EAAE,CAAC,QAAQ,CAAC;;;;;;;AC9HxC;;;YAMC,QAAQ,SAAC;gBACN,OAAO,EAAE;oBACL,YAAY;oBACZ,mBAAmB;iBACtB;gBACD,YAAY,EAAE;oBACV,WAAW;oBACX,eAAe;oBACf,mBAAmB;iBACtB;gBACD,OAAO,EAAE;oBACL,WAAW;oBACX,eAAe;oBACf,mBAAmB;iBACtB;aACJ;;;;;;;;;;;;;;;;;;;;AChBD;;;;;IASI,YAAY,QAA6B,EAAE,YAAyC;QAChF,IAAI,CAAC,OAAO,GAAG,QAAQ,CAAC;QACxB,IAAI,CAAC,aAAa,GAAG,YAAY,CAAC;;QAGlC,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,SAAS,CAAC,MAAM,IAAI,CAAC,aAAa,CAAC,OAAO,EAAE,CAAC,CAAC;KAC1E;;;;QAVU,SAAS;QAChB,OAAO,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC;;;;;;IAYhC,SAAS,CAAC,QAA2B;QACxC,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,GAAK,KAAK,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;QAC7D,OAAO,IAAI,CAAC;;;;;;IAIT,MAAM,CAAC,QAA2B;QACrC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,GAAK,KAAK,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;QAC1D,OAAO,IAAI,CAAC;;;;;;IAIT,OAAO,CAAC,MAAQ;QACnB,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;;;;;;IAI5B,IAAI,CAAC,MAAQ;QAChB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;;;;;IAIzB,OAAO;QACV,IAAI,CAAC,aAAa,CAAC,OAAO,EAAE,CAAC;;CAEpC;;;;;;;AC3CD,MAAa,SAAS,GAAG;IACrB,IAAI,oBAAE,MAAmB,CAAA;IACzB,IAAI,oBAAE,MAAmB,CAAA;IACzB,KAAK,oBAAE,OAAoB,CAAA;IAC3B,MAAM,oBAAE,QAAqB,CAAA;IAC7B,KAAK,oBAAE,OAAoB,CAAA;CAC9B,CAAC;;;;AAGF;;;;;IA4BI,YAAY,UAAwB,SAAS,EAAE,aAAqB,IAAI;;QAEpE,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAC7B,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QAEvB,IAAI,CAAC,IAAI,GAAG,SAAS,CAAC,MAAM,CAAC;QAC7B,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;QAC1B,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACrB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QACxB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QAEvB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QAExB,IAAI,CAAC,UAAU,GAAG,OAAO,CAAC;QAC1B,IAAI,CAAC,kBAAkB,GAAG,GAAG,CAAC;KACjC;CACJ;;;;AAGD,yBAAkE,SAAQ,WAAoB;;;;;;IAG1F,YAAY,QAA+B,EAAE,UAAwB,SAAS,EAAE,aAAqB,IAAI;QACrG,KAAK,CAAC,OAAO,EAAE,UAAU,CAAC,CAAC;QAE3B,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;KAC5B;CACJ;;;;AAGD,0BAAmE,SAAQ,WAAoB;;;;;;IAG3F,YAAY,SAAmB,EAAE,UAAwB,SAAS,EAAE,aAAqB,IAAI;QACzF,KAAK,CAAC,OAAO,EAAE,UAAU,CAAC,CAAC;QAE3B,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;KAC9B;CACJ;;;;;;;;;AC5ED;;;;;IACI,YAAY,OAAsB,EAAE,IAAmB;QACnD,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;KACpB;;;;;IAGM,OAAO,CAAC,MAAQ;;;;;IAChB,IAAI,CAAC,MAAQ;CACvB;;;;AAGD,WAAoD,SAAQ,aAAmB;;;;;IAG3E,YAAY,QAA4B,EAAE,OAAS;;;QAG/C,KAAK,CAAC,QAAQ,CAAC,OAAO,EAAE,QAAQ,CAAC,IAAI,CAAC,CAAC;QAEvC,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;KAC1B;CACJ;;;;;;AC1BD;;;;AAKA,mBAA6C,SAAQ,WAAuD;CAAG;;;;;;ACL/G;;;AA0CA;;;;;;IAsHI,YAAoB,SAAmB,EAAU,QAAmB,EAAU,iBAAqC;QAA/F,cAAS,GAAT,SAAS,CAAU;QAAU,aAAQ,GAAR,QAAQ,CAAW;QAAU,sBAAiB,GAAjB,iBAAiB,CAAoB;;QAE/G,MAAM,MAAM,GAAG,IAAI,WAAW,EAAmB,CAAC;QAClD,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;;QAGxB,IAAI,CAAC,SAAS,GAAG,IAAI,YAAY,EAAK,CAAC;QACvC,IAAI,CAAC,MAAM,GAAG,IAAI,YAAY,EAAK,CAAC;QACpC,IAAI,CAAC,SAAS,GAAG,IAAI,YAAY,EAAQ,CAAC;;QAG1C,IAAI,CAAC,QAAQ,GAAG,IAAI,aAAa,CAC7B,GAAG,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EACnD,GAAG,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;;QAGtD,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;QAC3B,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QACxB,IAAI,CAAC,oBAAoB,GAAG,IAAI,oBAAoB,CAAC,KAAK,CAAC,CAAC;KAC/D;;;;QA7HU,OAAO;QACd,OAAO,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC;;;;;QAGtB,IAAI;QACX,OAAO,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC;;;;;IA6B9B,IACW,YAAY;QACnB,OAAO,IAAI,CAAC,aAAa,CAAC;KAC7B;;;;;QAEU,YAAY,CAAC,UAAkB;QACtC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,GAAG,CAAC,qBAAqB,CAAC,UAAU,CAAC,CAAC;;;;;IAYpE,IACW,UAAU;QACjB,OAAO,IAAI,CAAC,WAAW,CAAC;KAC3B;;;;;QAEU,UAAU,CAAC,UAAkB;QACpC,IAAI,CAAC,WAAW,GAAG,UAAU,CAAC;;QAE9B,IAAI,CAAC,iBAAiB,GAAG,UAAU,CAAC;QACpC,IAAI,CAAC,YAAY,EAAE,CAAC;;;;;IAMxB,IACW,UAAU;QACjB,OAAO,IAAI,CAAC,WAAW,CAAC;KAC3B;;;;;QAEU,UAAU,CAAC,QAAgB;QAClC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,GAAG,CAAC,qBAAqB,CAAC,QAAQ,CAAC,CAAC;;;;;QAyBrD,cAAc;;QACrB,MAAM,OAAO,GAAmB,EAAE,CAAC;QACnC,IAAI,IAAI,CAAC,IAAI,EAAE;YACX,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC;SAC7B;QACD,OAAO,OAAO,CAAC;;;;;IAwBZ,QAAQ;;QAEX,IAAI,CAAC,oBAAoB,CAAC,OAAO,CAAC,IAAI,UAAU,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,kBAAkB,EAAE,mBAAmB,CAAC,EAAE,CAAC,CAAC,CAAC;QACpH,UAAU,CAAC,MAAM,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,CAAC;;;;;IAGzC,eAAe;;QAElB,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,UAAU,CAAC;UACjE,QAAQ,CAAC,aAAa,CAAC,MAAM,CAAC,GAAE,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,aAAa;;QAEvE,MAAM,eAAe,qBAAG,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,aAAwB,EAAC;QAC9E,IAAI,eAAe,CAAC,UAAU,EAAE;YAC5B,eAAe,CAAC,UAAU,CAAC,WAAW,CAAC,eAAe,CAAC,CAAC;SAC3D;;QAED,MAAM,OAAO,qBAAG,IAAI,CAAC,aAAa,CAAC,aAAwB,EAAC;QAC5D,UAAU,CAAC,MAAM,IAAI,CAAC,YAAY,EAAE,CAAC,CAAC;;QAGtC,MAAM,SAAS,qBAAG,OAAO,CAAC,aAAa,CAAC,aAAa,CAAuB,EAAC;QAC7E,IAAI,SAAS,EAAE;;YAEX,UAAU,CAAC,MAAM,SAAS,CAAC,KAAK,EAAE,EAAE,EAAE,CAAC,CAAC;;YAExC,UAAU,CAAC,MAAM,SAAS,CAAC,KAAK,EAAE,EAAE,IAAI,CAAC,kBAAkB,CAAC,CAAC;SAChE;;;;;;;IAIE,UAAU,CAAI,MAA2B;QAC5C,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,UAAU,CAAC;QACpC,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC,WAAW,CAAC;QAEtC,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC;QACxB,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC,YAAY,CAAC;QACxC,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC;QAC9B,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,UAAU,CAAC;QACpC,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,UAAU,CAAC;QAEpC,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,UAAU,CAAC;QAEpC,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,UAAU,CAAC;QACpC,IAAI,CAAC,kBAAkB,GAAG,MAAM,CAAC,kBAAkB,CAAC;;;;;;IAIhD,OAAO,CAAC,WAAsB,SAAQ;;QAE1C,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;YAClB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;;YAGvB,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;YAC3B,IAAI,CAAC,oBAAoB,CAAC,OAAO,EAAE,CAAC;YACpC,IAAI,CAAC,oBAAoB,CAAC,OAAO,CAC7B,IAAI,UAAU,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,kBAAkB,EAAE,mBAAmB,CAAC,GAAG,EAAE;;gBAE9E,IAAI,IAAI,CAAC,kBAAkB,EAAE;oBACzB,IAAI,CAAC,kBAAkB,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC;iBACpE;gBACD,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC;gBACtB,QAAQ,EAAE,CAAC;aACd,CAAC,CAAC,CAAC;SACX;;;;;IAIE,KAAK;QACR,IAAI,IAAI,CAAC,UAAU,EAAE;;YAEjB,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;SAC/B;;;;;IAIG,YAAY;;QAGhB,IAAI,CAAC,IAAI,CAAC,iBAAiB,IAAI,IAAI,CAAC,aAAa,EAAE;;YAG/C,MAAM,QAAQ,GAAG,UAAU,CAAC,MAAM,CAAC,gBAAgB,CAAC,QAAQ,CAAC,eAAe,CAAC,CAAC,gBAAgB,CAAC,WAAW,CAAC,CAAC,CAAC;;YAC7G,MAAM,MAAM,GAAG,QAAQ,GAAG,CAAC,CAAC;;YAC5B,MAAM,OAAO,qBAAG,IAAI,CAAC,aAAa,CAAC,aAAwB,EAAC;;YAG5D,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC,WAAW,GAAG,OAAO,CAAC,YAAY,GAAG,MAAM,GAAG,CAAC,CAAC;SAC7E;;;;;;IAGE,OAAO,CAAC,CAAY;;QAEvB,CAAC,CAAC,eAAe,EAAE,CAAC;;;;;;IAKjB,eAAe,CAAC,CAAe;QAClC,IAAI,CAAC,CAAC,OAAO,KAAK,OAAO,CAAC,MAAM,EAAE;;YAE9B,IAAI,CAAC,KAAK,EAAE,CAAC;SAChB;KACJ;;;;IAGM,gBAAgB;QACnB,IAAI,CAAC,YAAY,EAAE,CAAC;KACvB;;;YAxRJ,SAAS,SAAC;gBACP,QAAQ,EAAE,WAAW;gBACrB,QAAQ,EAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;CA4Bb;gBACG,MAAM,EAAE,CAAC,EAAE,CAAC;aACf;;;;YAxCoD,SAAS;YAArB,UAAU;YAGV,mBAAmB;;;yBAuCvD,KAAK;0BAIL,KAAK;wBAgBL,MAAM,SAAC,UAAU;qBAIjB,MAAM,SAAC,QAAQ;wBAIf,MAAM,SAAC,WAAW;4BAGlB,SAAS,SAAC,OAAO;mBAIjB,KAAK;yBAGL,KAAK;2BAOL,KAAK;sBAUL,KAAK;yBAQL,KAAK;yBAeL,KAAK;yBAYL,KAAK;iCAIL,KAAK;8BASL,SAAS,SAAC,iBAAiB,EAAE,EAAE,IAAI,EAAE,gBAAgB,EAAE;8BAoIvD,YAAY,SAAC,gBAAgB,EAAE,CAAC,QAAQ,CAAC;+BAQzC,YAAY,SAAC,eAAe;;;;;;;AC9RjC;;;;IASI,YAAoB,iBAAqC;QAArC,sBAAiB,GAAjB,iBAAiB,CAAoB;KAAI;;;;;;IAEtD,IAAI,CAAU,KAA0B;;QAE3C,MAAM,YAAY,GAAG,IAAI,CAAC,iBAAiB,CAAC,eAAe,CAAiB,QAAQ,CAAC,CAAC;;QAGtF,MAAM,cAAc,GAAG,YAAY,CAAC,QAAQ,CAAC;QAE7C,IAAI,KAAK,YAAY,mBAAmB,EAAE;;YAEtC,IAAI,CAAC,iBAAiB,CAAC,UAAU,CAAC,cAAc,CAAC,eAAe,EAAE,KAAK,CAAC,QAAQ,EAAE;;gBAE9E,SAAS,EAAE,KAAK,CAAC,OAAO;;gBAExB,KAAK,EAAE,YAAY,CAAC,QAAQ,CAAC,QAAQ;aACxC,CAAC,CAAC;SACN;aAAM,IAAI,KAAK,YAAY,oBAAoB,EAAE;;YAG9C,MAAM,mBAAmB,GAAG,IAAI,CAAC,iBAAiB,CAAC,eAAe,CAC9D,KAAK,CAAC,SAAS,EACf;gBACI;oBACI,OAAO,EAAE,KAAK;oBACd,QAAQ,EAAE,IAAI,KAAK,CAAC,cAAc,CAAC,QAAQ,EAAE,KAAK,CAAC,OAAO,CAAC;iBAC9D;aACJ,CACJ,CAAC;;YAGF,IAAI,CAAC,iBAAiB,CAAC,YAAY,CAAC,mBAAmB,EAAE,cAAc,CAAC,eAAe,CAAC,CAAC;;YAGzF,MAAM,cAAc,qBAAG,mBAAmB,CAAC,QAAQ,CAAC,aAAwB,EAAC;;;;YAK7E,OAAO,cAAc,CAAC,aAAa,EAAE,IAAI,cAAc,CAAC,aAAa,IAAI,cAAc,CAAC,UAAU,EAAE;gBAChG,cAAc,CAAC,aAAa,CAAC,WAAW,CAAC,cAAc,CAAC,WAAW,CAAC,cAAc,CAAC,UAAU,CAAC,CAAC,CAAC;aACnG;;YAED,IAAI,CAAC,iBAAiB,CAAC,kBAAkB,CAAC,mBAAmB,CAAC,CAAC;SAClE;;;QAID,IAAI,CAAC,iBAAiB,CAAC,mBAAmB,CAAC,YAAY,CAAC,CAAC;;QAGzD,cAAc,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;;QAGjC,OAAO,IAAI,WAAW,CAAC,KAAK,EAAE,YAAY,CAAC,CAAC;;;;YAxDnD,UAAU;;;;YANF,mBAAmB;;;;;;;ACD5B,oBAc4B,SAAQ,SAAS;;;;;;IAMzC,YAAY,QAAkB,EAAE,OAAkB,EAAE,cAAgC;QAChF,KAAK,CAAC,QAAQ,EAAE,OAAO,EAAE,cAAc,CAAC,CAAC;QACzC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QACvB,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;KAC5B;;;YArBJ,SAAS,SAAC;gBACP,QAAQ,EAAE,kBAAkB;gBAC5B,QAAQ,EAAE,2BAA2B;gBACrC,MAAM,EAAE,CAAC;;;;;;KAMR,CAAC;aACL;;;;YAbgC,SAAS;YAAE,UAAU;YAAE,iBAAiB;;;yBAgBpE,WAAW,SAAC,YAAY,cACxB,WAAW,SAAC,cAAc;;;;;;;ACjB/B;;;YASC,QAAQ,SAAC;gBACN,OAAO,EAAE;oBACL,YAAY;oBACZ,eAAe;oBACf,mBAAmB;oBACnB,gBAAgB;iBACnB;gBACD,YAAY,EAAE;oBACV,QAAQ;oBACR,cAAc;iBACjB;gBACD,OAAO,EAAE;oBACL,QAAQ;iBACX;gBACD,SAAS,EAAE;oBACP,eAAe;iBAClB;gBACD,eAAe,EAAE;oBACb,QAAQ;iBACX;aACJ;;;;;;;;;;;;;;;;;;;;;;AC7BD;IA4GI;QACI,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,OAAO,GAAG,GAAG,CAAC;QACnB,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;QAEnB,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;QAC9B,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QACxB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QAEzB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;KAC1B;;;;IAlFD,IACW,KAAK;QACZ,OAAO,IAAI,CAAC,MAAM,CAAC;KACtB;;;;;QAEU,KAAK,CAAC,KAAY;;QAEzB,MAAM,SAAS,GAAG,CAAC,KAAK,CAAC;QAEzB,IAAI,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC,EAAE;YACzB,OAAO;SACV;QAED,IAAI,CAAC,MAAM,GAAG,SAAS,CAAC;;;;;IAG5B,IACW,OAAO;QACd,OAAO,IAAI,CAAC,QAAQ,CAAC;KACxB;;;;;QAEU,OAAO,CAAC,KAAY;;QAE3B,MAAM,SAAS,GAAG,CAAC,KAAK,CAAC;QAEzB,IAAI,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC,EAAE;YACzB,OAAO;SACV;QAED,IAAI,CAAC,QAAQ,GAAG,SAAS,CAAC;;;;;IAG9B,IACW,SAAS;QAChB,OAAO,IAAI,CAAC,UAAU,CAAC;KAC1B;;;;;QAEU,SAAS,CAAC,KAAY;;QAE7B,MAAM,SAAS,GAAG,CAAC,KAAK,CAAC;QAEzB,IAAI,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC,EAAE;YACzB,OAAO;SACV;QAED,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;;;;;IAG3D,IACW,cAAc;QACrB,OAAO,IAAI,CAAC,gBAAgB,KAAK,CAAC,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,OAAO,KAAK,IAAI,CAAC,WAAW,CAAC,CAAC;KACtF;;;;IAED,IACW,UAAU;;QACjB,MAAM,YAAY,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;;QAErE,MAAM,UAAU,GAAG,CAAC,YAAY,GAAG,IAAI,CAAC,OAAO,IAAI,GAAG,CAAC;QAEvD,OAAO,UAAU,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;KAC7C;;;;;IAED,IACW,UAAU,CAAC,OAAc;QAChC,IAAI,OAAO,CAAC,QAAQ,CAAC,UAAU,CAAC,IAAI,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE;YAC1D,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;SAC7B;QACD,IAAI,OAAO,CAAC,QAAQ,CAAC,SAAS,CAAC,EAAE;YAC7B,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;SAChC;KACJ;;;YAxGJ,SAAS,SAAC;gBACP,QAAQ,EAAE,cAAc;gBACxB,QAAQ,EAAE;;;;;;;CAOb;gBACG,MAAM,EAAE,CAAC;;;;;CAKZ,CAAC;aACD;;;;;yBAEI,WAAW,SAAC,UAAU,cACtB,WAAW,SAAC,gBAAgB;0BAS5B,KAAK;2BAGL,KAAK;oBAGL,KAAK;sBAgBL,KAAK;wBAgBL,KAAK;6BAgBL,WAAW,SAAC,eAAe;yBAK3B,WAAW,SAAC,mBAAmB;yBAS/B,KAAK,SAAC,OAAO;;;;;;;AClGlB;;;YAIC,QAAQ,SAAC;gBACN,OAAO,EAAE;oBACL,YAAY;iBACf;gBACD,YAAY,EAAE;oBACV,WAAW;iBACd;gBACD,OAAO,EAAE;oBACL,WAAW;iBACd;aACJ;;;;;;;;;;;;;;;;;ACdD;IAoDI;4BAF6B,CAAC,CAAC;QAG3B,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,WAAW,GAAG,IAAI,YAAY,EAAU,CAAC;QAE9C,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;QACjB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QAExB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;KAC1B;;;;IA5BD,IACW,OAAO;QACd,OAAO,IAAI,CAAC,QAAQ,CAAC;KACxB;;;;;QAEU,OAAO,CAAC,KAAY;QAC3B,IAAI,CAAC,QAAQ,GAAG,CAAC,KAAK,CAAC;;;;;QAOhB,KAAK;;QAEZ,OAAO,IAAI,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;;;;;;IAe5B,OAAO,CAAC,CAAQ;QACnB,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;YAClB,IAAI,CAAC,KAAK,GAAG,CAAC,GAAG,CAAC,CAAC;YACnB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SACrC;;;;;;IAGE,WAAW,CAAC,CAAQ;QACvB,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;;;;;IAInB,UAAU;QACb,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC,CAAC;KAC1B;;;;;IAEM,UAAU,CAAC,KAAY;QAC1B,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;;;;YA5E1B,SAAS,SAAC;gBACP,QAAQ,EAAE,YAAY;gBACtB,QAAQ,EAAE;;;;;;;;CAQb;gBACG,MAAM,EAAE,CAAC;;;;CAIZ,CAAC;aACD;;;;;yBAEI,WAAW,SAAC,UAAU,cACtB,WAAW,SAAC,cAAc;0BAK1B,MAAM;sBAKN,KAAK;yBASL,WAAW,SAAC,iBAAiB,cAC7B,KAAK;yBA+BL,YAAY,SAAC,UAAU;;4BAeQ,SAAQ,mBAAsC;;;;IAC9E,YAAY,IAAc;QACtB,KAAK,CAAC,IAAI,CAAC,CAAC;KACf;;;YARJ,SAAS,SAAC;gBACP,QAAQ,EAAE,YAAY;gBACtB,IAAI,EAAE,EAAE,eAAe,EAAE,kBAAkB,EAAE;gBAC7C,SAAS,EAAE,CAAC,0BAA0B,CAAC,sBAAsB,CAAC,CAAC;aAClE;;;;YAEoB,SAAS;;;;;;;ACzF9B;;;YAKC,QAAQ,SAAC;gBACN,OAAO,EAAE;oBACL,WAAW;oBACX,YAAY;iBACf;gBACD,YAAY,EAAE;oBACV,SAAS;oBACT,sBAAsB;iBACzB;gBACD,OAAO,EAAE;oBACL,SAAS;oBACT,sBAAsB;iBACzB;aACJ;;;;;;;;;;;;;;;;;AClBD;;;AAiBA;;;;IAoCI,YAAmB,gBAAoC;QAApC,qBAAgB,GAAhB,gBAAgB,CAAoB;QACnD,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;;QAGvB,IAAI,CAAC,SAAS,GAAG,KAAK,IAAI,EAAE,CAAC;KAChC;;;;IAxBD,IACW,QAAQ;QACf,OAAO,IAAI,CAAC,SAAS,CAAC;KACzB;;;;;QAEU,QAAQ,CAAC,QAAmD;QACnE,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;QAC1B,IAAI,IAAI,CAAC,QAAQ,EAAE;YACf,IAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC,IAAI,CAAC,eAAe,EAAE,IAAI,CAAC,QAAQ,EAAE;gBAClE,SAAS,EAAE,IAAI,CAAC,KAAK;gBACrB,KAAK,EAAE,IAAI,CAAC,KAAK;aACpB,CAAC,CAAC;SACN;;;;YApCR,SAAS,SAAC;gBACP,QAAQ,EAAE,mBAAmB;gBAC7B,QAAQ,EAAE;;;CAGb;aACA;;;;YAZ6B,mBAAmB;;;yBAe5C,WAAW,SAAC,cAAc;oBAG1B,KAAK;oBAGL,KAAK;wBAIL,KAAK;uBAKL,KAAK;8BAgBL,SAAS,SAAC,iBAAiB,EAAE,EAAE,IAAI,EAAE,gBAAgB,EAAE;;;;;;;AClD5D;;;AAKA;;;;IA0EI,YAAY,kBAA0B,KAAK;QACvC,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;QACnB,IAAI,CAAC,aAAa,GAAG,CAAC,EAAE,EAAE,CAAC;;YAEvB,MAAM,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YAExC,IAAI,KAAK,YAAY,MAAM,EAAE;;;gBAGzB,OAAO,EAAE;qBAEJ,MAAM,CAAC,CAAC,IAAI,IAAI,CAAC,MAAM,CAAC,SAAS,CAAY,CAAC,EAAE,IAAI,CAAC,aAAa,CAAC;qBAC/D,QAAQ,EAAE;qBACV,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC;aAC1B;;YAGD,OAAO,KAAK,CAAC;SAChB,CAAC;;QAGF,IAAI,CAAC,eAAe,GAAG,eAAe,CAAC;QACvC,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;QACrB,IAAI,CAAC,KAAK,EAAE,CAAC;KAChB;;;;QAxFU,OAAO;QACd,OAAO,IAAI,CAAC,QAAQ,CAAC;;;;;;QAGd,OAAO,CAAC,OAAW;QAC1B,IAAI,CAAC,QAAQ,GAAG,OAAO,IAAI,EAAE,CAAC;;QAE9B,IAAI,CAAC,cAAc,GAAG,SAAS,CAAC;;QAEhC,IAAI,CAAC,KAAK,EAAE,CAAC;;;;;QAGN,aAAa;QACpB,OAAO,IAAI,CAAC,cAAc,CAAC;;;;;;QAGpB,aAAa,CAAC,QAAmC;QACxD,IAAI,CAAC,cAAc,GAAG,QAAQ,CAAC;;QAE/B,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;QACnB,IAAI,CAAC,KAAK,EAAE,CAAC;;;;;QAGN,aAAa;QACpB,OAAO,CAAC,CAAC,IAAI,CAAC,aAAa,IAAI,IAAI,CAAC,aAAa,CAAC,MAAM,KAAK,CAAC,CAAC;;;;;QAGxD,YAAY;QACnB,OAAO,IAAI,CAAC,aAAa,CAAC;;;;;;QAGnB,YAAY,CAAC,KAAwB;QAC5C,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;;QAE3B,IAAI,CAAC,KAAK,EAAE,CAAC;;;;;QAQN,OAAO;QACd,OAAO,IAAI,CAAC,QAAQ,CAAC;;;;;QAad,KAAK;QACZ,OAAO,IAAI,CAAC,MAAM,CAAC;;;;;QAGZ,WAAW;QAClB,OAAO,IAAI,CAAC,YAAY,CAAC;;;;;;;IA8BtB,kBAAkB,CAAC,KAAY,EAAE,WAAgC,SAAQ;QAC5E,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QAEpB,YAAY,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;QACvC,IAAI,CAAC,mBAAmB,GAAG,MAAM,CAAC,UAAU,CACxC;YACI,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;SACrC,EACD,IAAI,CAAC,WAAW,CACnB,CAAC;;;;;;;IAIC,WAAW,CAAC,KAAY,EAAE,WAAgC,SAAQ;QACrE,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QAEpB,IAAI,IAAI,CAAC,MAAM,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,eAAe,EAAE;;;YAG7C,OAAO,QAAQ,EAAE,CAAC;SACrB;QAED,IAAI,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE;;YAEhD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YAEhD,OAAO,QAAQ,EAAE,CAAC;SACrB;QAED,IAAI,IAAI,CAAC,cAAc,EAAE;YACrB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;;YAGzB,MAAM,WAAW,qBAAG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,MAAM,CAAwB,EAAC;YAE5F,WAAW;iBACN,IAAI,CAAC,OAAO;gBACT,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;gBAE1B,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;gBAC5B,OAAO,QAAQ,EAAE,CAAC;aACrB,CAAC;iBACD,KAAK,CAAC,KAAK;;gBAER,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;gBAC1B,OAAO,QAAQ,CAAC,KAAK,CAAC,CAAC;aAC1B,CAAC,CAAC;YAEP,OAAO;SACV;;QAED,MAAM,QAAQ,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;QAChF,IAAI,QAAQ,EAAE;YACV,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;SAChC;QACD,OAAO,QAAQ,EAAE,CAAC;;;;;;IAId,aAAa,CAAC,OAAW;QAC7B,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,OAAO,CAAC;QAC1C,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;;;;;;IAQrB,aAAa,CAAC,OAAe;QAChC,IAAI,OAAO,YAAY,KAAK,EAAE;YAC1B,yBAAO,mBAAC,IAAI,CAAC,cAAkC,GAAE,SAAS,EAAE,OAAO,CAAwB,EAAC;SAC/F;QACD,yBAAO,mBAAC,IAAI,CAAC,cAAgC,GAAE,SAAS,EAAE,OAAO,CAAsB,EAAC;;;;;;IAIpF,OAAO,CAAC,KAAY;QACxB,IAAI;YACA,OAAO,IAAI,MAAM,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;SACjC;QAAC,OAAO,CAAC,EAAE;YACR,OAAO,KAAK,CAAC;SAChB;;;;;;;IAIE,gBAAgB,CAAC,IAAW,EAAE,KAAY;;QAC7C,MAAM,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;QAClC,IAAI,KAAK,YAAY,MAAM,EAAE;YACzB,OAAO,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,KAAK,IAAI,MAAM,KAAK,MAAM,CAAC,CAAC;SAC1D;QACD,OAAO,IAAI,CAAC;;;;;IAIR,KAAK;QACT,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;QACnB,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;QACxB,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;QAC1B,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;;CAE5B;;;;;;AC/MD;;;AAsDA;;;;;;IAsII,YAAoB,QAAmB,EAAE,QAAkB,EAAU,oBAA2C;QAA5F,aAAQ,GAAR,QAAQ,CAAW;QAA8B,yBAAoB,GAApB,oBAAoB,CAAuB;QAC5G,IAAI,CAAC,eAAe,GAAG,IAAI,eAAe,EAAE,CAAC;QAC7C,IAAI,CAAC,aAAa,GAAG,IAAI,aAAa,EAAQ,CAAC;QAE/C,IAAI,CAAC,cAAc,EAAE,CAAC;QACtB,IAAI,CAAC,oBAAoB,CAAC,gBAAgB,CAAC,SAAS,CAAC,MAAM,IAAI,CAAC,cAAc,EAAE,CAAC,CAAC;QAElF,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QACvB,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;QAClB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC;QACjC,IAAI,CAAC,WAAW,GAAG,GAAG,CAAC;QACvB,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;QAEpB,IAAI,CAAC,gBAAgB,GAAG,IAAI,YAAY,EAAK,CAAC;QAE9C,IAAI,CAAC,UAAU,GAAG,OAAO,CAAC;QAC1B,IAAI,CAAC,kBAAkB,GAAG,GAAG,CAAC;KACjC;;;;IAxID,IACW,QAAQ;QACf,OAAO,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC;KACtC;;;;IASD,IACW,WAAW;QAClB,OAAO,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC;KAC7D;;;;;QAEU,WAAW,CAAC,WAAkB;QACrC,IAAI,CAAC,YAAY,GAAG,WAAW,CAAC;;;;;QAOzB,YAAY;QACnB,OAAO,IAAI,CAAC,oBAAoB,CAAC,QAAQ,CAAW,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,eAAe,CAAC,CAAC;;;;;QAGvF,KAAK;QACZ,OAAO,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC;;;;;;QAGzB,KAAK,CAAC,KAAY;QACzB,IAAI,CAAC,cAAc,GAAG,SAAS,CAAC;;QAEhC,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,KAAK,EAAE;;QAEzC,IAAI,CAAC,eAAe,CAAC,YAAY,CAAC,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;;;;;;IAGhF,IACW,OAAO,CAAC,OAAuB;QACtC,IAAI,OAAO,EAAE;YACT,IAAI,CAAC,aAAa,CAAC,OAAO,GAAG,OAAO,CAAC;SACxC;KACJ;;;;;IAED,IACW,aAAa,CAAC,MAA8B;QACnD,IAAI,MAAM,EAAE;YACR,IAAI,CAAC,aAAa,CAAC,aAAa,GAAG,MAAM,CAAC;SAC7C;KACJ;;;;;IAED,IACW,aAAa,CAAC,QAAgC;QACrD,IAAI,CAAC,aAAa,CAAC,aAAa,GAAG,QAAQ,CAAC;KAC/C;;;;;IAED,IACW,YAAY,CAAC,KAAwB;QAC5C,IAAI,CAAC,aAAa,CAAC,YAAY,GAAG,KAAK,CAAC;KAC3C;;;;QAIU,eAAe;QACtB,IAAI,IAAI,CAAC,gBAAgB,EAAE;YACvB,OAAO,IAAI,CAAC,gBAAgB,CAAC;SAChC;aAAM,IAAI,IAAI,CAAC,aAAa,CAAC,aAAa,EAAE;YACzC,OAAO,CAAC,IAAI,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;SACjC;aAAM;YACH,OAAO,CAAC,CAAC,EAAE,CAAC,KAAK,IAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;SAC9E;;;;;;IAGL,IACW,eAAe,CAAC,SAA4C;QACnE,IAAI,CAAC,gBAAgB,GAAG,SAAS,CAAC;KACrC;;;;;IAQD,IACW,WAAW,CAAC,KAAY;QAC/B,IAAI,CAAC,aAAa,CAAC,WAAW,GAAG,KAAK,CAAC;KAC1C;;;;IAED,IACW,WAAW;QAClB,OAAO,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC;KACzC;;;;QAKU,OAAO;QACd,OAAO,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;;;;;IAoCzD,eAAe;QAClB,IAAI,CAAC,KAAK,CAAC,OAAO,GAAG,IAAI,CAAC,eAAe,CAAC;;;;;IAGtC,cAAc;QAClB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,oBAAoB,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC;;;;;;IAIzD,MAAM,CAAC,MAAQ;QAClB,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QACnC,IAAI,CAAC,eAAe,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;QAEzC,IAAI,IAAI,CAAC,oBAAoB,EAAE;YAC3B,IAAI,CAAC,cAAc,GAAG,MAAM,CAAC;YAC7B,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC;SAC1D;aAAM;YACH,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;SACtC;;;;;;IAGE,OAAO,CAAC,CAAY;QACvB,IAAI,CAAC,IAAI,EAAE,CAAC;;;;;IAIT,SAAS;QACZ,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,WAAW,EAAE;YACnC,IAAI,CAAC,IAAI,EAAE,CAAC;SACf;KACJ;;;;IAEO,IAAI;QACR,IAAI,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;;YAErC,IAAI,CAAC,eAAe,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;SAC3C;;;;;;IAIE,UAAU,CAAC,CAAa;QAC3B,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;QACf,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC,CAAC,aAAa,CAAC,EAAE;YACxD,IAAI,CAAC,eAAe,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;SAC5C;KACJ;;;;;IAGM,SAAS,CAAC,MAAQ;QACrB,OAAO,IAAI,CAAC,MAAM,CAAC,SAAS,CAAY,MAAM,EAAE,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,CAAC;;;;YAnPxF,SAAS,SAAC;gBACP,QAAQ,EAAE,YAAY;gBACtB,QAAQ,EAAE;;;;;;;;;;;;;;;;;;;;;;;;CAwBb;gBACG,MAAM,EAAE,CAAC;;;;;;;;;;;CAWZ,CAAC;aACD;;;;YAnDoC,UAAU;YAAe,SAAS;YAIvB,sBAAsB;;;oBAoDjE,SAAS,SAAC,eAAe;yBAKzB,WAAW,SAAC,UAAU,cACtB,WAAW,SAAC,cAAc;uBAG1B,WAAW,SAAC,eAAe;uBAG3B,WAAW,SAAC,cAAc;sBAM1B,KAAK;0BAML,KAAK;sBA6BL,KAAK;4BAOL,KAAK;4BAOL,KAAK;2BAKL,KAAK;8BAiBL,KAAK;6BAKL,KAAK;mCAGL,KAAK;0BAGL,KAAK;0BAKL,WAAW,SAAC,eAAe;yBAK3B,KAAK;+BAWL,MAAM,SAAC,gBAAgB;yBAGvB,KAAK;iCAGL,KAAK;wBAgDL,YAAY,SAAC,SAAS;yBActB,YAAY,SAAC,UAAU,EAAE,CAAC,QAAQ,CAAC;;;;;;;ACvPxC;;;YASC,QAAQ,SAAC;gBACN,OAAO,EAAE;oBACL,YAAY;oBACZ,WAAW;oBACX,iBAAiB;oBACjB,qBAAqB;oBACrB,gBAAgB;iBACnB;gBACD,YAAY,EAAE;oBACV,SAAS;oBACT,eAAe;iBAClB;gBACD,OAAO,EAAE;oBACL,SAAS;iBACZ;aACJ;;;;;;;;;;;;;;;;;ACxBD;;;AAcA,qBAAgC,SAAQ,mBAAmB;;;;;;IA+BvD,YAAY,QAAkB,EAAE,OAAkB,EAAS,cAAgC;;;QAGvF,KAAK,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;QAH8B,mBAAc,GAAd,cAAc,CAAkB;QAKvF,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QACvB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACtB,IAAI,CAAC,UAAU,GAAG,IAAI,YAAY,EAAK,CAAC;;QAGxC,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;QAEvB,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;KAC7B;;;;;QA3BU,SAAS,CAAC,SAA2B;QAC5C,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE;YACpB,IAAI,CAAC,YAAY,GAAG,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SAC7C;aAAM;YACH,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;SAC1B;;;;;;IAyBE,OAAO,CAAC,CAAc;QACzB,CAAC,CAAC,YAAY,GAAG,IAAI,CAAC;QAEtB,UAAU,CAAC,MAAM,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;KACtD;;;YA1DJ,SAAS,SAAC;gBACP,QAAQ,EAAE,mBAAmB;gBAC7B,QAAQ,EAAE;;;CAGb;aACA;;;;YAXc,SAAS;YAAE,UAAU;YAAU,iBAAiB;;;yBAc1D,WAAW,SAAC,YAAY;oBAGxB,KAAK;yBAIL,MAAM;uBAGN,WAAW,SAAC,cAAc;8BAgB1B,SAAS,SAAC,iBAAiB,EAAE,EAAE,IAAI,EAAE,gBAAgB,EAAE;sBAkBvD,YAAY,SAAC,OAAO,EAAE,CAAC,QAAQ,CAAC;;;;;;;AC5DrC;;;;;IAmBI,YAAoB,SAAmB,EAAU,QAAmB;QAAhD,cAAS,GAAT,SAAS,CAAU;QAAU,aAAQ,GAAR,QAAQ,CAAW;QAChE,IAAI,CAAC,cAAc,GAAG,IAAI,YAAY,EAAU,CAAC;QACjD,IAAI,CAAC,cAAc,GAAG,IAAI,YAAY,EAAiB,CAAC;QAExD,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QACvB,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;KAC7B;;;;;QAbU,KAAK,CAAC,KAAY;QACzB,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,aAAa,EAAE,OAAO,EAAE,KAAK,CAAC,CAAC;;;;;;IAerE,WAAW,CAAC,KAAY;QAC3B,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KACnC;;;;;IAGM,SAAS,CAAC,CAAe;QAC5B,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;KAC/B;;;;IAEM,KAAK;;QAER,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;QACpC,UAAU,CAAC,MAAM,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC,CAAC;;;;YAtC7D,SAAS,SAAC;gBACP,QAAQ,EAAE,wBAAwB;aACrC;;;;YAJwC,SAAS;YAAE,UAAU;;;yBAMzD,WAAW,SAAC,cAAc;2BAG1B,WAAW,SAAC,mBAAmB;0BAkB/B,YAAY,SAAC,OAAO,EAAE,CAAC,qBAAqB,CAAC;wBAK7C,YAAY,SAAC,SAAS,EAAE,CAAC,QAAQ,CAAC;;;;;;;AChCvC;;;;AAkBA;;;;;IAiNI,YAAoB,QAAmB,EAAY,oBAA2C;QAA1E,aAAQ,GAAR,QAAQ,CAAW;QAAY,yBAAoB,GAApB,oBAAoB,CAAuB;QAC1F,IAAI,CAAC,eAAe,GAAG,IAAI,eAAe,EAAE,CAAC;;QAE7C,IAAI,CAAC,aAAa,GAAG,IAAI,aAAa,CAAO,IAAI,CAAC,CAAC;QAEnD,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;QAE1B,IAAI,CAAC,cAAc,EAAE,CAAC;QACtB,IAAI,CAAC,oBAAoB,CAAC,gBAAgB,CAAC,SAAS,CAAC,MAAM,IAAI,CAAC,cAAc,EAAE,CAAC,CAAC;QAClF,IAAI,CAAC,sBAAsB,GAAG,EAAE,CAAC;QAEjC,IAAI,CAAC,IAAI,GAAG,UAAU,CAAC;QACvB,IAAI,CAAC,UAAU,GAAG,YAAY,CAAC;QAC/B,IAAI,CAAC,kBAAkB,GAAG,GAAG,CAAC;QAE9B,IAAI,CAAC,SAAS,GAAG,IAAI,YAAY,EAAQ,CAAC;QAE1C,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;KAC1B;;;;IAhND,IACW,QAAQ;QACf,OAAO,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC;KACtC;;;;IAED,IACW,SAAS;QAChB,OAAO,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC;KAC/B;;;;IAOD,IACW,cAAc;QACrB,OAAO,IAAI,CAAC,YAAY,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC;KACtD;;;;IAED,IACW,WAAW;QAClB,OAAO,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC;KACzC;;;;QAQU,WAAW;QAClB,OAAO,IAAI,CAAC,aAAa,IAAI,IAAI,CAAC,eAAe,CAAC;;;;;IAMtD,IACW,QAAQ;QACf,IAAI,IAAI,CAAC,UAAU,EAAE;;YAEjB,OAAO,CAAC,CAAC,CAAC;SACb;QACD,IAAI,IAAI,CAAC,eAAe,CAAC,MAAM,IAAI,IAAI,CAAC,gBAAgB,EAAE;;YAEtD,OAAO,CAAC,CAAC,CAAC;SACb;QACD,IAAI,IAAI,CAAC,SAAS,IAAI,SAAS,EAAE;;YAE7B,OAAO,IAAI,CAAC,SAAS,CAAC;SACzB;QACD,IAAI,IAAI,CAAC,cAAc,EAAE;;YAErB,OAAO,CAAC,CAAC,CAAC;SACb;;QAED,OAAO,CAAC,CAAC;KACZ;;;;IAED,IAEW,UAAU;QACjB,OAAO,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC;KAC1C;;;;;QAEU,UAAU,CAAC,KAAa;QAC/B,IAAI,CAAC,eAAe,CAAC,UAAU,GAAG,CAAC,CAAC,KAAK,CAAC;;;;;;IAG9C,IACW,OAAO,CAAC,OAAW;QAC1B,IAAI,OAAO,EAAE;YACT,IAAI,CAAC,aAAa,CAAC,OAAO,GAAG,OAAO,CAAC;YAErC,IAAI,CAAC,iBAAiB,EAAE,CAAC;SAC5B;KACJ;;;;;IAED,IACW,aAAa,CAAC,MAA8B;QACnD,IAAI,MAAM,EAAE;YACR,IAAI,CAAC,aAAa,CAAC,aAAa,GAAG,MAAM,CAAC;YAE1C,IAAI,CAAC,iBAAiB,EAAE,CAAC;SAC5B;KACJ;;;;;IAED,IACW,aAAa,CAAC,MAAiC;QACtD,IAAI,MAAM,EAAE;YACR,IAAI,CAAC,aAAa,CAAC,aAAa,GAAG,MAAM,CAAC;YAE1C,IAAI,CAAC,iBAAiB,EAAE,CAAC;SAC5B;KACJ;;;;QAEU,eAAe;QACtB,OAAO,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC;;;;;QAI3B,gBAAgB;QACvB,OAAO,IAAI,CAAC,eAAe,CAAC;;;;;QAGrB,KAAK;QACZ,OAAO,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,aAAa,CAAC,KAAK,GAAG,SAAS,CAAC;;;;;;QAGzD,KAAK,CAAC,KAAwB;QACrC,IAAI,KAAK,IAAI,SAAS,EAAE;YACpB,IAAI,CAAC,eAAe,EAAE,CAAC;YACvB,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;;YAExB,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,EAAE,IAAI,IAAI,CAAC,wBAAwB,CAAC,EAAE,CAAC,CAAC,CAAC;YAEvE,IAAI,IAAI,CAAC,WAAW,EAAE;gBAClB,IAAI,CAAC,WAAW,CAAC,KAAK,GAAG,KAAK,CAAC;aAClC;SACJ;;;;;IAGL,IACW,UAAU;QACjB,OAAO,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC;KAC1C;;;;;QAEU,UAAU,CAAC,KAAwB;QAC1C,IAAI,CAAC,aAAa,CAAC,YAAY,GAAG,KAAK,CAAC;;;;;QAGjC,WAAW;;QAElB,OAAO,CAAC,GAAK;;YACT,MAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAY,GAAG,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;YACrE,IAAI,KAAK,IAAI,SAAS,EAAE;gBACpB,OAAO,KAAK,CAAC,QAAQ,EAAE,CAAC;aAC3B;YACD,OAAO,EAAE,CAAC;SACb,CAAC;;;;;QAMK,WAAW;;QAElB,OAAO,CAAC,GAAK,KAAK,IAAI,CAAC,MAAM,CAAC,SAAS,CAAO,GAAG,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;;;;;QAQ7D,mBAAmB;QAC1B,IAAI,IAAI,CAAC,gBAAgB,EAAE;YACvB,OAAO,CAAC,uBAAI,IAAI,CAAC,gBAAgB,GAAE,CAAC,EAAE,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,KAAK,GAAG,SAAS,CAAC,CAAC;SACrF;aAAM,IAAI,IAAI,CAAC,aAAa,CAAC,aAAa,EAAE;YACzC,OAAO,CAAC,IAAI,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;SACnC;aAAM;YACH,OAAO,CAAC,IAAI,IAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,IAAI,EAAE,CAAC,CAAC;SAC1F;;;;;;IAGL,IACW,eAAe,CAAC,SAA2D;QAClF,IAAI,CAAC,gBAAgB,GAAG,SAAS,CAAC;KACrC;;;;QAKU,YAAY;QACnB,OAAO,IAAI,CAAC,oBAAoB,CAAC,QAAQ,CAAW,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,eAAe,CAAC,CAAC;;;;;IAmC3F,kBAAkB;QACrB,IAAI,CAAC,KAAK,CAAC,OAAO,GAAG,IAAI,CAAC,eAAe,CAAC;;QAE1C,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC,gBAAgB,CAAC;QACzC,IAAI,CAAC,KAAK,CAAC,aAAa,GAAG,IAAI,CAAC,QAAQ,CAAC;QAEzC,IAAI,IAAI,CAAC,aAAa,EAAE;YACpB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;YACzB,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;SAChC;QAED,IAAI,IAAI,CAAC,WAAW,EAAE;YAClB,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC,CAAQ,KAAK,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;YACxE,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC,CAAe,KAAK,IAAI,CAAC,mBAAmB,CAAC,CAAC,CAAC,CAAC,CAAC;SAC/F;;QAGD,IAAI,CAAC,0BAA0B,EAAE,CAAC;QAClC,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,SAAS,CAAC,MAAM,IAAI,CAAC,0BAA0B,EAAE,CAAC,CAAC;;;;;IAG7E,cAAc;QAClB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,oBAAoB,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC;;;;;IAItD,iBAAiB,MAAU;;;;IAG3B,eAAe,MAAU;;;;;IAEzB,WAAW,CAAC,KAAY;;QAE9B,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,KAAK,EAAE,MAClC,IAAI,CAAC,eAAe,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC;KAChD;;;;;IAES,UAAU,CAAC,UAAkB,IAAI;;;QAGvC,IAAI,OAAO,EAAE;YACT,IAAI,CAAC,aAAa,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,sBAAsB,CAAC;YACnE,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,EAAE,CAAC,CAAC;SAC7C;aAAM;YACH,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;SACtC;QAED,IAAI,IAAI,CAAC,WAAW,EAAE;YAClB,IAAI,CAAC,WAAW,CAAC,KAAK,GAAG,EAAE,CAAC;SAC/B;KACJ;;;;IAES,0BAA0B;;QAEhC,IAAI,CAAC,sBAAsB,CAAC,OAAO,CAAC,EAAE,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC,CAAC;QAC5D,IAAI,CAAC,sBAAsB,GAAG,EAAE,CAAC;QAEjC,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,EAAE;;YAE5B,UAAU,CAAC,MAAM,IAAI,CAAC,wBAAwB,CAAC,EAAE,CAAC,CAAC,CAAC;YAEpD,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,EAAE,CAAC,UAAU,CAAC,SAAS,CAAC,MAAM,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;SAChG,CAAC,CAAC;;QAGH,IAAI,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,MAAM,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,aAAa,EAAE;YAC9E,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,EAAE,IAAI,EAAE,CAAC,KAAK,CAAC,CAAC;SAC5D;KACJ;;;;;IAES,wBAAwB,CAAC,MAAyB;QACxD,MAAM,CAAC,YAAY,GAAG,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC;QAC5C,MAAM,CAAC,SAAS,GAAG,IAAI,CAAC,mBAAmB,CAAC;QAE5C,IAAI,MAAM,CAAC,YAAY,EAAE;YACrB,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,eAAe,EAAE,MAAM,CAAC,KAAK,CAAC,CAAC;SAC3D;QAED,MAAM,CAAC,cAAc,CAAC,YAAY,EAAE,CAAC;KACxC;;;;;;IAIS,UAAU,CAAC,OAAW,EAAE,KAAO;;QAErC,OAAO,OAAO,CAAC,IAAI,CAAC,CAAC,IAAI,KAAK,KAAK,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;KAC3D;;;;;IAEM,YAAY,CAAC,CAAc;QAC9B,IAAI,CAAC,CAAC,CAAC,YAAY,EAAE;YACjB,CAAC,CAAC,YAAY,GAAG,IAAI,CAAC;YAEtB,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,WAAW,EAAE;gBACnC,IAAI,CAAC,eAAe,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC;gBAEhE,IAAI,CAAC,KAAK,EAAE,CAAC;aAChB;SACJ;;;;;;IAIE,OAAO,CAAC,CAAc;QACzB,IAAI,CAAC,CAAC,CAAC,YAAY,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,WAAW,EAAE;YACtD,CAAC,CAAC,YAAY,GAAG,IAAI,CAAC;;YAGtB,IAAI,CAAC,eAAe,CAAC,YAAY,CAAC,IAAI,CAAC,YAAY,GAAG,IAAI,GAAG,CAAC,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC;;YAG3F,IAAI,CAAC,KAAK,EAAE,CAAC;SAChB;KACJ;;;;IAGM,SAAS;QACZ,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,MAAM,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,WAAW,EAAE;YACnE,IAAI,CAAC,eAAe,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;YAExC,IAAI,CAAC,KAAK,EAAE,CAAC;SAChB;KACJ;;;;;IAGM,UAAU,CAAC,CAAa;QAC3B,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC,CAAC,aAAa,CAAC,EAAE;YACxD,IAAI,CAAC,eAAe,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;YACzC,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC;SACzB;KACJ;;;;;IAGM,UAAU,CAAC,CAAe;QAC7B,IAAI,CAAC,CAAC,OAAO,KAAK,OAAO,CAAC,KAAK,EAAE;;;YAG7B,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;SACvC;KACJ;;;;;IAGM,SAAS,CAAC,CAAe;QAC5B,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,MAAM,IAAI,CAAC,CAAC,OAAO,KAAK,OAAO,CAAC,IAAI,EAAE;;;YAI5D,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;YAEpC,CAAC,CAAC,cAAc,EAAE,CAAC;SACtB;KACJ;;;;;IAEM,mBAAmB,CAAC,KAAmB;;;;IAEpC,KAAK;QACX,IAAI,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,WAAW,EAAE;;;YAGvC,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC;SAC5B;aAAM;YACH,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;SACvC;KACJ;;;;;;IAGS,YAAY,CAAC,UAA2B,EAAE,KAAO;QACvD,UAAU,CAAC,KAAK,EAAE,CAAC;;QAEnB,UAAU,CAAC,kBAAkB,CAAC,IAAI,CAAC,cAAc,EAAE;YAC/C,SAAS,EAAE,KAAK;YAChB,KAAK,EAAE,IAAI,CAAC,KAAK;SACpB,CAAC,CAAC;KACN;;;;IAEM,WAAW;QACd,IAAI,CAAC,sBAAsB,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,WAAW,EAAE,CAAC,CAAC;;;;oBA/Y7D,SAAS,SAAC,eAAe;+BAIzB,eAAe,SAAC,eAAe,EAAE,EAAE,WAAW,EAAE,IAAI,EAAE;yBAOtD,WAAW,SAAC,UAAU,cACtB,WAAW,SAAC,gBAAgB;uBAG5B,WAAW,SAAC,cAAc;wBAK1B,WAAW,SAAC,eAAe;2BAK3B,KAAK;6BAKL,WAAW,SAAC,cAAc;0BAK1B,WAAW,SAAC,eAAe;8BAK3B,SAAS,SAAC,eAAe;4BAGzB,YAAY,SAAC,eAAe;wBAO5B,KAAK,SAAC,UAAU;uBAGhB,WAAW,SAAC,eAAe;yBAsB3B,WAAW,SAAC,gBAAgB,cAC5B,KAAK;sBASL,KAAK;4BASL,KAAK;4BASL,KAAK;yBAmCL,KAAK;yBAoBL,KAAK;6BAQL,KAAK;8BAeL,KAAK;mBAYL,KAAK;yBAGL,KAAK;iCAGL,KAAK;wBAGL,MAAM,SAAC,SAAS;sBA2HhB,YAAY,SAAC,OAAO,EAAE,CAAC,QAAQ,CAAC;wBAahC,YAAY,SAAC,SAAS;yBAStB,YAAY,SAAC,UAAU,EAAE,CAAC,QAAQ,CAAC;yBAQnC,YAAY,SAAC,UAAU,EAAE,CAAC,QAAQ,CAAC;wBASnC,YAAY,SAAC,SAAS,EAAE,CAAC,QAAQ,CAAC;;;;;;;AClYvC;;;AAmBA,yBAAoC,SAAQ,aAAa;;;;;;;IA0CrD,YAAY,QAAkB,EAClB,OAAkB,EAClB,cAAgC,EACzB;QAEf,KAAK,CAAC,QAAQ,EAAE,OAAO,EAAE,cAAc,CAAC,CAAC;QAF1B,qBAAgB,GAAhB,gBAAgB;;QAK/B,IAAI,CAAC,qBAAqB,GAAG,IAAI,oBAAoB,CAAC,KAAK,EAAE,cAAc,CAAC,CAAC;QAC7E,IAAI,CAAC,uBAAuB,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;QAEzD,IAAI,CAAC,YAAY,GAAG,IAAI,YAAY,EAAK,CAAC;QAE1C,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QAEvB,IAAI,CAAC,qBAAqB,CAAC,OAAO,CAAC,IAAI,UAAU,CAAC,OAAO,EAAE,GAAG,EAAE,mBAAmB,CAAC,EAAE,CAAC,CAAC,CAAC;KAC5F;;;;IAnCD,IACW,QAAQ;QACf,OAAO,IAAI,CAAC,SAAS,CAAC;KACzB;;;;;QAEU,QAAQ,CAAC,QAAmD;QACnE,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;QAC1B,IAAI,IAAI,CAAC,QAAQ,EAAE;YACf,IAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC,IAAI,CAAC,eAAe,EAAE,IAAI,CAAC,QAAQ,EAAE;gBAClE,SAAS,EAAE,IAAI,CAAC,KAAK;gBACrB,KAAK,EAAE,IAAI,CAAC,KAAK;aACpB,CAAC,CAAC;SACN;;;;;;IAyBE,cAAc,CAAC,CAAc;QAChC,CAAC,CAAC,YAAY,GAAG,IAAI,CAAC;QAEtB,IAAI,CAAC,qBAAqB,CAAC,OAAO,CAC9B,IAAI,UAAU,CAAC,OAAO,EAAE,GAAG,EAAE,mBAAmB,CAAC,GAAG,EAAE,MAClD,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;;;;;;IAI1C,OAAO,CAAC,CAAc;QACzB,CAAC,CAAC,YAAY,GAAG,IAAI,CAAC;KACzB;;;YA/EJ,SAAS,SAAC;gBACP,QAAQ,EAAE,wBAAwB;gBAClC,QAAQ,EAAE;;;;CAIb;aACA;;;;YAhBc,SAAS;YAAE,UAAU;YAAU,iBAAiB;YAGxC,mBAAmB;;;yBAiBrC,WAAW,SAAC,UAAU,cACtB,WAAW,SAAC,aAAa;oBAKzB,KAAK;oBAGL,KAAK;2BAGL,MAAM,SAAC,YAAY;wBAGnB,KAAK;uBAKL,KAAK;8BAgBL,SAAS,SAAC,iBAAiB,EAAE,EAAE,IAAI,EAAE,gBAAgB,EAAE;sBA6BvD,YAAY,SAAC,OAAO,EAAE,CAAC,QAAQ,CAAC;;;;;;;ACvFrC;;;AA2DA,oBAAkC,SAAQ,aAAmB;;;;;IAwGzD,YAAY,OAAkB,EAAE,mBAA0C;QACtE,KAAK,CAAC,OAAO,EAAE,mBAAmB,CAAC,CAAC;QAEpC,IAAI,CAAC,eAAe,GAAG,EAAE,CAAC;QAC1B,IAAI,CAAC,qBAAqB,GAAG,IAAI,YAAY,EAAO,CAAC;QAErD,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;KAC1B;;;;QAxGU,eAAe;QACtB,IAAI,IAAI,CAAC,kBAAkB,EAAE;;YAEzB,OAAO,EAAE,CAAC;SACb;;QAED,MAAM,aAAa,GAAO,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC;QAErD,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;YACjB,OAAO,aAAa,CAAC;SACxB;aAAM;;YAEH,OAAO,aAAa;iBACf,MAAM,CAAC,CAAC,IAAI,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,SAAS,CAAC,CAAC;SAC1E;;;;;QAGM,gBAAgB;QACvB,OAAO,IAAI,CAAC,eAAe,CAAC;;;;;IAKhC,IACW,SAAS;QAChB,OAAO,IAAI,CAAC,UAAU,CAAC;KAC1B;;;;;QAEU,SAAS,CAAC,SAAiB;QAClC,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;;;;;IAKhC,IACW,WAAW;QAClB,OAAO,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,WAAW,CAAC;KACnE;;;;;QAEU,WAAW,CAAC,WAAkB;QACrC,IAAI,CAAC,YAAY,GAAG,WAAW,CAAC;;;;;IASpC,IACW,iBAAiB;QACxB,OAAO,IAAI,CAAC,kBAAkB,CAAC;KAClC;;;;;QAEU,iBAAiB,CAAC,iBAAwB;QACjD,IAAI,CAAC,kBAAkB,GAAG,iBAAiB,CAAC;;;;;IAGhD,IACW,oBAAoB;QAC3B,OAAO,IAAI,CAAC,qBAAqB,IAAI,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,WAAW,CAAC;KAC5E;;;;;QAEU,oBAAoB,CAAC,oBAA2B;QACvD,IAAI,CAAC,qBAAqB,GAAG,YAAY,oBAAoB,EAAE,CAAC;;;;;QAGzD,kBAAkB;QACzB,IAAI,IAAI,CAAC,WAAW,IAAI,SAAS,EAAE;;YAE/B,OAAO,KAAK,CAAC;SAChB;QACD,OAAO,IAAI,CAAC,eAAe,CAAC,MAAM,KAAK,IAAI,CAAC,WAAW,CAAC;;;;;QAGjD,kBAAkB;QACzB,OAAO,IAAI,CAAC,oBAAoB,CAAC,WAAW,CACxC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,kBAAkB,EAC1C,CAAC,CAAC,KAAK,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,CAAC;;;;;QAGrC,eAAe;QACtB,IAAI,IAAI,CAAC,eAAe,CAAC,MAAM,GAAI,CAAC,EAAE;YAClC,OAAO,IAAI,CAAC,oBAAoB,CAAC,WAAW,CACxC,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,eAAe,EACjG,CAAC,CAAC,OAAO,EAAE,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,CAAC;SAC5D;aAAM;YACH,OAAO,IAAI,CAAC,oBAAoB,CAAC,WAAW,CACxC,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,eAAe,EACjG,CAAC,CAAC,OAAO,EAAE,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,CAAC;SAChH;;;;;IAgBK,iBAAiB;QACvB,IAAI,CAAC,IAAI,CAAC,eAAe,IAAI,IAAI,CAAC,eAAe,CAAC,MAAM,GAAG,CAAC,EAAE;;YAE1D,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;SACvE;QAED,IAAI,IAAI,CAAC,eAAe,IAAI,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE;;YAE/D,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,eAAe;iBAEtC,GAAG,CAAC,CAAC,uBAAI,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,aAAa,CAAC,OAAO,EAAE,CAAC,CAAC,EAAC,CAAC;iBACzD,MAAM,CAAC,CAAC,IAAI,CAAC,IAAI,SAAS,CAAC,CAAC;YAEjC,IAAI,IAAI,CAAC,eAAe,CAAC,MAAM,KAAK,IAAI,CAAC,eAAe,CAAC,MAAM,EAAE;gBAC7D,IAAI,CAAC,eAAe,GAAG,SAAS,CAAC;aACpC;SACJ;KACJ;;;;;IAES,wBAAwB,CAAC,MAAyB;QACxD,KAAK,CAAC,wBAAwB,CAAC,MAAM,CAAC,CAAC;;QAGvC,MAAM,CAAC,QAAQ,GAAG,CAAC,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC;KAC1F;;;;;IAEM,YAAY,CAAC,MAAQ;QACxB,IAAI,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE;YAC7C,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC;YAC5B,OAAO;SACV;QACD,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAClC,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAEpF,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;;QAGvB,IAAI,CAAC,KAAK,EAAE,CAAC;QAEb,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;YACjB,IAAI,CAAC,0BAA0B,EAAE,CAAC;SACrC;;;;;;IAGE,UAAU,CAAC,MAAU;QACxB,IAAI,MAAM,YAAY,KAAK,EAAE;YACzB,IAAI,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE;;gBAEvC,IAAI,CAAC,eAAe,GAAG,MAAM;qBAExB,GAAG,CAAC,CAAC,uBAAI,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,aAAa,CAAC,OAAO,EAAE,CAAC,CAAC,EAAC,CAAC;qBACzD,MAAM,CAAC,CAAC,IAAI,CAAC,IAAI,SAAS,CAAC,CAAC;aACpC;YACD,IAAI,MAAM,CAAC,MAAM,GAAG,CAAC,IAAI,IAAI,CAAC,eAAe,CAAC,MAAM,KAAK,CAAC,EAAE;gBACxD,IAAI,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,aAAa,CAAC,aAAa,EAAE;;oBAErD,IAAI,CAAC,aAAa;yBACb,aAAa,CAAC,MAAM,CAAC;yBACrB,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC,CAAC;iBACpD;qBAAM;;oBAEH,IAAI,CAAC,eAAe,GAAG,MAAM,CAAC;iBACjC;aACJ;YACD,IAAI,MAAM,CAAC,MAAM,KAAK,CAAC,EAAE;gBACrB,IAAI,CAAC,eAAe,GAAG,EAAE,CAAC;aAC7B;SACJ;aAAM;YACH,IAAI,CAAC,eAAe,GAAG,EAAE,CAAC;SAC7B;;;;;;IAGE,cAAc,CAAC,MAAQ;;QAE1B,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,EAAE,IAAI,EAAE,KAAK,MAAM,CAAC,CAAC;QACxE,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;QAGpF,IAAI,CAAC,KAAK,EAAE,CAAC;QAEb,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;YACjB,IAAI,CAAC,0BAA0B,EAAE,CAAC;SACrC;;;;;;IAGE,mBAAmB,CAAC,KAAmB;QAC1C,IAAI,KAAK,CAAC,OAAO,KAAK,OAAO,CAAC,SAAS,IAAI,IAAI,CAAC,KAAK,KAAK,EAAE,IAAI,IAAI,CAAC,eAAe,CAAC,MAAM,GAAG,CAAC,EAAE;;YAE7F,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,eAAe,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;SAC9E;;;;YAhQR,SAAS,SAAC;gBACP,QAAQ,EAAE,kBAAkB;gBAC5B,QAAQ,EAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CA4Cb;gBACG,MAAM,EAAE,CAAC;;;;CAIZ,CAAC;aACD;;;;YA1DgC,UAAU;YAElC,sBAAsB;;;oCA8D1B,MAAM;wBA0BN,KAAK;0BAWL,KAAK;0BASL,KAAK;gCAML,KAAK;mCASL,KAAK;yBAmCL,WAAW,SAAC,gBAAgB;;;;;AAmHjC,iCAA+C,SAAQ,mBAA8C;;;;IACjG,YAAY,IAAyB;QACjC,KAAK,CAAC,IAAI,CAAC,CAAC;KACf;;;YAXJ,SAAS,SAAC;gBACP,QAAQ,EAAE,kBAAkB;gBAC5B,IAAI,EAAE;oBACF,yBAAyB,EAAE,kBAAkB;oBAC7C,WAAW,EAAE,aAAa;iBAC7B;gBACD,SAAS,EAAE,CAAC,0BAA0B,CAAC,2BAA2B,CAAC,CAAC;aACvE;;;;YAEoB,cAAc;;;;;;;ACpRnC;;;AAqCA,eAA6B,SAAQ,aAAmB;;;;;IAsBpD,YAAY,OAAkB,EAAE,mBAA0C;QACtE,KAAK,CAAC,OAAO,EAAE,mBAAmB,CAAC,CAAC;QAEpC,IAAI,CAAC,oBAAoB,GAAG,IAAI,YAAY,EAAK,CAAC;KACrD;;;;IAbD,IACW,WAAW;QAClB,OAAO,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,WAAW,CAAC;KACpE;;;;;QAEU,WAAW,CAAC,WAAkB;QACrC,IAAI,CAAC,YAAY,GAAG,WAAW,CAAC;;;;;IAS1B,iBAAiB;QACvB,IAAI,CAAC,IAAI,CAAC,cAAc,IAAI,IAAI,CAAC,cAAc,EAAE;;YAE7C,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC;SAC1D;QAED,IAAI,IAAI,CAAC,cAAc,IAAI,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE;;YAE9D,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,aAAa,CAAC,OAAO,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC;YACvF,IAAI,IAAI,CAAC,cAAc,EAAE;gBACrB,IAAI,CAAC,cAAc,GAAG,SAAS,CAAC;gBAChC,IAAI,CAAC,kBAAkB,EAAE,CAAC;aAC7B;SACJ;KACJ;;;;IAES,eAAe;;QAErB,IAAI,CAAC,cAAc,GAAG,SAAS,CAAC;KACnC;;;;;IAEM,YAAY,CAAC,MAAQ;;QAExB,IAAI,CAAC,cAAc,GAAG,MAAM,CAAC;QAC7B,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,CAAC;QAEzD,IAAI,CAAC,eAAe,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;QAEzC,IAAI,CAAC,UAAU,EAAE,CAAC;QAElB,IAAI,CAAC,kBAAkB,EAAE,CAAC;;QAG1B,IAAI,CAAC,KAAK,EAAE,CAAC;;;;;;IAGV,UAAU,CAAC,KAAO;QACrB,IAAI,KAAK,IAAI,SAAS,EAAE;YACpB,IAAI,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE;;gBAEvC,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,aAAa,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;gBAEzE,IAAI,CAAC,kBAAkB,EAAE,CAAC;aAC7B;YACD,IAAI,IAAI,CAAC,cAAc,IAAI,SAAS,EAAE;gBAClC,IAAI,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,aAAa,CAAC,aAAa,EAAE;;oBAErD,IAAI,CAAC,aAAa;yBACb,aAAa,CAAC,KAAK,CAAC;yBACpB,IAAI,CAAC,CAAC;wBACH,IAAI,CAAC,cAAc,GAAG,CAAC,CAAC;wBACxB,IAAI,CAAC,kBAAkB,EAAE,CAAC;qBAC7B,CAAC,CAAC;iBACV;qBAAM;;oBAEH,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;iBAC/B;aACJ;SACJ;aAAM;YACH,IAAI,CAAC,cAAc,GAAG,SAAS,CAAC;YAChC,IAAI,CAAC,kBAAkB,EAAE,CAAC;SAC7B;;;;;;IAGK,wBAAwB,CAAC,MAAyB;QACxD,KAAK,CAAC,wBAAwB,CAAC,MAAM,CAAC,CAAC;;QAGvC,MAAM,CAAC,QAAQ,GAAG,MAAM,CAAC,KAAK,KAAK,IAAI,CAAC,cAAc,CAAC;KAC1D;;;;IAEO,kBAAkB;;QAEtB,IAAI,IAAI,CAAC,gBAAgB,EAAE;YACvB,IAAI,CAAC,0BAA0B,EAAE,CAAC;SACrC;QAED,IAAI,IAAI,CAAC,cAAc,IAAI,SAAS,IAAI,IAAI,CAAC,cAAc,EAAE;YACzD,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,sBAAsB,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC;SACvE;;;;YA1IR,SAAS,SAAC;gBACP,QAAQ,EAAE,YAAY;gBACtB,QAAQ,EAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;CA2Bb;aACA;;;;YApCsE,UAAU;YAExE,sBAAsB;;;qCAwC1B,SAAS,SAAC,uBAAuB,EAAE,EAAE,IAAI,EAAE,gBAAgB,EAAE;mCAG7D,MAAM;0BAKN,KAAK;;;;;AA2GV,4BAA0C,SAAQ,mBAAuC;;;;IACrF,YAAY,IAAoB;QAC5B,KAAK,CAAC,IAAI,CAAC,CAAC;KACf;;;YAXJ,SAAS,SAAC;gBACP,QAAQ,EAAE,YAAY;gBACtB,IAAI,EAAE;oBACF,wBAAwB,EAAE,kBAAkB;oBAC5C,WAAW,EAAE,aAAa;iBAC7B;gBACD,SAAS,EAAE,CAAC,0BAA0B,CAAC,sBAAsB,CAAC,CAAC;aAClE;;;;YAEoB,SAAS;;;;;;;AC9J9B;;;YAYC,QAAQ,SAAC;gBACN,OAAO,EAAE;oBACL,YAAY;oBACZ,WAAW;oBACX,iBAAiB;oBACjB,gBAAgB;oBAChB,qBAAqB;iBACxB;gBACD,YAAY,EAAE;oBACV,SAAS;oBACT,eAAe;oBACf,eAAe;oBACf,sBAAsB;oBACtB,cAAc;oBACd,mBAAmB;oBACnB,2BAA2B;iBAC9B;gBACD,OAAO,EAAE;oBACL,SAAS;oBACT,eAAe;oBACf,eAAe;oBACf,sBAAsB;oBACtB,cAAc;oBACd,2BAA2B;iBAC9B;aACJ;;;;;;;;;;;;;;;;;ACrCD;AAIA,MAAa,iBAAiB,GAAG;IAC7B,OAAO,oBAAE,SAA8B,CAAA;IACvC,IAAI,oBAAE,MAA2B,CAAA;IACjC,SAAS,oBAAE,YAAiC,CAAA;IAC5C,OAAO,oBAAE,SAA8B,CAAA;IACvC,UAAU,oBAAE,aAAkC,CAAA;IAC9C,QAAQ,oBAAE,WAAgC,CAAA;CAC7C,CAAC;;AAIF,MAAa,gBAAgB,GAAG;IAC5B,IAAI,oBAAE,MAA0B,CAAA;IAChC,KAAK,oBAAE,OAA2B,CAAA;IAClC,GAAG,oBAAE,KAAyB,CAAA;IAC9B,MAAM,oBAAE,QAA4B,CAAA;CACvC,CAAC;AAEF;;;;QAUe,KAAK;QACZ,IAAI,IAAI,CAAC,SAAS,KAAK,gBAAgB,CAAC,IAAI,EAAE;YAC1C,OAAO,IAAI,CAAC,MAAM,CAAC;SACtB;QACD,IAAI,IAAI,CAAC,SAAS,KAAK,gBAAgB,CAAC,KAAK,EAAE;YAC3C,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC;SACvB;QACD,OAAO,CAAC,CAAC;;;;;;QAGF,KAAK,CAAC,KAAY;QACzB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC;;;;;QAGjB,MAAM;QACb,IAAI,IAAI,CAAC,SAAS,KAAK,gBAAgB,CAAC,GAAG,EAAE;YACzC,OAAO,IAAI,CAAC,OAAO,CAAC;SACvB;QACD,IAAI,IAAI,CAAC,SAAS,KAAK,gBAAgB,CAAC,MAAM,EAAE;YAC5C,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC;SACxB;QACD,OAAO,CAAC,CAAC;;;;;;QAGF,MAAM,CAAC,MAAa;QAC3B,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;QACtB,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC;;;;;IAW7B,YAAY,YAAoB,KAAK;QACjC,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;QACzB,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;QAE3B,IAAI,CAAC,eAAe,GAAG,IAAI,YAAY,EAAW,CAAC;QACnD,IAAI,CAAC,WAAW,GAAG,IAAI,YAAY,EAAQ,CAAC;QAC5C,IAAI,CAAC,YAAY,GAAG,IAAI,YAAY,EAAQ,CAAC;QAE7C,IAAI,CAAC,KAAK,GAAG,GAAG,CAAC;QACjB,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;QAEhB,IAAI,CAAC,UAAU,GAAG,iBAAiB,CAAC,OAAO,CAAC;KAC/C;;;;;IAEM,eAAe,CAAC,SAAiB;QACpC,IAAI,IAAI,CAAC,SAAS,KAAK,SAAS,EAAE;YAC9B,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;YAC3B,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;YACxB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;YAE1B,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YAErC,UAAU,CAAC,MAAM,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC,CAAC;YAC7C,YAAY,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;YACvC,IAAI,CAAC,mBAAmB,GAAG,MAAM,CAAC,UAAU,CAAC,MAAM,IAAI,CAAC,WAAW,GAAG,KAAK,EAAE,GAAG,CAAC,CAAC;SACrF;;;;;IAGE,kBAAkB;QACrB,IAAI,CAAC,eAAe,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;;CAE7C;;;;;;ACtGD;;;;;IA6DI,YAAoB,SAAmB,EAAU,QAAmB;QAAhD,cAAS,GAAT,SAAS,CAAU;QAAU,aAAQ,GAAR,QAAQ,CAAW;QAChE,IAAI,CAAC,OAAO,GAAG,IAAI,cAAc,EAAE,CAAC;;QAEpC,IAAI,CAAC,UAAU,GAAG,iBAAiB,CAAC,OAAO,CAAC;QAC5C,IAAI,CAAC,SAAS,GAAG,gBAAgB,CAAC,IAAI,CAAC;QAEvC,UAAU,CAAC,MAAM,IAAI,CAAC,gBAAgB,EAAE,CAAC,CAAC;QAC1C,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC,SAAS,CAAC,MAAM,IAAI,CAAC,gBAAgB,EAAE,CAAC,CAAC;QAEtE,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;KAC1B;;;;IAxDD,IACW,UAAU;QACjB,OAAO,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC;KAClC;;;;;QAEU,UAAU,CAAC,UAA4B;QAC9C,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,IAAI,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC;QAEzE,IAAI,CAAC,OAAO,CAAC,UAAU,GAAG,UAAU,CAAC;QAErC,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,IAAI,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;;;;;IAG5E,IACW,SAAS;QAChB,OAAO,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC;KACjC;;;;;QAEU,SAAS,CAAC,SAA0B;QAC3C,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;QAE7C,IAAI,CAAC,OAAO,CAAC,SAAS,GAAG,SAAS,CAAC;QAEnC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;;;;;IAGhD,IAEW,SAAS;QAChB,OAAO,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC;KACjC;;;;;QAEU,SAAS,CAAC,SAAiB;QAClC,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC,SAAS,CAAC,CAAC;;;;;IAG5C,IACW,eAAe;QACtB,OAAO,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC;KACvC;;;;IAED,IACW,WAAW;QAClB,OAAO,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC;KACnC;;;;IAcO,gBAAgB;QACpB,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,WAAW,CAAC;QAC7D,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,YAAY,CAAC;;;;;;;IAG3D,QAAQ,CAAC,SAAgB,EAAE,QAAgB,IAAI;QACnD,IAAI,KAAK,EAAE;YACP,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,aAAa,EAAE,SAAS,CAAC,CAAC;SACnE;aAAM;YACH,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,aAAa,EAAE,SAAS,CAAC,CAAC;SACtE;;;;;IAGE,IAAI;QACP,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;;;;;IAGhC,KAAK;QACR,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;;;;;IAGjC,MAAM;QACT,IAAI,CAAC,OAAO,CAAC,kBAAkB,EAAE,CAAC;;;;YA5FzC,SAAS,SAAC;gBACP,QAAQ,EAAE,aAAa;gBACvB,QAAQ,EAAE,2BAA2B;aACxC;;;;YAN+C,SAAS;YAAE,UAAU;;;yBAUhE,WAAW,SAAC,UAAU,cACtB,WAAW,SAAC,eAAe,cAC3B,WAAW,SAAC,YAAY;yBAGxB,KAAK;wBAaL,KAAK;wBAaL,WAAW,SAAC,eAAe,cAC3B,KAAK;8BASL,MAAM;0BAKN,WAAW,SAAC,iBAAiB;;;;;;;ACxDlC;;;;;IAgDI,YAAoB,SAAmB,EAAU,QAAmB;QAAhD,cAAS,GAAT,SAAS,CAAU;QAAU,aAAQ,GAAR,QAAQ,CAAW;QAChE,IAAI,CAAC,mBAAmB,GAAG,KAAK,CAAC;QAEjC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;KAC1B;;;;QArCU,OAAO;QACd,OAAO,IAAI,CAAC,QAAQ,CAAC;;;;;;QAGd,OAAO,CAAC,OAAsB;QACrC,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;QAExB,UAAU,CAAC,MAAM,IAAI,CAAC,eAAe,EAAE,CAAC,CAAC;QACzC,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC,SAAS,CAAC,MAAM,IAAI,CAAC,eAAe,EAAE,CAAC,CAAC;;;;;IAM1E,IACW,SAAS;QAChB,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;YACf,OAAO,KAAK,CAAC;SAChB;QACD,OAAO,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC;KACjC;;;;IAED,IACW,QAAQ;QACf,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;YACf,OAAO,KAAK,CAAC;SAChB;QACD,OAAO,IAAI,CAAC,OAAO,CAAC,SAAS,IAAI,IAAI,CAAC,mBAAmB,CAAC;KAC7D;;;;IAWO,eAAe;QACnB,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,aAAa,EAAE,WAAW,CAAC,CAAC;QACrE,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,aAAa,EAAE,mBAAmB,CAAC,CAAC;QAE7E,IAAI,IAAI,CAAC,OAAO,CAAC,SAAS;YACtB,IAAI,CAAC,OAAO,CAAC,UAAU,KAAK,iBAAiB,CAAC,OAAO;YACrD,IAAI,CAAC,OAAO,CAAC,UAAU,KAAK,iBAAiB,CAAC,SAAS,EAAE;;YAEzD,MAAM,SAAS,GAAG,eAAe,IAAI,CAAC,OAAO,CAAC,KAAK,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM,QAAQ,CAAC;YACtF,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,aAAa,EAAE,WAAW,EAAE,SAAS,CAAC,CAAC;YAC7E,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,aAAa,EAAE,mBAAmB,EAAE,SAAS,CAAC,CAAC;SACxF;;;;;;IAIE,OAAO,CAAC,KAAgB;QAC3B,IAAI,IAAI,CAAC,OAAO,CAAC,SAAS,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,aAAa,EAAE;YACvD,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;SACvC;KACJ;;;YAtEJ,SAAS,SAAC;gBACP,QAAQ,EAAE,qBAAqB;gBAC/B,QAAQ,EAAE,2BAA2B;gBACrC,MAAM,EAAE,CAAC;;;;CAIZ,CAAC;aACD;;;;YAXiE,SAAS;YAArB,UAAU;;;kCA0B3D,KAAK;wBAGL,WAAW,SAAC,eAAe;uBAQ3B,WAAW,SAAC,cAAc;yBAQ1B,WAAW,SAAC,cAAc;sBAuB1B,YAAY,SAAC,OAAO,EAAE,CAAC,QAAQ,CAAC;;;;;;;ACpErC;IA0BI;QACI,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;KAC1B;;;;IAEM,kBAAkB;QACrB,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;YACf,MAAM,IAAI,KAAK,CAAC,gEAAgE,CAAC,CAAC;SACrF;QACD,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC;QAEpC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;YACf,MAAM,IAAI,KAAK,CAAC,wEAAwE,CAAC,CAAC;SAC7F;QACD,IAAI,CAAC,OAAO,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;;;;YAlC3C,SAAS,SAAC;gBACP,QAAQ,EAAE,uBAAuB;gBACjC,QAAQ,EAAE,2BAA2B;gBACrC,MAAM,EAAE,CAAC;;;;CAIZ,CAAC;aACD;;;;;yBAII,WAAW,SAAC,gBAAgB;sBAG5B,YAAY,SAAC,UAAU;sBAGvB,YAAY,SAAC,iBAAiB;;;;;;;ACvBnC;;;YAMC,QAAQ,SAAC;gBACN,OAAO,EAAE;oBACL,YAAY;iBACf;gBACD,YAAY,EAAE;oBACV,UAAU;oBACV,mBAAmB;oBACnB,iBAAiB;iBACpB;gBACD,OAAO,EAAE;oBACL,UAAU;oBACV,mBAAmB;oBACnB,iBAAiB;iBACpB;aACJ;;;;;;;;;;;;;;;;;ACjBD;;;;;IAMI,YAAY,MAAmB,EAAE,OAAqB;QAClD,IAAI,CAAC,EAAE,GAAG,MAAM,CAAC,EAAE,CAAC;QACpB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;;QAGvB,IAAI,CAAC,MAAM,CAAC,cAAc;aACrB,SAAS,CAAC,MAAM,IAAI,CAAC,OAAO,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC;KAC/D;;;;QAGU,QAAQ;QACf,OAAO,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC;;;;;;QAGrB,QAAQ,CAAC,MAAc;;QAE9B,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC;;;;;QAI5B,UAAU;QACjB,OAAO,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC;;CAErC;;;;;;ACjCD;IAuEI;QACI,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,cAAc,GAAG,IAAI,YAAY,EAAW,CAAC;QAClD,IAAI,CAAC,sBAAsB,GAAG,IAAI,YAAY,EAAW,CAAC;QAE1D,IAAI,CAAC,UAAU,GAAG,IAAI,YAAY,EAAQ,CAAC;QAC3C,IAAI,CAAC,YAAY,GAAG,IAAI,YAAY,EAAQ,CAAC;QAE7C,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QAExB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;KAC1B;;;;IApDD,IAEW,QAAQ;QACf,OAAO,IAAI,CAAC,SAAS,CAAC;KACzB;;;;;QAEU,QAAQ,CAAC,MAAc;;QAC9B,IAAI,QAAQ,GAAG,MAAM,CAAC;;;;QAItB,UAAU,CAAC;;YAEP,QAAQ,GAAG,CAAC,IAAI,CAAC,UAAU,GAAG,MAAM,GAAG,KAAK,CAAC;YAC7C,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC;;YAG9B,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;SAC9C,CAAC,CAAC;;;;;IAKP,IAEW,UAAU;QACjB,OAAO,IAAI,CAAC,WAAW,CAAC;KAC3B;;;;;QAEU,UAAU,CAAC,QAAgB;;QAElC,IAAI,IAAI,CAAC,WAAW,KAAK,QAAQ,EAAE;YAC/B,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC;;YAG5B,IAAI,IAAI,CAAC,UAAU,EAAE;gBACjB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;aACzB;SACJ;;;;;;IAiBE,cAAc,CAAC,MAAc;;QAEhC,IAAI,CAAC,CAAC,IAAI,CAAC,SAAS,KAAK,MAAM,EAAE;;YAE7B,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC;;YAGxB,IAAI,MAAM,EAAE;gBACR,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;aAC1B;iBAAM;gBACH,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC;aAC5B;SACJ;;QAGD,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;;;;;IAI9B,OAAO;QACV,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;;YAElB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;SACxB;KACJ;;;YA3GJ,SAAS,SAAC;gBACP,QAAQ,EAAE,gBAAgB;aAC7B;;;;;yBAEI,WAAW,SAAC,YAAY;iBAGxB,KAAK,SAAC,cAAc;6BAOpB,MAAM;yBAON,MAAM,SAAC,UAAU;2BAIjB,MAAM,SAAC,YAAY;uBAGnB,WAAW,SAAC,cAAc,cAC1B,KAAK;yBAsBL,WAAW,SAAC,gBAAgB,cAC5B,KAAK;sBAiDL,YAAY,SAAC,OAAO;;;;;;;ACvGzB;IAeI;QACI,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QAEtB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;KAC1B;;;YAjBJ,SAAS,SAAC;gBACP,QAAQ,EAAE,iBAAiB;aAC9B;;;;;yBAEI,WAAW,SAAC,WAAW;iBAGvB,KAAK,SAAC,eAAe;uBAGrB,WAAW,SAAC,cAAc;;;;;;;ACZ/B;IAoCI;QACI,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;QACf,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC;KAC1B;;;;QAjBU,SAAS;QAChB,OAAO,IAAI,CAAC,UAAU,CAAC;;;;;;QAKhB,SAAS,CAAC,GAAO;QACxB,IAAI,CAAC,UAAU,GAAG,GAAG,CAAC;QACtB,GAAG,CAAC,QAAQ,GAAG,IAAI,CAAC;;;;;IAWjB,kBAAkB;;QAErB,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,SAAS,CAAC,MAAM,IAAI,CAAC,yBAAyB,EAAE,CAAC,CAAC;QAC3E,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,SAAS,CAAC,MAAM,IAAI,CAAC,yBAAyB,EAAE,CAAC,CAAC;;QAG5E,IAAI,CAAC,QAAQ,EAAE,CAAC;;;;;IAIZ,yBAAyB;;;QAG7B,IAAI,CAAC,aAAa,EAAE,CAAC;QAErB,IAAI,IAAI,CAAC,aAAa,KAAK,CAAC,EAAE;;YAE1B,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC;;YAGvB,IAAI,CAAC,QAAQ,EAAE,CAAC;SACnB;;;;;IAIG,QAAQ;;QAEZ,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;QAElF,IAAI,CAAC,WAAW;aAEX,MAAM,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,KAAK,EAAE,CAAC,CAAC;aACnD,OAAO,CAAC,EAAE;;YACP,MAAM,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC;YAE9D,IAAI,CAAC,OAAO,EAAE;;gBAEV,MAAM,IAAI,KAAK,CAAC,uDAAuD,CAAC,CAAC;aAC5E;;YAGD,MAAM,GAAG,GAAG,IAAI,GAAG,CAAC,EAAE,EAAE,OAAO,CAAC,CAAC;;YAGjC,GAAG,CAAC,MAAM,CAAC,sBAAsB,CAAC,SAAS,CAAC,MAAM,IAAI,CAAC,qBAAqB,CAAC,GAAG,CAAC,CAAC,CAAC;;YAGnF,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;SACvB,CAAC,CAAC;;QAGP,IAAI,CAAC,WAAW;aACX,OAAO,CAAC,CAAC,EAAE,EAAE,CAAC;;YACX,MAAM,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,KAAK,EAAE,CAAC,CAAC;YACjD,IAAI,GAAG,EAAE;gBACL,GAAG,CAAC,KAAK,GAAG,CAAC,CAAC;aACjB;SACJ,CAAC,CAAC;;QAGP,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC;QAG5C,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;;;YAEjB,IAAI,CAAC,gBAAgB,EAAE,CAAC;SAC3B;aAAM,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,KAAK,IAAI,CAAC,SAAS,CAAC,EAAE;;;;YAGnD,UAAU,CAAC,MAAM,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;SAC7D;QAED,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,KAAK,CAAC,EAAE;;YAExB,MAAM,IAAI,KAAK,CAAC,0BAA0B,CAAC,CAAC;SAC/C;;;;;;IAIG,qBAAqB,CAAC,GAAO;;QAEjC,IAAI,GAAG,CAAC,QAAQ,IAAI,IAAI,CAAC,SAAS,KAAK,GAAG,EAAE;;YAExC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,QAAQ,GAAG,KAAK,CAAC,CAAC;;YAGlE,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC;SACxB;;QAGD,IAAI,CAAC,GAAG,CAAC,QAAQ,IAAI,IAAI,CAAC,SAAS,KAAK,GAAG,EAAE;;YAEzC,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,CAAC;SAChC;;;;;IAIE,gBAAgB;QACnB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;;;;;;IAI3B,kBAAkB,CAAC,GAAO;;QAC7B,IAAI,aAAa,CAAiB;;QAGlC,IAAI,GAAG,CAAC,KAAK,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;;YAE/B,aAAa,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;SACnD;;QAGD,IAAI,CAAC,aAAa,EAAE;YAChB,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,KAAK,GAAG,CAAC,EAAE;;;gBAEjC,aAAa,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;aACxC;iBAAM;;;gBAEH,aAAa,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;aACzD;SACJ;;QAGD,IAAI,aAAa,CAAC,UAAU,EAAE;;YAE1B,OAAO,IAAI,CAAC,kBAAkB,CAAC,aAAa,CAAC,CAAC;SACjD;QAED,IAAI,CAAC,SAAS,GAAG,aAAa,CAAC;;;;YApKtC,SAAS,SAAC;gBACP,QAAQ,EAAE,YAAY;gBACtB,QAAQ,EAAE,2BAA2B;aACxC;;;;;0BAEI,eAAe,SAAC,YAAY,EAAE,EAAC,WAAW,EAAE,IAAI,EAAC;2BAGjD,eAAe,SAAC,aAAa,EAAE,EAAC,WAAW,EAAE,IAAI,EAAC;;;;;;;ACbvD;;;YAMC,QAAQ,SAAC;gBACN,OAAO,EAAE;oBACL,YAAY;iBACf;gBACD,YAAY,EAAE;oBACV,SAAS;oBACT,YAAY;oBACZ,aAAa;iBAChB;gBACD,OAAO,EAAE;oBACL,SAAS;oBACT,YAAY;oBACZ,aAAa;iBAChB;aACJ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpBD;;;YAqCC,QAAQ,SAAC;gBACN,OAAO,EAAE;oBAEL,gBAAgB;oBAChB,mBAAmB;oBAGnB,kBAAkB;oBAClB,iBAAiB;oBACjB,iBAAiB;oBACjB,mBAAmB;oBACnB,eAAe;oBACf,iBAAiB;oBACjB,cAAc;oBACd,cAAc;oBACd,iBAAiB;oBACjB,eAAe;oBACf,eAAe;oBACf,eAAe;oBACf,gBAAgB;oBAChB,aAAa;oBACb,mBAAmB;oBAGnB,qBAAqB;oBAGrB,gBAAgB;iBACnB;aACJ;;;;;;;;;;;;;;;;;;;;"}
