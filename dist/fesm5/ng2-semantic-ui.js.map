{"version":3,"file":"ng2-semantic-ui.js.map","sources":["ng://ng2-semantic-ui/behaviors/localization/locales/en-GB.ts","ng://ng2-semantic-ui/behaviors/localization/services/localization.service.ts","ng://ng2-semantic-ui/behaviors/localization/localization.module.ts","ng://ng2-semantic-ui/modules/transition/classes/transition.ts","ng://ng2-semantic-ui/modules/transition/classes/transition-controller.ts","ng://ng2-semantic-ui/modules/transition/directives/transition.ts","ng://ng2-semantic-ui/modules/transition/transition.module.ts","ng://ng2-semantic-ui/collections/message/components/message.ts","ng://ng2-semantic-ui/collections/message/message.module.ts","ng://ng2-semantic-ui/collections/pagination/components/pagination.ts","ng://ng2-semantic-ui/collections/pagination/pagination.module.ts","ng://ng2-semantic-ui/modules/accordion/components/accordion-panel.ts","ng://ng2-semantic-ui/modules/accordion/services/accordion.service.ts","ng://ng2-semantic-ui/modules/accordion/components/accordion.ts","ng://ng2-semantic-ui/modules/collapse/directives/collapse.ts","ng://ng2-semantic-ui/modules/collapse/collapse.module.ts","ng://ng2-semantic-ui/modules/accordion/accordion.module.ts","ng://ng2-semantic-ui/misc/util/helpers/custom-validator.ts","ng://ng2-semantic-ui/misc/util/helpers/custom-value-accessor.ts","ng://ng2-semantic-ui/misc/util/helpers/util.ts","ng://ng2-semantic-ui/misc/util/helpers/date.ts","ng://ng2-semantic-ui/misc/util/services/component-factory.service.ts","ng://ng2-semantic-ui/misc/util/services/positioning.service.ts","ng://ng2-semantic-ui/misc/util/util.module.ts","ng://ng2-semantic-ui/modules/checkbox/components/checkbox.ts","ng://ng2-semantic-ui/modules/checkbox/components/radio.ts","ng://ng2-semantic-ui/modules/checkbox/directives/radio-manager.ts","ng://ng2-semantic-ui/modules/checkbox/checkbox.module.ts","ng://ng2-semantic-ui/modules/datepicker/services/calendar.service.ts","ng://ng2-semantic-ui/modules/datepicker/directives/calendar-item.ts","ng://ng2-semantic-ui/modules/datepicker/views/calendar-view.ts","ng://ng2-semantic-ui/modules/datepicker/classes/calendar-mappings.ts","ng://ng2-semantic-ui/modules/datepicker/classes/calendar-config.ts","ng://ng2-semantic-ui/modules/datepicker/classes/date-comparer.ts","ng://ng2-semantic-ui/modules/datepicker/helpers/date-fns.ts","ng://ng2-semantic-ui/modules/datepicker/classes/date-parser.ts","ng://ng2-semantic-ui/modules/datepicker/services/calendar-range.service.ts","ng://ng2-semantic-ui/modules/datepicker/components/calendar-view-title.ts","ng://ng2-semantic-ui/modules/datepicker/components/datepicker.ts","ng://ng2-semantic-ui/modules/popup/classes/popup-config.ts","ng://ng2-semantic-ui/modules/popup/components/popup.ts","ng://ng2-semantic-ui/modules/popup/classes/popup-controller.ts","ng://ng2-semantic-ui/modules/popup/classes/popup-component-controller.ts","ng://ng2-semantic-ui/modules/popup/classes/popup-template-controller.ts","ng://ng2-semantic-ui/modules/popup/components/popup-arrow.ts","ng://ng2-semantic-ui/modules/popup/services/popup.service.ts","ng://ng2-semantic-ui/modules/popup/directives/popup.directive.ts","ng://ng2-semantic-ui/modules/popup/popup.module.ts","ng://ng2-semantic-ui/modules/datepicker/directives/datepicker.directive.ts","ng://ng2-semantic-ui/modules/datepicker/directives/input.directive.ts","ng://ng2-semantic-ui/modules/datepicker/views/date-view.ts","ng://ng2-semantic-ui/modules/datepicker/views/hour-view.ts","ng://ng2-semantic-ui/modules/datepicker/views/minute-view.ts","ng://ng2-semantic-ui/modules/datepicker/views/month-view.ts","ng://ng2-semantic-ui/modules/datepicker/views/year-view.ts","ng://ng2-semantic-ui/modules/datepicker/datepicker.module.ts","ng://ng2-semantic-ui/modules/dimmer/components/dimmer.ts","ng://ng2-semantic-ui/modules/dimmer/dimmer.module.ts","ng://ng2-semantic-ui/modules/dropdown/services/dropdown.service.ts","ng://ng2-semantic-ui/modules/dropdown/directives/dropdown-menu.ts","ng://ng2-semantic-ui/modules/dropdown/directives/dropdown.ts","ng://ng2-semantic-ui/modules/dropdown/dropdown.module.ts","ng://ng2-semantic-ui/modules/modal/classes/active-modal.ts","ng://ng2-semantic-ui/modules/modal/classes/modal-config.ts","ng://ng2-semantic-ui/modules/modal/classes/modal-controls.ts","ng://ng2-semantic-ui/modules/modal/classes/modal-template.ts","ng://ng2-semantic-ui/modules/modal/components/modal.ts","ng://ng2-semantic-ui/modules/modal/services/modal.service.ts","ng://ng2-semantic-ui/modules/modal/components/dimmer.ts","ng://ng2-semantic-ui/modules/modal/modal.module.ts","ng://ng2-semantic-ui/modules/progress/components/progress.ts","ng://ng2-semantic-ui/modules/progress/progress.module.ts","ng://ng2-semantic-ui/modules/rating/components/rating.ts","ng://ng2-semantic-ui/modules/rating/rating.module.ts","ng://ng2-semantic-ui/modules/search/components/search-result.ts","ng://ng2-semantic-ui/modules/search/services/search.service.ts","ng://ng2-semantic-ui/modules/search/components/search.ts","ng://ng2-semantic-ui/modules/search/search.module.ts","ng://ng2-semantic-ui/modules/select/components/select-option.ts","ng://ng2-semantic-ui/modules/select/directives/select-search.ts","ng://ng2-semantic-ui/modules/select/classes/select-base.ts","ng://ng2-semantic-ui/modules/select/components/multi-select-label.ts","ng://ng2-semantic-ui/modules/select/components/multi-select.ts","ng://ng2-semantic-ui/modules/select/components/select.ts","ng://ng2-semantic-ui/modules/select/select.module.ts","ng://ng2-semantic-ui/modules/sidebar/services/sidebar.service.ts","ng://ng2-semantic-ui/modules/sidebar/components/sidebar.ts","ng://ng2-semantic-ui/modules/sidebar/components/sidebar-sibling.ts","ng://ng2-semantic-ui/modules/sidebar/components/sidebar-container.ts","ng://ng2-semantic-ui/modules/sidebar/sidebar.module.ts","ng://ng2-semantic-ui/modules/tabs/classes/tab.ts","ng://ng2-semantic-ui/modules/tabs/directives/tab-header.ts","ng://ng2-semantic-ui/modules/tabs/directives/tab-content.ts","ng://ng2-semantic-ui/modules/tabs/components/tabset.ts","ng://ng2-semantic-ui/modules/tabs/tab.module.ts","ng://ng2-semantic-ui/sui.module.ts"],"sourcesContent":["import { ILocaleValues } from \"./interfaces/values\";\n\nconst enGB:ILocaleValues = {\n    datepicker: {\n        months: [\n            \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\n        ],\n        monthsShort: [\n            \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"\n        ],\n        weekdays: [\n            \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"\n        ],\n        weekdaysShort: [\n            \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"\n        ],\n        weekdaysNarrow: [\n            \"S\", \"M\", \"T\", \"W\", \"T\", \"F\", \"S\"\n        ],\n        timesOfDay: [\n            \"a.m.\", \"p.m.\"\n        ],\n        timesOfDayUppercase: [\n            \"AM\", \"PM\"\n        ],\n        timesOfDayLowercase: [\n            \"am\", \"pm\"\n        ],\n        formats: {\n            time: \"h:mm A\",\n            datetime: \"D MMMM YYYY h:mm A\",\n            date: \"D MMMM YYYY\",\n            month: \"MMMM YYYY\",\n            year: \"YYYY\"\n        },\n        firstDayOfWeek: 1\n    },\n    search: {\n        placeholder: \"Search...\",\n        noResults: {\n            header: \"No Results\",\n            message: \"Your search returned no results.\"\n        }\n    },\n    select: {\n        noResultsMessage: \"No results\",\n        single: {\n            placeholder: \"Select one\"\n        },\n        multi: {\n            placeholder: \"Select...\",\n            maxSelectedMessage: \"Max #{max} selections\",\n            selectedMessage: \"#{count} selections\"\n        }\n    }\n};\n\nexport default enGB;\n","import { Injectable, EventEmitter } from \"@angular/core\";\nimport { ILocaleValues, IPartialLocaleValues, RecursivePartial } from \"../locales/interfaces/values\";\nimport enGB from \"../locales/en-GB\";\nimport * as $extend from \"extend\";\n\nfunction deepClone<T>(obj:T):T {\n    return JSON.parse(JSON.stringify(obj));\n}\n\nfunction deepExtend<T, U>(target:T, source:U):T & U {\n    // Rollup...\n    const extend = ($extend as any).default || $extend;\n    return extend(true, target, source);\n}\n\nfunction lang(language:string):string {\n    return language.toLowerCase().replace(\"-\", \"\");\n}\n\ninterface ILocalizationValuesContainer {\n    [name:string]:IPartialLocaleValues;\n}\n\n@Injectable()\nexport class SuiLocalizationService {\n    private _language:string;\n\n    private _fallbackValues:ILocaleValues;\n    private _values:ILocalizationValuesContainer;\n\n    public get language():string {\n        return this._language;\n    }\n\n    public onLanguageUpdate:EventEmitter<void>;\n\n    constructor() {\n        this.onLanguageUpdate = new EventEmitter<void>();\n\n        this._fallbackValues = enGB;\n        this._values = {};\n        this._language = \"en-GB\";\n        this.load(\"en-GB\", enGB);\n    }\n\n    public setLanguage(language:string):void {\n        if (lang(this._language) !== lang(language)) {\n            this._language = language;\n            this.onLanguageUpdate.emit();\n        }\n    }\n\n    public get(language:string = this.language):ILocaleValues {\n        const values = deepClone(this._fallbackValues);\n        if (!this._values[lang(language)]) {\n            throw new Error(`Locale ${language} is not loaded`);\n        }\n        deepExtend(values, this._values[lang(language)]);\n        return deepClone(values);\n    }\n\n    public override<T extends keyof ILocaleValues>(\n        values:ILocaleValues[T],\n        overrides:RecursivePartial<ILocaleValues[T]>\n    ):ILocaleValues[T] {\n        return deepExtend(deepClone(values), overrides);\n    }\n\n    public load(language:string, values:IPartialLocaleValues):void {\n        this._values[lang(language)] = deepClone(values);\n        this.onLanguageUpdate.emit();\n    }\n\n    public patch(language:string, values:IPartialLocaleValues):void {\n        deepExtend(this._values[lang(language)], values);\n    }\n\n    public interpolate(value:string, variables:[string, string][]):string {\n        return variables.reduce((s, [k, v]) => s.replace(new RegExp(`#{${k}}`, \"g\"), v), value);\n    }\n}\n","\nimport { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { SuiLocalizationService } from \"./services/localization.service\";\n\n@NgModule({\n    imports: [CommonModule],\n    providers: [SuiLocalizationService]\n})\nexport class SuiLocalizationModule {}\n","// Possible directions for a transition.\nexport enum TransitionDirection {\n    In,\n    Out,\n    Either,\n    Static\n}\n\nexport class Transition {\n    public readonly type:string;\n\n    public readonly duration:number;\n\n    public direction:TransitionDirection;\n\n    // Converts TransitionDirection to class name.\n    public get directionClass():string {\n        switch (this.direction) {\n            case TransitionDirection.In: return \"in\";\n            case TransitionDirection.Out: return \"out\";\n        }\n\n        return \"\";\n    }\n\n    // Stores the individual classes for the transition, e.g. \"fade out\" -> [\"fade\", \"out\"].\n    public readonly classes:string[];\n\n    public onComplete:() => void;\n\n    constructor(name:string,\n                duration:number = 250,\n                direction:TransitionDirection = TransitionDirection.Either,\n                onComplete:(() => void) = () => {}) {\n\n        this.type = name;\n\n        // We set a minimum duration of 1ms, to give the appearance of an immediate transition\n        // whilst allowing positioning calculations to happen without a visible flicker.\n        this.duration = Math.max(duration, 1);\n\n        this.direction = direction;\n        this.classes = this.type.split(\" \");\n        this.onComplete = onComplete;\n    }\n}\n","import { Renderer2, ElementRef, ChangeDetectorRef } from \"@angular/core\";\nimport { Transition, TransitionDirection } from \"./transition\";\n\nexport class TransitionController {\n    private _renderer:Renderer2;\n\n    private _element:ElementRef;\n\n    private _changeDetector:ChangeDetectorRef;\n\n    // Used to delay animations until we have an element to animate.\n    private get _isReady():boolean {\n        return this._renderer != undefined && this._element != undefined && this._changeDetector != undefined;\n    }\n\n    // Sets the 'display' style when visible.\n    private _display:string;\n\n    // Stores queued transitions.\n    private _queue:Transition[];\n\n    private _isAnimating:boolean;\n\n    public get isAnimating():boolean {\n        return this._isAnimating;\n    }\n\n    // Set when the element is visible, and while it is transitioning out.\n    private _isVisible:boolean;\n\n    public get isVisible():boolean {\n        return this._isVisible;\n    }\n\n    // Set when the element is hidden, and not while it is transitioning.\n    private _isHidden:boolean;\n\n    public get isHidden():boolean {\n        return this._isHidden;\n    }\n\n    // Gets the first transition in the queue.\n    private get _queueFirst():Transition {\n        return this._queue[0];\n    }\n\n    // Gets the last transition in the queue.\n    private get _queueLast():Transition {\n        return this._queue[this._queue.length - 1];\n    }\n\n    // Stores the setTimeout pointer for cancelling the animation callback.\n    private _animationTimeout:number;\n\n    constructor(isInitiallyVisible:boolean = true, display:string = \"block\") {\n        // isInitiallyVisible sets whether the element starts out visible.\n        this._isVisible = isInitiallyVisible;\n        this._isHidden = !this._isVisible;\n\n        this._display = display;\n        this._queue = [];\n\n        this._isAnimating = false;\n    }\n\n    // Sets the renderer to be used for animating.\n    public registerRenderer(renderer:Renderer2):void {\n        this._renderer = renderer;\n        this.performTransition();\n    }\n\n    // Sets the element to perform the animations on.\n    public registerElement(element:ElementRef):void {\n        this._element = element;\n        this.performTransition();\n    }\n\n    // Sets the change detector to detect changes when using ChangeDetectionStrategy.OnPush.\n    public registerChangeDetector(changeDetector:ChangeDetectorRef):void {\n        this._changeDetector = changeDetector;\n        this.performTransition();\n    }\n\n    public animate(transition:Transition):void {\n        // Test if transition is one of the list that doesn't change the visible state.\n        // Should these eventually become classes?\n        const isDirectionless = [\"jiggle\", \"flash\", \"shake\", \"pulse\", \"tada\", \"bounce\"].indexOf(transition.type) !== -1;\n        if (isDirectionless) {\n            transition.direction = TransitionDirection.Static;\n        } else if (transition.direction == undefined || transition.direction === TransitionDirection.Either) {\n            // Set the direction to the opposite of the current visible state automatically if not set, or set to either direction.\n            transition.direction = this._isVisible ? TransitionDirection.Out : TransitionDirection.In;\n            if (this._queueLast) {\n                // If there is an transition in the queue already, set the direction to the opposite of the direction of that transition.\n                if (this._queueLast.direction === TransitionDirection.In) {\n                    transition.direction = TransitionDirection.Out;\n                } else if (this._queueLast.direction === TransitionDirection.Out) {\n                    transition.direction = TransitionDirection.In;\n                }\n            }\n        }\n\n        // Store the transition in the queue before attempting to perform it.\n        this._queue.push(transition);\n\n        this.performTransition();\n    }\n\n    private performTransition():void {\n        if (!this._isReady || this._isAnimating || !this._queueFirst) {\n            // Don't transition until we are ready, or if we are animating, or if there aren't any transitions in the queue.\n            return;\n        }\n\n        this._isAnimating = true;\n\n        const transition = this._queueFirst;\n\n        // Set the Semantic UI classes for transitioning.\n        transition.classes.forEach(c => this._renderer.addClass(this._element, c));\n        this._renderer.addClass(this._element, `animating`);\n        this._renderer.addClass(this._element, transition.directionClass);\n\n        // Set the Semantic UI styles for transitioning.\n        this._renderer.setStyle(this._element, `animationDuration`, `${transition.duration}ms`);\n        this._renderer.setStyle(this._element, `display`, this._display);\n\n        if (transition.direction === TransitionDirection.In) {\n            // Unset hidden if we are transitioning in.\n            this._isHidden = false;\n        }\n\n        // Wait the length of the animation before calling the complete callback.\n        this._animationTimeout = window.setTimeout(() => this.finishTransition(transition), transition.duration);\n    }\n\n    // Called when a transition has completed.\n    private finishTransition(transition:Transition):void {\n        // Unset the Semantic UI classes & styles for transitioning.\n        transition.classes.forEach(c => this._renderer.removeClass(this._element, c));\n        this._renderer.removeClass(this._element, `animating`);\n        this._renderer.removeClass(this._element, transition.directionClass);\n\n        this._renderer.removeStyle(this._element, `animationDuration`);\n        this._renderer.removeStyle(this._element, `display`);\n\n        if (transition.direction === TransitionDirection.In) {\n            // If we have just animated in, we are now visible.\n            this._isVisible = true;\n        } else if (transition.direction === TransitionDirection.Out) {\n            // If we have transitioned out, we should be invisible and hidden.\n            this._isVisible = false;\n            this._isHidden = true;\n        }\n\n        if (transition.onComplete) {\n            // Call the user-defined transition callback.\n            transition.onComplete();\n        }\n\n        // Delete the transition from the queue.\n        this._queue.shift();\n        this._isAnimating = false;\n\n        this._changeDetector.markForCheck();\n\n        // Immediately attempt to perform another transition.\n        this.performTransition();\n    }\n\n    // Stops the current transition, leaves the rest of the queue intact.\n    public stop(transition:Transition = this._queueFirst):void {\n        if (!transition || !this._isAnimating) {\n            return;\n        }\n\n        clearTimeout(this._animationTimeout);\n        this.finishTransition(transition);\n    }\n\n    // Stops the current transition, and empties the queue.\n    public stopAll():void {\n        this.clearQueue();\n        this.stop();\n    }\n\n    // Empties the transition queue but carries on with the current transition.\n    public clearQueue():void {\n        if (this.isAnimating) {\n            this._queue = [this._queueFirst];\n            return;\n        }\n        this._queue = [];\n    }\n}\n","import { Renderer2, ElementRef, Directive, Input, HostBinding, ChangeDetectorRef } from \"@angular/core\";\nimport { TransitionController } from \"../classes/transition-controller\";\n\n@Directive({\n    selector: \"[suiTransition]\",\n    exportAs: \"transition\"\n})\nexport class SuiTransition {\n    // Each transition must have a controller associated that dispatches the transitions.\n    private _controller:TransitionController;\n\n    @Input()\n    public set suiTransition(tC:TransitionController) {\n        // Set the transition controller (e.g. '<div [suiTransition]=\"transitionController\"></div>').\n        this.setTransitionController(tC);\n    }\n\n    @HostBinding(\"class.transition\")\n    public transitionClass:boolean = true;\n\n    @HostBinding(\"class.visible\")\n    public get isVisible():boolean {\n        if (this._controller) {\n            return this._controller.isVisible;\n        }\n        return false;\n    }\n\n    @HostBinding(\"class.hidden\")\n    public get isHidden():boolean {\n        if (this._controller) {\n            return this._controller.isHidden;\n        }\n        return false;\n    }\n\n    constructor(protected _renderer:Renderer2, protected _element:ElementRef, private _changeDetector:ChangeDetectorRef) {}\n\n    // Initialises the controller with the injected renderer and elementRef.\n    public setTransitionController(transitionController:TransitionController):void {\n        this._controller = transitionController;\n        this._controller.registerRenderer(this._renderer);\n        this._controller.registerElement(this._element.nativeElement);\n        this._controller.registerChangeDetector(this._changeDetector);\n    }\n}\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { SuiTransition } from \"./directives/transition\";\n\n@NgModule({\n    imports: [CommonModule],\n    declarations: [\n        SuiTransition\n    ],\n    exports: [\n        SuiTransition\n    ],\n    providers: []\n})\nexport class SuiTransitionModule {}\n","import { Component, Input, Output, EventEmitter } from \"@angular/core\";\nimport { TransitionController, Transition, TransitionDirection } from \"../../../modules/transition/internal\";\n\nexport interface IMessage {\n    dismiss():void;\n}\n\n@Component({\n    selector: \"sui-message\",\n    template: `\n<div class=\"ui message {{ class }}\" *ngIf=\"!isDismissed\" [suiTransition]=\"transitionController\">\n    <i class=\"close icon\" *ngIf=\"isDismissable\" (click)=\"dismiss()\"></i>\n    <ng-content></ng-content>\n</div>\n`,\n    styles: [`\n/* Fix for CSS Bug */\n.ui.icon.visible.message {\n    display: flex !important;\n}\n`]\n})\nexport class SuiMessage implements IMessage {\n    @Input()\n    public isDismissable:boolean;\n\n    @Output(\"dismiss\")\n    public onDismiss:EventEmitter<SuiMessage>;\n\n    public isDismissed:boolean;\n\n    public transitionController:TransitionController;\n\n    @Input()\n    public transition:string;\n\n    @Input()\n    public transitionDuration:number;\n\n    @Input(\"class\")\n    public class:string;\n\n    constructor() {\n        this.isDismissable = true;\n        this.onDismiss = new EventEmitter<SuiMessage>();\n\n        this.isDismissed = false;\n\n        this.transitionController = new TransitionController();\n        this.transition = \"fade\";\n        this.transitionDuration = 300;\n\n        this.class = \"\";\n    }\n\n    public dismiss():void {\n        this.transitionController.animate(new Transition(this.transition, this.transitionDuration, TransitionDirection.Out, () => {\n            this.isDismissed = true;\n            this.onDismiss.emit(this);\n        }));\n    }\n}\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { SuiTransitionModule } from \"../../modules/transition/internal\";\nimport { SuiMessage } from \"./components/message\";\n\n@NgModule({\n    imports: [\n        CommonModule,\n        SuiTransitionModule\n    ],\n    declarations: [\n        SuiMessage\n    ],\n    exports: [\n        SuiMessage\n    ]\n})\nexport class SuiMessageModule {}\n","import { Component, Input, Output, OnChanges, EventEmitter, HostBinding } from \"@angular/core\";\n\n@Component({\n    selector: \"sui-pagination\",\n    template: `\n<a *ngIf=\"hasBoundaryLinks\" class=\"item\"  (click)=\"setPage(1)\" [class.disabled]=\"page===1\">\n    <span><i class=\"angle double left icon\"></i></span>\n</a>\n<a *ngIf=\"hasNavigationLinks\" class=\"item\" (click)=\"setPage(page-1)\" [class.disabled]=\"!hasPrevious()\">\n    <span><i class=\"angle left icon\"></i></span>\n</a>\n<ng-container *ngIf=\"hasEllipses\">\n    <a class=\"item\" (click)=\"setPage(1)\" *ngIf=\"pages[0] !== 1\">\n        <span>1</span>\n    </a>\n    <a class=\"disabled item\" *ngIf=\"pages[0] > 2\">...</a>\n</ng-container>\n<a *ngFor=\"let p of pages\" class=\"item\" [class.active]=\"p===page\" (click)=\"setPage(p)\">\n    {{ p }}\n</a>\n<ng-container *ngIf=\"hasEllipses\">\n    <a class=\"disabled item\" *ngIf=\"pages[pages.length - 1] < pageCount - 1\">...</a>\n    <a class=\"item\" (click)=\"setPage(pageCount)\" *ngIf=\"pages[pages.length - 1] !== pageCount\">\n        <span>{{ pageCount }}</span>\n    </a>\n</ng-container>\n<a *ngIf=\"hasNavigationLinks\" class=\"item\" (click)=\"setPage(page+1)\" [class.disabled]=\"!hasNext()\">\n    <span><i class=\"angle right icon\"></i></span>\n</a>\n<a *ngIf=\"hasBoundaryLinks\" class=\"item\"  (click)=\"setPage(pageCount)\" [class.disabled]=\"page===pageCount\">\n    <span><i class=\"angle double right icon\"></i></span>\n</a>\n`,\n    styles: [`\n:host .item {\n    transition: none;\n}\n`]\n})\nexport class SuiPagination implements OnChanges {\n\n    @HostBinding(\"class.ui\")\n    @HostBinding(\"class.pagination\")\n    @HostBinding(\"class.menu\")\n    public readonly hasClasses:boolean;\n\n    // Public members\n    public pageCount:number;\n\n    @Output()\n    public pageChange:EventEmitter<number>;\n\n    // Private members\n    private _maxSize?:number;\n    private _collectionSize:number;\n    private _page:number;\n    private _pages:number[];\n    private _hasNavigationLinks:boolean;\n\n    @Input()\n    public get maxSize():number|undefined {\n        return this._maxSize;\n    }\n\n    public set maxSize(value:number | undefined) {\n        this._maxSize = (value != undefined) ? Math.max(value, 1) : undefined;\n    }\n\n    @Input()\n    public pageSize:number;\n\n    @Input()\n    public get collectionSize():number {\n        return this._collectionSize;\n    }\n\n    public set collectionSize(value:number) {\n        this._collectionSize = Math.max(value, 0);\n        this.pageCount = Math.max(1, Math.ceil(this._collectionSize / this.pageSize));\n    }\n\n    @Input()\n    public get hasNavigationLinks():boolean {\n        const maxSize = this._maxSize || this.pageCount;\n        return this._hasNavigationLinks || maxSize < this.pageCount;\n    }\n\n    public set hasNavigationLinks(value:boolean) {\n        this._hasNavigationLinks = value;\n    }\n\n    @Input()\n    public hasBoundaryLinks:boolean;\n\n    @Input()\n    public canRotate:boolean;\n\n    @Input()\n    public hasEllipses:boolean;\n\n    @Input()\n    public get page():number {\n        return this._page;\n    }\n\n    public set page(value:number) {\n        this.setPage(value);\n    }\n\n    public get pages():number[] {\n        return this._pages;\n    }\n\n    constructor() {\n        this.hasClasses = true;\n        this.pageChange = new EventEmitter<number>();\n\n        this.pageSize = 10;\n        this._page = 1;\n        this._pages = [];\n        this.pageCount = 1;\n        this.hasNavigationLinks = true;\n        this.hasBoundaryLinks = false;\n        this.canRotate = false;\n        this.hasEllipses = true;\n    }\n\n    // Public methods\n    public hasPrevious():boolean {\n        return this.page > 1;\n    }\n\n    public hasNext():boolean {\n        return this.page < this.pageCount;\n    }\n\n    public setPage(newPage:number):void {\n        const value:number = (Number.isInteger(newPage)) ? Math.min(Math.max(newPage, 1), this.pageCount) : 1;\n        if (value !== this._page) {\n            this._page = value;\n            this.pageChange.emit(this._page);\n        }\n    }\n\n    // Lifecycle hooks\n    public ngOnChanges():void {\n        this.updatePages();\n    }\n\n    // Private methods\n    private updatePages():void {\n        this.pageCount = Math.max(1, Math.ceil(this._collectionSize / this.pageSize));\n\n        const [start, end] = this.applyPagination();\n\n        this._pages = Array<number>(end - start)\n            .fill(start + 1)\n            .map((s, i) => s + i);\n    }\n\n    private applyPagination():[number, number] {\n        const maxSize = (this.maxSize != undefined) ? Math.min(this.maxSize, this.pageCount) : this.pageCount;\n\n        const page = Math.ceil(this.page / maxSize) - 1;\n        let start = 0;\n        let end = this.pageCount;\n\n        if (this.canRotate) {\n            const leftOffset = Math.floor(maxSize / 2);\n            const rightOffset = maxSize % 2 === 0 ? leftOffset - 1 : leftOffset;\n\n            if (this.page <= leftOffset) {\n                end = maxSize;\n            } else if (this.pageCount - this.page < leftOffset) {\n                start = this.pageCount - maxSize;\n            } else {\n                start = this.page - leftOffset - 1;\n                end = this.page + rightOffset;\n            }\n        } else {\n            start = page * maxSize;\n            end = start + maxSize;\n        }\n\n        return [start, Math.min(end, this.pageCount)];\n    }\n}\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\n\nimport { SuiPagination } from \"./components/pagination\";\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [SuiPagination],\n    declarations: [SuiPagination],\n    providers: []\n})\nexport class SuiPaginationModule { }\n","import { Component, Input, Output, EventEmitter, ChangeDetectorRef } from \"@angular/core\";\nimport { SuiAccordionService } from \"../services/accordion.service\";\nimport { TransitionController, Transition } from \"../../transition/internal\";\n\n@Component({\n    selector: \"sui-accordion-panel\",\n    exportAs: \"suiAccordionPanel\",\n    template: `\n<!-- Title -->\n<div class=\"title\" [class.active]=\"isOpen\" (click)=\"toggle()\" >\n    <ng-content select=\"[title]\"></ng-content>\n</div>\n<!-- Content -->\n<div [suiCollapse]=\"!isOpen\" [collapseDuration]=\"transitionDuration\">\n    <div class=\"content\" [class.active]=\"isOpen\" [suiTransition]=\"transitionController\">\n        <ng-content select=\"[content]\"></ng-content>\n    </div>\n</div>\n`,\n    styles: [`\n/* Manual style as Semantic UI relies on > selector */\n.content {\n    padding: .5em 0 1em;\n}\n\n/* Another > selector fix */\n:host:first-child .title {\n    border-top: none;\n}\n`]\n})\nexport class SuiAccordionPanel {\n    private _service:SuiAccordionService;\n\n    public transitionController:TransitionController;\n\n    public set service(service:SuiAccordionService) {\n        this._service = service;\n        this._changeDetector.detectChanges();\n    }\n\n    @Input()\n    public isDisabled:boolean;\n\n    private _isOpen:boolean;\n\n    @Input()\n    public get isOpen():boolean {\n        return this._isOpen;\n    }\n\n    public set isOpen(value:boolean) {\n        // Convert to boolean (fixes false != undefined)\n        const isOpen = !!value;\n\n        if (isOpen !== this.isOpen) {\n            // Only update if the value has changed.\n            this._isOpen = isOpen;\n\n            if (isOpen && this._service) {\n                // If we are opening this panel, we must close the other ones.\n                this._service.closeOtherPanels(this);\n            }\n            this.isOpenChange.emit(this.isOpen);\n\n            // Cancel all current animations, and fade the contents. The direction is automatic.\n            this.transitionController.stopAll();\n            this.transitionController.animate(new Transition(this.transition, this.transitionDuration));\n        }\n    }\n\n    public get transition():string {\n        if (this._service) {\n            return this._service.transition;\n        }\n\n        return \"fade\";\n    }\n\n    public get transitionDuration():number {\n        if (this._service) {\n            // Return the service defined transition duration.\n            return this._service.transitionDuration;\n        }\n        // Revert to instantaneous if the service is not yet loaded.\n        return 0;\n    }\n\n    @Output()\n    public isOpenChange:EventEmitter<boolean>;\n\n    constructor(private _changeDetector:ChangeDetectorRef) {\n        this.transitionController = new TransitionController(false);\n\n        this._isOpen = false;\n        this.isOpenChange = new EventEmitter<boolean>(false);\n    }\n\n    public toggle():void {\n        if (!this.isDisabled) {\n            this.isOpen = !this.isOpen;\n        }\n    }\n}\n","import { SuiAccordionPanel } from \"../components/accordion-panel\";\n\nexport class SuiAccordionService {\n    public closeOthers:boolean;\n\n    public transition:string;\n    public transitionDuration:number;\n\n    public panels:SuiAccordionPanel[];\n\n    constructor() {\n        this.closeOthers = true;\n\n        this.transition = \"fade\";\n        this.transitionDuration = 350;\n\n        this.panels = [];\n    }\n\n    public addPanel(panel:SuiAccordionPanel):void {\n        panel.service = this;\n        this.panels.push(panel);\n    }\n\n    public closeOtherPanels(panel:SuiAccordionPanel):void {\n        if (!this.closeOthers) {\n            return;\n        }\n\n        this.panels.forEach(p => {\n            if (p !== panel) {\n                p.isOpen = false;\n            }\n        });\n    }\n}\n","import { Component, Input, HostBinding, ContentChildren, QueryList, AfterContentInit } from \"@angular/core\";\nimport { SuiAccordionPanel } from \"./accordion-panel\";\nimport { SuiAccordionService } from \"../services/accordion.service\";\n\n@Component({\n    selector: \"sui-accordion\",\n    template: `\n<ng-content></ng-content>\n`,\n    styles: [`\n/* Fix for general styling issues */\n:host {\n    display: block;\n}\n\n/* Fix for styled border issue */\n:host.styled sui-accordion-panel:first-child .title {\n    border-top: none\n}\n`]\n})\nexport class SuiAccordion implements AfterContentInit {\n    @HostBinding(\"class.ui\")\n    @HostBinding(\"class.accordion\")\n    public readonly hasClasses:boolean;\n\n    @Input()\n    public get closeOthers():boolean {\n        return this._service.closeOthers;\n    }\n\n    public set closeOthers(value:boolean) {\n        this._service.closeOthers = value;\n    }\n\n    @Input()\n    public set transition(transition:string) {\n        this._service.transition = transition;\n    }\n\n    @Input()\n    public set transitionDuration(duration:number) {\n        this._service.transitionDuration = duration;\n    }\n\n    protected _service:SuiAccordionService;\n\n    @ContentChildren(SuiAccordionPanel)\n    protected _panels:QueryList<SuiAccordionPanel>;\n\n    constructor() {\n        // Accordion service is unique to each set of panels.\n        this._service = new SuiAccordionService();\n\n        this.hasClasses = true;\n    }\n\n    public ngAfterContentInit():void {\n        this.updatePanels();\n\n        // Reconnect panels after they have updated.\n        this._panels.changes.subscribe(() => this.updatePanels());\n    }\n\n    public updatePanels():void {\n        this._panels.forEach(p => this._service.addPanel(p));\n    }\n}\n","import { Directive, ElementRef, Input, HostBinding, Renderer2 } from \"@angular/core\";\n\n@Directive({\n    selector: \"[suiCollapse]\"\n})\nexport class SuiCollapse {\n    // Set when the collapse is open, and not animating.\n    @HostBinding(\"class.expanded\")\n    public get isExpanded():boolean {\n        return this._isExpanded;\n    }\n\n    private _isExpanded:boolean;\n\n    // Set when the collapse is closed, and not animating.\n    @HostBinding(\"class.collapsed\")\n    public get isCollapsed():boolean {\n        return !this.isExpanded && !this.isCollapsing;\n    }\n\n    // Set when the collapse is animating.\n    @HostBinding(\"class.collapsing\")\n    public get isCollapsing():boolean {\n        return this._isCollapsing;\n    }\n\n    private _isCollapsing:boolean;\n\n    // Flag that is initially true, to make the 1st animation instantaneous.\n    private _pristine:boolean;\n\n    @Input()\n    public get suiCollapse():boolean {\n        return this._isExpanded;\n    }\n\n    // Sets the state of the collapse, `true` is collapsed.\n    public set suiCollapse(value:boolean) {\n        if (value) {\n            this.hide();\n        } else {\n            this.show();\n        }\n    }\n\n    @Input()\n    public collapseDuration:number;\n\n    private get _animationDuration():number {\n        return this._pristine ? 0 : this.collapseDuration;\n    }\n\n    public constructor(private _element:ElementRef, private _renderer:Renderer2) {\n        this._pristine = true;\n\n        // Collapse animation duration is 350ms by default.\n        this.collapseDuration = 350;\n\n        this._isExpanded = false;\n        this._isCollapsing = false;\n    }\n\n    public hide():void {\n        this._isCollapsing = true;\n        this._isExpanded = false;\n\n        // Forcibly hide the overflow so that content is not visible past the boundaries of its container.\n        this._renderer.setStyle(this._element.nativeElement, \"overflow\", \"hidden\");\n\n        // Animate the host element from its scroll height to 0.\n        this.animate(this._element.nativeElement.scrollHeight, 0, false, () => {\n            this._isCollapsing = false;\n        });\n    }\n\n    public show():void {\n        this._isCollapsing = true;\n\n        // Animate the host element from its offset height to its scroll height.\n        this.animate(this._element.nativeElement.offsetHeight, this._element.nativeElement.scrollHeight, true, () => {\n            // Remove the overflow override to enable user styling once again.\n            this._renderer.removeStyle(this._element.nativeElement, \"overflow\");\n\n            this._isCollapsing = false;\n            this._isExpanded = true;\n        });\n    }\n\n    private animate(startHeight:number, endHeight:number, removeOnComplete:boolean = false, callback:() => void = () => {}):void {\n        const heightFrames = [\n            {\n                offset: 0,\n                height: `${startHeight}px`\n            },\n            {\n                offset: 1,\n                height: `${endHeight}px`\n            }\n        ];\n\n        if (removeOnComplete) {\n            heightFrames.push({\n                offset: 1,\n                height: `auto`\n            });\n        }\n\n        // Animate the collapse using the web animations API.\n        // Using directly because Renderer2 doesn't have invokeElementMethod method anymore.\n        this._element.nativeElement.animate(\n            heightFrames,\n            {\n                delay: 0,\n                // Disable animation on 1st collapse / expansion.\n                duration: this._animationDuration,\n                iterations: 1,\n                easing: \"ease\",\n                fill: \"both\"\n            }\n        );\n\n        if (this._pristine) {\n            // Remove pristine flag when first hit.\n            this._pristine = false;\n        }\n\n        setTimeout(() => callback(), this.collapseDuration);\n    }\n}\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { SuiCollapse } from \"./directives/collapse\";\n\n@NgModule({\n    imports: [\n        CommonModule\n    ],\n    declarations: [\n        SuiCollapse\n    ],\n    exports: [\n        SuiCollapse\n    ]\n})\nexport class SuiCollapseModule {}\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { SuiCollapseModule } from \"../collapse/internal\";\nimport { SuiTransitionModule } from \"../transition/internal\";\nimport { SuiAccordion } from \"./components/accordion\";\nimport { SuiAccordionPanel } from \"./components/accordion-panel\";\n\n@NgModule({\n    imports: [\n        CommonModule,\n        SuiCollapseModule,\n        SuiTransitionModule\n    ],\n    declarations: [\n        SuiAccordion,\n        SuiAccordionPanel\n    ],\n    exports: [\n        SuiAccordion,\n        SuiAccordionPanel\n    ],\n    providers: []\n})\nexport class SuiAccordionModule {}\n","import { NG_VALIDATORS, AbstractControl, ValidationErrors, Validator } from \"@angular/forms\";\nimport { forwardRef, InjectionToken, Type } from \"@angular/core\";\n\nexport interface ICustomValidatorHost {\n    validate(c:AbstractControl):ValidationErrors | null;\n}\n\nexport class CustomValidator<T extends ICustomValidatorHost> implements Validator {\n    constructor(private _host:T) {}\n\n    public onValidatorChange = () => {};\n\n    public validate(c:AbstractControl):ValidationErrors | null {\n        return this._host.validate(c);\n    }\n\n    public registerOnValidatorChange(fn:() => void):void {\n        this.onValidatorChange = fn;\n    }\n}\n\nexport interface IValidationProvider {\n    provide:InjectionToken<(Function | Validator)[]>;\n    useExisting:Type<any>;\n    multi:boolean;\n}\n\nexport function customValidatorFactory(type:Function):IValidationProvider {\n    return {\n        provide: NG_VALIDATORS,\n        useExisting: forwardRef(() => type),\n        multi: true\n    };\n}\n","import { NG_VALUE_ACCESSOR, ControlValueAccessor } from \"@angular/forms\";\nimport { forwardRef, InjectionToken, Type } from \"@angular/core\";\n\nexport interface ICustomValueAccessorHost<T> {\n    writeValue(value:T):void;\n}\n\nexport class CustomValueAccessor<U, T extends ICustomValueAccessorHost<U>> implements ControlValueAccessor {\n    constructor(private _host:T) {}\n\n    public onChange = () => {};\n    public onTouched = () => {};\n\n    public writeValue(value:U):void {\n        this._host.writeValue(value);\n    }\n\n    public registerOnChange(fn:() => void):void {\n        this.onChange = fn;\n    }\n\n    public registerOnTouched(fn:() => void):void {\n        this.onTouched = fn;\n    }\n}\n\nexport interface IValueAccessorProvider {\n    provide:InjectionToken<ControlValueAccessor>;\n    useExisting:Type<any>;\n    multi:boolean;\n}\n\nexport function customValueAccessorFactory(type:Function):IValueAccessorProvider {\n    return {\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: forwardRef(() => type),\n        multi: true\n    };\n}\n","// Keyboard keycodes.\nexport enum KeyCode {\n    Left = 37,\n    Up = 38,\n    Right = 39,\n    Down = 40,\n\n    Escape = 27,\n    Enter = 13,\n\n    Space = 32,\n    Backspace = 8\n}\n\ninterface IRecursiveObject { [name:string]:IRecursiveObject; }\n\nexport interface ITemplateRefContext<T> { $implicit:T; }\n\nexport interface IAugmentedElement extends Element {\n    closest(selector:string):IAugmentedElement;\n}\n\nexport class HandledEvent {\n    public eventHandled:boolean;\n}\n\nexport interface IDynamicClasses {\n    [name:string]:true;\n}\n\nexport const Util = {\n    Array: {\n        range(n:number, offset:number = 0):number[] {\n            return Array(n).fill(0).map((z, i) => i + offset);\n        },\n        group<T>(items:T[], groupLength:number):T[][] {\n            const mutable = items.slice(0);\n\n            const groups:T[][] = [];\n            while (mutable.length > 0) {\n                groups.push(mutable.splice(0, groupLength));\n            }\n            return groups;\n        },\n        groupBy<T>(items:T[], field:keyof T):{ [name:string]:T[] } {\n            return items.reduce<{ [name:string]:T[] }>(\n                (groups, i) => {\n                    const fieldValue = i[field].toString();\n                    groups[fieldValue] = groups[fieldValue] || [];\n                    groups[fieldValue].push(i);\n                    return groups;\n                },\n                Object());\n        },\n        flatten<T>(items:T[][]):T[] {\n            return items.reduce((is, i) => is.concat(i), []);\n        }\n    },\n\n    String: {\n        padLeft(str:string, length:number, padding:string):string {\n            let s = str;\n            while (s.length < length) {\n                s = padding + s;\n            }\n            return s;\n        }\n    },\n\n    DOM: {\n        parseBooleanAttribute(attributeValue:boolean):boolean {\n            let value = attributeValue;\n            if (typeof attributeValue === \"string\") {\n                value = true;\n            }\n\n            return value;\n        }\n    },\n\n    Object: {\n        readValue<T, U>(object:T, path?:string):U {\n            if (!path) {\n                return object as any as U;\n            }\n\n            let recursed = object as any as IRecursiveObject;\n\n            for (let i = 0, p = path.split(\".\"), len = p.length; i < len; i++) {\n                recursed = (recursed as any as IRecursiveObject)[p[i]];\n            }\n\n            return recursed as any as U;\n        }\n    },\n\n    Math: {\n        round(r:number, n:number):number {\n            return Math.round(r / n) * n;\n        },\n        roundUp(r:number, n:number):number {\n            return Math.ceil(r / n) * n;\n        },\n        roundDown(r:number, n:number):number {\n            return Math.floor(r / n) * n;\n        },\n        mod(r:number, n:number):number {\n            const rem = r % n;\n            if (rem < 0) {\n                return rem + n;\n            }\n            return rem;\n        }\n    }\n};\n","import { Util } from \"./util\";\n\nexport enum DatePrecision {\n    Decade = 0,\n    Year = 1,\n    Month = 2,\n    Date = 3,\n    Hour = 4,\n    Minute = 5\n}\n\nexport const DateUtil = {\n    startOf(precision:DatePrecision, date:Date, resetAll:boolean = false):Date {\n        switch (precision) {\n            case DatePrecision.Decade:\n                const start = Math.floor(date.getFullYear() / 10) * 10 + 1;\n                date.setFullYear(start);\n                if (!resetAll) {\n                    break;\n                }\n                // falls through\n            case DatePrecision.Year:\n                date.setMonth(0);\n                if (!resetAll) {\n                    break;\n                }\n                // falls through\n            case DatePrecision.Month:\n                date.setDate(1);\n                if (!resetAll) {\n                    break;\n                }\n                // falls through\n            case DatePrecision.Date:\n                date.setHours(0);\n                if (!resetAll) {\n                    break;\n                }\n                // falls through\n            case DatePrecision.Hour:\n                date.setMinutes(0);\n                if (!resetAll) {\n                    break;\n                }\n                // falls through\n            case DatePrecision.Minute:\n                date.setSeconds(0, 0);\n        }\n\n        return date;\n    },\n\n    endOf(precision:DatePrecision, date:Date):Date {\n        switch (precision) {\n            case DatePrecision.Year:\n                date.setMonth(12, 0);\n                // falls through\n            case DatePrecision.Month:\n                date.setMonth(date.getMonth() + 1, 0);\n                // falls through\n            case DatePrecision.Date:\n                date.setHours(23, 59, 59, 999);\n                break;\n            case DatePrecision.Hour:\n                date.setMinutes(59, 59, 999);\n                break;\n            case DatePrecision.Minute:\n                date.setSeconds(59, 999);\n                break;\n        }\n\n        return date;\n    },\n\n    equal(precision:DatePrecision, a:Date, b:Date):boolean {\n        let equal = true;\n        switch (precision) {\n            case DatePrecision.Minute:\n                equal = equal && a.getMinutes() === b.getMinutes();\n                // falls through\n            case DatePrecision.Hour:\n                equal = equal && a.getHours() === b.getHours();\n                // falls through\n            case DatePrecision.Date:\n                equal = equal && a.getDate() === b.getDate();\n                // falls through\n            case DatePrecision.Month:\n                equal = equal && a.getMonth() === b.getMonth();\n                // falls through\n            case DatePrecision.Year:\n                equal = equal && a.getFullYear() === b.getFullYear();\n        }\n        return equal;\n    },\n\n    next(precision:DatePrecision, date:Date):Date {\n        return DateUtil.add(precision, date, 1);\n    },\n\n    add(precision:DatePrecision, date:Date, i:number):Date {\n        const year = date.getFullYear();\n        const month = date.getMonth();\n        const day = date.getDate();\n\n        switch (precision) {\n            case DatePrecision.Decade:\n                date.setFullYear(year + i * 10);\n                if (date.getMonth() !== month) {\n                    date.setDate(0);\n                }\n                break;\n            case DatePrecision.Year:\n                date.setFullYear(year + i);\n                if (date.getMonth() !== month) {\n                    date.setDate(0);\n                }\n                break;\n            case DatePrecision.Month:\n                date.setMonth(month + i);\n                if (date.getMonth() !== Util.Math.mod(month + i, 12)) {\n                    date.setDate(0);\n                }\n                break;\n            case DatePrecision.Date:\n                date.setDate(day + i);\n                break;\n            case DatePrecision.Hour:\n                date.setHours(date.getHours() + i);\n                break;\n            case DatePrecision.Minute:\n                date.setMinutes(date.getMinutes() + i);\n                break;\n        }\n        return date;\n    },\n\n    previous(precision:DatePrecision, date:Date):Date {\n        const year = date.getFullYear();\n        const month = date.getMonth();\n        const day = date.getDate();\n\n        switch (precision) {\n            case DatePrecision.Decade:\n                date.setFullYear(year - 10);\n                if (date.getMonth() !== month) {\n                    date.setDate(0);\n                }\n                break;\n            case DatePrecision.Year:\n                date.setFullYear(year - 1);\n                if (date.getMonth() !== month) {\n                    date.setDate(0);\n                }\n                break;\n            case DatePrecision.Month:\n                date.setMonth(month - 1);\n                if (date.getMonth() !== Util.Math.mod(month - 1, 12)) {\n                    date.setDate(0);\n                }\n                break;\n            case DatePrecision.Date:\n                date.setDate(day - 1);\n                break;\n            case DatePrecision.Hour:\n                const hours = date.getHours();\n                date.setHours(hours - 1);\n                if (date.getHours() !== Util.Math.mod(hours - 1, 24)) {\n                    date.setHours(hours - 2);\n                }\n                break;\n            case DatePrecision.Minute:\n                const minutes = date.getMinutes();\n                date.setMinutes(minutes - 1);\n        }\n        return date;\n    },\n\n    clone(date:Date):Date {\n        return new Date(date.getTime());\n    }\n};\n","import {\n    Injectable, ApplicationRef, ComponentFactoryResolver, Injector, ComponentRef,\n    ReflectiveInjector, Provider, Type, ViewContainerRef, TemplateRef\n} from \"@angular/core\";\n\nexport interface IImplicitContext<T> {\n    $implicit?:T;\n}\n\n@Injectable()\nexport class SuiComponentFactory {\n    constructor(private _applicationRef:ApplicationRef,\n                private _componentFactoryResolver:ComponentFactoryResolver,\n                private _injector:Injector) {}\n\n    public createComponent<T>(type:Type<T>, providers:Provider[] = []):ComponentRef<T> {\n        // Resolve a factory for creating components of type `type`.\n        const factory = this._componentFactoryResolver.resolveComponentFactory(type as Type<T>);\n\n        // Resolve and create an injector with the specified providers.\n        const injector = ReflectiveInjector.resolveAndCreate(\n            providers,\n            this._injector\n        );\n\n        // Create a component using the previously resolved factory & injector.\n        const componentRef = factory.create(injector);\n\n        return componentRef;\n    }\n\n    public createView<T, U extends IImplicitContext<T>>(viewContainer:ViewContainerRef, template:TemplateRef<U>, context:U):void {\n        viewContainer.createEmbeddedView<U>(template, context);\n    }\n\n    // Inserts the component into the specified view container.\n    public attachToView<T>(componentRef:ComponentRef<T>, viewContainer:ViewContainerRef):void {\n        viewContainer.insert(componentRef.hostView, 0);\n    }\n\n    // Inserts the component in the root application node.\n    public attachToApplication<T>(componentRef:ComponentRef<T>):void {\n        this._applicationRef.attachView(componentRef.hostView);\n    }\n\n    // Detaches the component from the root application node.\n    public detachFromApplication<T>(componentRef:ComponentRef<T>):void {\n        this._applicationRef.detachView(componentRef.hostView);\n    }\n\n    // Moves the component to the specified DOM element.\n    public moveToElement<T>(componentRef:ComponentRef<T>, element:Element):void {\n        element.appendChild(componentRef.location.nativeElement);\n    }\n\n    // Moves the component to the document body.\n    public moveToDocumentBody<T>(componentRef:ComponentRef<T>):void {\n        this.moveToElement(componentRef, document.querySelector(\"body\")!);\n    }\n\n    public detachFromDocument<T>(componentRef:ComponentRef<T>):void {\n        const element = componentRef.location.nativeElement as Element;\n        // We can't use `element.remove()` due to lack of IE11 support.\n        if (element.parentNode) {\n            element.parentNode.removeChild(element);\n        }\n    }\n}\n","import { ElementRef } from \"@angular/core\";\nimport Popper, { Modifiers, PopperOptions, Placement, Data } from \"popper.js\";\n\ntype PopperModifiers = Modifiers & {\n    computeStyle?:{\n        gpuAcceleration:boolean;\n    };\n};\ntype PopperInstance = Popper & {\n    options:PopperOptions & {\n        modifiers:PopperModifiers;\n    };\n};\n\nexport type PositioningPlacement = \"auto\" |\n                                   \"top left\" | \"top\" | \"top right\" |\n                                   \"bottom left\" | \"bottom\" | \"bottom right\" |\n                                   \"left top\" | \"left\" | \"left bottom\" |\n                                   \"right top\" | \"right\" | \"right bottom\";\n\nexport const PositioningPlacement = {\n    Auto: \"auto\" as PositioningPlacement,\n    TopLeft: \"top left\" as PositioningPlacement,\n    Top: \"top\" as PositioningPlacement,\n    TopRight: \"top right\" as PositioningPlacement,\n    LeftTop: \"left top\" as PositioningPlacement,\n    Left: \"left\" as PositioningPlacement,\n    LeftBottom: \"left bottom\" as PositioningPlacement,\n    BottomLeft: \"bottom left\" as PositioningPlacement,\n    Bottom: \"bottom\" as PositioningPlacement,\n    BottomRight: \"bottom right\" as PositioningPlacement,\n    RightTop: \"right top\" as PositioningPlacement,\n    Right: \"right\" as PositioningPlacement,\n    RightBottom: \"right bottom\" as PositioningPlacement\n};\n\nexport interface IPositionBoundingBox {\n    width:number;\n    height:number;\n    top:number;\n    left:number;\n    bottom:number;\n    right:number;\n}\n\nfunction placementToPopper(placement:PositioningPlacement):Placement {\n    if (!placement || placement === PositioningPlacement.Auto) {\n        return \"auto\";\n    }\n\n    // All placements of the format: `direction alignment`, e.g. `top left`.\n    const [direction, alignment] = placement.split(\" \");\n\n    // Direction alone covers case of just `top`, `left`, `bottom`, `right`.\n    const chosenPlacement = [direction];\n\n    // Add `start` / `end` to placement, depending on alignment direction.\n    switch (alignment) {\n        case \"top\":\n        case \"left\":\n            chosenPlacement.push(\"start\");\n            break;\n        case \"bottom\":\n        case \"right\":\n            chosenPlacement.push(\"end\");\n            break;\n    }\n\n    // Join with hyphen to create Popper compatible placement.\n    return chosenPlacement.join(\"-\") as Placement;\n}\n\nfunction popperToPlacement(popper:string):PositioningPlacement {\n    if (!popper || popper === \"auto\") {\n        return \"auto\";\n    }\n\n    const [direction, alignment] = popper.split(\"-\");\n\n    const chosenPlacement = [direction];\n\n    switch (direction) {\n        case \"top\":\n        case \"bottom\":\n            switch (alignment) {\n                case \"start\":\n                    chosenPlacement.push(\"left\");\n                    break;\n                case \"end\":\n                    chosenPlacement.push(\"right\");\n                    break;\n            }\n            break;\n        case \"left\":\n        case \"right\":\n            switch (alignment) {\n                case \"start\":\n                    chosenPlacement.push(\"top\");\n                    break;\n                case \"end\":\n                    chosenPlacement.push(\"bottom\");\n                    break;\n            }\n            break;\n    }\n\n    return chosenPlacement.join(\" \") as PositioningPlacement;\n}\n\nexport class PositioningService {\n    public readonly anchor:ElementRef;\n    public readonly subject:ElementRef;\n\n    private _popper:PopperInstance;\n    private _popperState:Data;\n    private _placement:PositioningPlacement;\n    private _hasArrow:boolean;\n    private _arrowSelector:string | undefined;\n\n    public get placement():PositioningPlacement {\n        return this._placement;\n    }\n\n    public set placement(placement:PositioningPlacement) {\n        this._placement = placement;\n        if (this._popper) {\n            this._popper.options.placement = placementToPopper(placement);\n        }\n    }\n\n    public set hasArrow(hasArrow:boolean) {\n        this._hasArrow = hasArrow;\n    }\n\n    public get actualPlacement():PositioningPlacement {\n        if (!this._popperState) {\n            return PositioningPlacement.Auto;\n        }\n\n        return popperToPlacement(this._popperState.placement);\n    }\n\n    public get state():Data {\n        return this._popperState;\n    }\n\n    constructor(anchor:ElementRef, subject:ElementRef, placement:PositioningPlacement, arrowSelector?:string) {\n        this.anchor = anchor;\n        this.subject = subject;\n        this._placement = placement;\n        this._arrowSelector = arrowSelector;\n        this.init();\n    }\n\n    public init():void {\n        const modifiers:PopperModifiers = {\n            computeStyle: {\n                gpuAcceleration: false\n            },\n            preventOverflow: {\n                escapeWithReference: true,\n                boundariesElement: document.body\n            },\n            arrow: {\n                element: this._arrowSelector\n            },\n            offset: {\n                fn: (data:Popper.Data) => {\n                    if (this._hasArrow) {\n                        const offsets = this.calculateOffsets();\n                        data.offsets.popper.left += offsets.left;\n                        data.offsets.popper.top += offsets.top;\n                    }\n                    return data;\n                }\n            }\n        };\n\n        if (!this._arrowSelector) {\n            delete modifiers.arrow;\n        }\n\n        this._popper = new Popper(\n            this.anchor.nativeElement,\n            this.subject.nativeElement,\n            {\n                placement: placementToPopper(this._placement),\n                modifiers,\n                onCreate: initial => this._popperState = initial,\n                onUpdate: update => this._popperState = update\n            }) as PopperInstance;\n    }\n\n    public update():void {\n        this._popper.update();\n    }\n\n    public destroy():void {\n        this._popper.destroy();\n    }\n\n    private calculateOffsets():Popper.Offset {\n        let left = 0; let top = 0;\n\n        // To support correct positioning for all popup sizes we should calculate offset using em\n        const fontSize = parseFloat(window.getComputedStyle(this.subject.nativeElement).getPropertyValue(\"font-size\"));\n        // The Semantic UI popup arrow width and height are 0.71428571em and the margin from the popup edge is 1em\n        const arrowCenter = (0.71428571 / 2 + 1) * fontSize;\n\n        if (this.anchor.nativeElement.offsetWidth <= arrowCenter * 2) {\n            const anchorCenterWidth = this.anchor.nativeElement.offsetWidth / 2;\n            if (this._placement === PositioningPlacement.TopLeft || this._placement === PositioningPlacement.BottomLeft) {\n                left = anchorCenterWidth - arrowCenter;\n            }\n            if (this._placement === PositioningPlacement.TopRight || this._placement === PositioningPlacement.BottomRight) {\n                left = arrowCenter - anchorCenterWidth;\n            }\n        }\n\n        if (this.anchor.nativeElement.offsetHeight <= arrowCenter * 2) {\n            const anchorCenterHeight = this.anchor.nativeElement.offsetHeight / 2;\n            if (this._placement === PositioningPlacement.LeftTop || this._placement === PositioningPlacement.RightTop) {\n                top = anchorCenterHeight - arrowCenter;\n            }\n            if (this._placement === PositioningPlacement.LeftBottom || this._placement === PositioningPlacement.RightBottom) {\n                top = arrowCenter - anchorCenterHeight;\n            }\n        }\n        return { top, left, width: 0, height: 0 };\n    }\n\n}\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { SuiComponentFactory } from \"./services/component-factory.service\";\n\n@NgModule({\n    imports: [CommonModule],\n    providers: [\n        SuiComponentFactory\n    ]\n})\nexport class SuiUtilityModule {}\n","import {\n    Component, Directive, Input, Output, HostListener, HostBinding,\n    EventEmitter, ViewChild, ElementRef\n} from \"@angular/core\";\nimport { ICustomValueAccessorHost, customValueAccessorFactory, CustomValueAccessor } from \"../../../misc/util/internal\";\n\n@Component({\n    selector: \"sui-checkbox\",\n    exportAs: \"suiCheckbox\",\n    template: `\n<input class=\"hidden\"\n       type=\"checkbox\"\n       [attr.name]=\"name\"\n       [attr.checked]=\"checkedAttribute\"\n       [attr.disabled]=\"isDisabledAttribute\"\n       [(ngModel)]=\"isChecked\"\n       #checkbox>\n<label>\n    <ng-content></ng-content>\n</label>\n`\n})\nexport class SuiCheckbox implements ICustomValueAccessorHost<boolean> {\n    @HostBinding(\"class.ui\")\n    @HostBinding(\"class.checkbox\")\n    public readonly hasClasses:boolean;\n\n    @Input()\n    public name:string;\n\n    @HostBinding(\"class.checked\")\n    public isChecked:boolean;\n\n    @Output(\"checkChange\")\n    public onCheckChange:EventEmitter<boolean>;\n\n    @Output(\"touched\")\n    public onTouched:EventEmitter<void>;\n\n    @Input()\n    public isDisabled:boolean;\n\n    @HostBinding(\"class.read-only\")\n    @Input()\n    public isReadonly:boolean;\n\n    public get checkedAttribute():string | undefined {\n        return this.isChecked ? \"\" : undefined;\n    }\n\n    public get isDisabledAttribute():string | undefined {\n        return this.isDisabled ? \"disabled\" : undefined;\n    }\n\n    @ViewChild(\"checkbox\")\n    private _checkboxElement:ElementRef;\n\n    constructor() {\n        this.isChecked = false;\n        this.onCheckChange = new EventEmitter<boolean>();\n        this.onTouched = new EventEmitter<void>();\n\n        this.isDisabled = false;\n        this.isReadonly = false;\n\n        this.hasClasses = true;\n    }\n\n    @HostListener(\"mousedown\", [\"$event\"])\n    public onMouseDown(e:MouseEvent):void {\n        e.preventDefault();\n    }\n\n    @HostListener(\"click\")\n    public onClick():void {\n        if (!this.isDisabled && !this.isReadonly) {\n            this.toggle();\n            this.focusCheckbox();\n        }\n    }\n\n    @HostListener(\"focusout\")\n    public onFocusOut():void {\n        this.onTouched.emit();\n    }\n\n    public toggle():void {\n        this.isChecked = !this.isChecked;\n        this.onCheckChange.emit(this.isChecked);\n    }\n\n    public writeValue(value:boolean):void {\n        this.isChecked = value;\n    }\n\n    private focusCheckbox():void {\n        this._checkboxElement.nativeElement.focus();\n    }\n}\n\n@Directive({\n    selector: \"sui-checkbox\",\n    host: {\n        \"(checkChange)\": \"onChange($event)\",\n        \"(touched)\": \"onTouched()\"\n    },\n    providers: [customValueAccessorFactory(SuiCheckboxValueAccessor)]\n})\nexport class SuiCheckboxValueAccessor extends CustomValueAccessor<boolean, SuiCheckbox> {\n    constructor(host:SuiCheckbox) {\n        super(host);\n    }\n}\n","import {\n    Component, Directive, Input, Output, HostListener, HostBinding,\n    EventEmitter, ViewChild, ElementRef, ContentChildren, AfterContentInit, QueryList\n} from \"@angular/core\";\nimport {\n    ICustomValueAccessorHost, customValueAccessorFactory, CustomValueAccessor,\n    Util\n} from \"../../../misc/util/internal\";\n\n@Component({\n    selector: \"sui-radio-button\",\n    template: `\n<input class=\"hidden\"\n       type=\"checkbox\"\n       [attr.name]=\"name\"\n       [attr.checked]=\"checkedAttribute\"\n       [attr.disabled]=\"isDisabledAttribute\"\n       [ngModel]=\"isChecked\"\n       (ngModel)=\"currentValue = value\"\n       #radio>\n<label>\n    <ng-content></ng-content>\n</label>\n`\n})\nexport class SuiRadio<T> implements ICustomValueAccessorHost<T> {\n    @HostBinding(\"class.ui\")\n    @HostBinding(\"class.radio\")\n    @HostBinding(\"class.checkbox\")\n    public readonly hasClasses:boolean;\n\n    @Input()\n    public name:string;\n\n    @Input()\n    public value:T;\n\n    @HostBinding(\"class.checked\")\n    public isChecked:boolean;\n\n    public currentValue:T;\n\n    @Output(\"currentValueChange\")\n    public onCurrentValueChange:EventEmitter<T>;\n\n    @Output(\"touched\")\n    public onTouched:EventEmitter<void>;\n\n    @Input()\n    public isDisabled:boolean;\n\n    @HostBinding(\"class.read-only\")\n    @Input()\n    public isReadonly:boolean;\n\n    @ViewChild(\"radio\")\n    private _radioElement:ElementRef;\n\n    public get checkedAttribute():string | undefined {\n        return this.isChecked ? \"\" : undefined;\n    }\n\n    public get isDisabledAttribute():string | undefined {\n        return this.isDisabled ? \"disabled\" : undefined;\n    }\n\n    constructor() {\n        this.isChecked = false;\n        this.onCurrentValueChange = new EventEmitter<T>();\n        this.onTouched = new EventEmitter<void>();\n\n        this.isDisabled = false;\n        this.isReadonly = false;\n\n        this.hasClasses = true;\n    }\n\n    @HostListener(\"mousedown\", [\"$event\"])\n    public onMouseDown(e:MouseEvent):void {\n        e.preventDefault();\n    }\n\n    @HostListener(\"click\")\n    public onClick():void {\n        if (!this.isDisabled && !this.isReadonly) {\n            this.currentValue = this.value;\n            this.onCurrentValueChange.emit(this.currentValue);\n            this.update();\n            this.focusRadio();\n        }\n    }\n\n    @HostListener(\"focusout\")\n    public onFocusOut():void {\n        this.onTouched.emit();\n    }\n\n    public update():void {\n        this.isChecked = this.currentValue === this.value;\n    }\n\n    public writeValue(value:T):void {\n        this.currentValue = value;\n        this.update();\n    }\n\n    private focusRadio():void {\n        this._radioElement.nativeElement.focus();\n    }\n}\n\n@Directive({\n    selector: \"sui-radio-button\",\n    host: {\n        \"(currentValueChange)\": \"onChange($event)\",\n        \"(touched)\": \"onTouched()\"\n    },\n    providers: [customValueAccessorFactory(SuiRadioValueAccessor)]\n})\nexport class SuiRadioValueAccessor<T> extends CustomValueAccessor<T, SuiRadio<T>> {\n    constructor(host:SuiRadio<T>) {\n        super(host);\n    }\n}\n","import { Directive, AfterContentInit, ContentChildren, QueryList, ElementRef } from \"@angular/core\";\nimport { SuiRadio } from \"../components/radio\";\nimport { Subscription } from \"rxjs\";\nimport { Util } from \"../../../misc/util/internal\";\n\n@Directive({\n    selector: \"form:not([ngForm]):not([[ngForm]]),ngForm,[ngForm]\"\n})\nexport class SuiRadioManager<T> implements AfterContentInit {\n\n    public isNested:boolean;\n\n    @ContentChildren(SuiRadioManager, { descendants: true })\n    private _subManagers:QueryList<SuiRadioManager<T>>;\n\n    @ContentChildren(SuiRadio, { descendants: true })\n    private _renderedRadios:QueryList<SuiRadio<T>>;\n\n    private _radioSubs:Subscription[];\n\n    constructor(public element:ElementRef) {\n        this.isNested = false;\n        this._radioSubs = [];\n    }\n\n    public ngAfterContentInit():void {\n        this.updateNesting();\n        this._subManagers.changes.subscribe(() => this.updateNesting());\n\n        this.updateRadios();\n        this._renderedRadios.changes.subscribe(() => this.updateRadios());\n    }\n\n    private updateNesting():void {\n        this._subManagers\n            .filter(m => m !== this)\n            .forEach(m => m.isNested = true);\n    }\n\n    private updateRadios():void {\n        this._radioSubs.forEach(s => s.unsubscribe());\n        this._radioSubs = [];\n\n        const groups = Util.Array.groupBy(this._renderedRadios.toArray(), \"name\");\n        Object\n            .keys(groups)\n            .map(k => groups[k])\n            .forEach(g => g\n                .forEach(r => this._radioSubs\n                    .push(r.onCurrentValueChange\n                        .subscribe((v:T) => {\n                            if (!this.isNested) {\n                                g.forEach(radio => radio.writeValue(v));\n                            }\n                        }))));\n    }\n}\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { FormsModule } from \"@angular/forms\";\nimport { SuiCheckbox, SuiCheckboxValueAccessor } from \"./components/checkbox\";\nimport { SuiRadio, SuiRadioValueAccessor } from \"./components/radio\";\nimport { SuiRadioManager } from \"./directives/radio-manager\";\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule\n    ],\n    declarations: [\n        SuiCheckbox,\n        SuiCheckboxValueAccessor,\n        SuiRadio,\n        SuiRadioValueAccessor,\n        SuiRadioManager\n    ],\n    exports: [\n        SuiCheckbox,\n        SuiCheckboxValueAccessor,\n        SuiRadio,\n        SuiRadioValueAccessor,\n        SuiRadioManager\n    ]\n})\nexport class SuiCheckboxModule {}\n","import { EventEmitter } from \"@angular/core\";\nimport { IDatepickerLocaleValues } from \"../../../behaviors/localization/internal\";\nimport { DateUtil } from \"../../../misc/util/internal\";\nimport { CalendarViewType } from \"../views/calendar-view\";\nimport { CalendarConfig } from \"../classes/calendar-config\";\n\nexport enum CalendarMode {\n    DateOnly = 0,\n    TimeOnly = 1,\n    Both = 2\n}\n\nexport class CalendarService {\n    private _config:CalendarConfig;\n\n    public get config():CalendarConfig {\n        return this._config;\n    }\n\n    public set config(config:CalendarConfig) {\n        this._config = config;\n        config.updateBounds(this._selectedDate || this.currentDate);\n    }\n\n    public currentView:CalendarViewType;\n    public get inFinalView():boolean {\n        return this.currentView === this.config.mappings.finalView;\n    }\n\n    public currentDate:Date;\n    private _selectedDate?:Date;\n\n    public get selectedDate():Date | undefined {\n        return this._selectedDate;\n    }\n\n    public set selectedDate(date:Date | undefined) {\n        if (date) {\n            this._selectedDate = DateUtil.clone(date);\n            this.currentDate = DateUtil.clone(date);\n        } else {\n            this._selectedDate = undefined;\n        }\n\n        this.config.updateBounds(this._selectedDate || this.currentDate);\n        this.onManualUpdate();\n    }\n\n    private _minDate?:Date;\n    private _maxDate?:Date;\n\n    public get minDate():Date | undefined {\n        if (this._minDate && this.config.dateMinBound) {\n            return this._minDate > this.config.dateMinBound ? this._minDate : this.config.dateMinBound;\n        }\n        return this._minDate || this.config.dateMinBound;\n    }\n\n    public set minDate(min:Date | undefined) {\n        this._minDate = min;\n    }\n\n    public get maxDate():Date | undefined {\n        if (this._maxDate && this.config.dateMaxBound) {\n            return this._maxDate < this.config.dateMaxBound ? this._maxDate : this.config.dateMaxBound;\n        }\n        return this._maxDate || this.config.dateMaxBound;\n    }\n\n    public set maxDate(max:Date | undefined) {\n        this._maxDate = max;\n    }\n\n    private _firstDayOfWeek:number;\n\n    public get firstDayOfWeek():number {\n        return this._firstDayOfWeek;\n    }\n\n    public set firstDayOfWeek(firstDayOfWeek:number) {\n        if (firstDayOfWeek != undefined) {\n            this._firstDayOfWeek = Math.max(0, Math.min(6, firstDayOfWeek));\n        }\n    }\n\n    public onDateChange:EventEmitter<Date>;\n\n    constructor(config:CalendarConfig, public localeValues:IDatepickerLocaleValues) {\n        this.config = config;\n\n        this.currentDate = new Date();\n\n        this.firstDayOfWeek = this.localeValues.firstDayOfWeek;\n\n        this.onDateChange = new EventEmitter<Date>();\n\n        this.reset();\n    }\n\n    public onManualUpdate:() => void = () => {};\n\n    public reset():void {\n        this.currentView = this.config.mappings.finalView;\n\n        if (!this._selectedDate) {\n            let current = this.currentDate.getTime();\n            if (this._minDate) {\n                current = Math.max(current, this._minDate.getTime());\n            }\n            if (this._maxDate) {\n                current = Math.min(current, this._maxDate.getTime());\n            }\n\n            this.currentDate = new Date(current);\n            this.config.updateBounds(this.currentDate);\n\n            this.currentView = this.config.mappings.initialView;\n        }\n    }\n\n    public changeDate(date:Date, fromView:CalendarViewType):void {\n        this.currentDate = date;\n\n        if (fromView === this.config.mappings.finalView) {\n            this.selectedDate = date;\n\n            return this.onDateChange.emit(date);\n        }\n\n        this.updateView(this.config.mappings.changed, fromView);\n    }\n\n    public zoomOut(fromView:CalendarViewType):void {\n        this.updateView(this.config.mappings.zoom, fromView);\n    }\n\n    private updateView(mappings:Map<CalendarViewType, CalendarViewType>, fromView:CalendarViewType):void {\n        const mapping = mappings.get(fromView);\n        if (mapping == undefined) {\n            throw new Error(\"Unknown view type.\");\n        }\n        this.currentView = mapping;\n    }\n}\n","\nimport { Directive, HostBinding, HostListener, Input, EventEmitter, ChangeDetectorRef } from \"@angular/core\";\n\nexport class CalendarItem {\n    public date:Date;\n    public humanReadable:string;\n    public isDisabled:boolean;\n    public isActive:boolean;\n    public isOutsideRange:boolean;\n    public isToday:boolean;\n    public isSelectable:boolean;\n\n    constructor(date:Date) {\n        this.date = date;\n    }\n}\n\n@Directive({\n    selector: \"[calendarItem]\"\n})\nexport class SuiCalendarItem {\n    @Input(\"calendarItem\")\n    public item:CalendarItem;\n\n    @HostBinding(\"class.disabled\")\n    public get isSelectable():boolean {\n        return this.item.isSelectable;\n    }\n\n    @HostBinding(\"class.active\")\n    public get isActive():boolean {\n        return this.item.isActive;\n    }\n\n    @HostBinding(\"class.today\")\n    public get isToday():boolean {\n        return this.item.isToday;\n    }\n\n    @HostBinding(\"class.focus\")\n    public hasFocus:boolean;\n\n    public onFocussed:EventEmitter<boolean>;\n\n    constructor(public changeDetector:ChangeDetectorRef) {\n        this.hasFocus = false;\n\n        this.onFocussed = new EventEmitter<boolean>();\n    }\n\n    @HostListener(\"mousemove\")\n    public onMouseMove():void {\n        if (!this.hasFocus) {\n            this.hasFocus = true;\n            this.onFocussed.emit(this.hasFocus);\n        }\n    }\n\n    @HostListener(\"mouseleave\")\n    public onMouseLeave():void {\n        this.hasFocus = false;\n        this.onFocussed.emit(this.hasFocus);\n    }\n}\n","import { Input, QueryList, ViewChildren, AfterViewInit, HostListener, Renderer2, OnDestroy } from \"@angular/core\";\nimport { KeyCode } from \"../../../misc/util/internal\";\nimport { CalendarItem, SuiCalendarItem } from \"../directives/calendar-item\";\nimport { CalendarService } from \"../services/calendar.service\";\nimport { CalendarRangeService } from \"../services/calendar-range.service\";\n\nexport enum CalendarViewType {\n    Year = 0,\n    Month = 1,\n    Date = 2,\n    Hour = 3,\n    Minute = 4\n}\nexport type CalendarViewResult = [Date, CalendarViewType];\n\nexport abstract class CalendarView implements AfterViewInit, OnDestroy {\n    private _type:CalendarViewType;\n    private _service:CalendarService;\n\n    @ViewChildren(SuiCalendarItem)\n    private _renderedItems:QueryList<SuiCalendarItem>;\n    private _highlightedItem?:CalendarItem;\n\n    @Input()\n    public set service(service:CalendarService) {\n        this._service = service;\n        this.ranges.loadService(service);\n\n        this.service.onManualUpdate = () => {\n            this.ranges.refresh();\n\n            delete this._highlightedItem;\n            this.autoHighlight();\n        };\n    }\n\n    public get service():CalendarService {\n        return this._service;\n    }\n\n    public ranges:CalendarRangeService;\n\n    public get currentDate():Date {\n        return this.service.currentDate;\n    }\n\n    public get selectedDate():Date | undefined {\n        return this.service.selectedDate;\n    }\n\n    private _documentKeyDownListener:() => void;\n\n    constructor(renderer:Renderer2, viewType:CalendarViewType, ranges:CalendarRangeService) {\n        this._type = viewType;\n        this.ranges = ranges;\n\n        this._documentKeyDownListener = renderer.listen(\"document\", \"keydown\", (e:KeyboardEvent) => this.onDocumentKeyDown(e));\n    }\n\n    // Template Methods\n\n    public setDate(item:CalendarItem):void {\n        this.service.changeDate(item.date, this._type);\n    }\n\n    public zoomOut():void {\n        this.service.zoomOut(this._type);\n    }\n\n    // Keyboard Control\n\n    public ngAfterViewInit():void {\n        this._renderedItems.changes.subscribe(() => this.onRenderedItemsChanged());\n        this.onRenderedItemsChanged();\n    }\n\n    private onRenderedItemsChanged():void {\n        this._renderedItems.forEach(i =>\n            i.onFocussed.subscribe((hasFocus:boolean) => {\n                if (hasFocus) {\n                    this.highlightItem(i.item);\n                }\n            }));\n\n        this.autoHighlight();\n        this.highlightItem(this._highlightedItem);\n    }\n\n    private autoHighlight():void {\n        let date = this.selectedDate && this.ranges.current.containsDate(this.selectedDate) ? this.selectedDate : this.currentDate;\n        if (this._highlightedItem && this.ranges.current.containsDate(this._highlightedItem.date)) {\n            date = this._highlightedItem.date;\n        }\n\n        const initiallyHighlighted = this.ranges.current.items.find(i => this.ranges.dateComparer.equal(i.date, date));\n        if (initiallyHighlighted && !initiallyHighlighted.isDisabled) {\n            this._highlightedItem = initiallyHighlighted;\n        }\n    }\n\n    private highlightItem(item:CalendarItem | undefined):void {\n        if (item) {\n            this._renderedItems.forEach(i => i.hasFocus = false);\n            const rendered = this._renderedItems.find(ri => ri.item === item);\n            if (rendered && !rendered.hasFocus) {\n                rendered.hasFocus = true;\n                rendered.changeDetector.detectChanges();\n            }\n\n            this._highlightedItem = item;\n        }\n    }\n\n    private onDocumentKeyDown(e:KeyboardEvent):void {\n        if (this._highlightedItem && e.keyCode === KeyCode.Enter) {\n            this.setDate(this._highlightedItem);\n            return;\n        }\n\n        if (!this._highlightedItem) {\n            this.autoHighlight();\n        }\n\n        const index = this.ranges.current.findIndex(this._highlightedItem);\n        let isMovingForward = true;\n        let delta = 0;\n\n        switch (e.keyCode) {\n            case KeyCode.Right:\n                delta += 1;\n                break;\n            case KeyCode.Left:\n                delta -= 1;\n                isMovingForward = false;\n                break;\n            case KeyCode.Down:\n                delta += this.ranges.columns;\n                break;\n            case KeyCode.Up:\n                delta -= this.ranges.columns;\n                isMovingForward = false;\n                break;\n            default:\n                return;\n        }\n\n        // Stop these keypresses being captured elsewhere.\n        e.preventDefault();\n\n        let nextItem = this.ranges.current.items[index + delta];\n\n        if (nextItem && nextItem.isDisabled) {\n            return;\n        }\n\n        if (nextItem && !nextItem.isOutsideRange) {\n            return this.highlightItem(nextItem);\n        }\n\n        if (nextItem && nextItem.isOutsideRange) {\n            if (index + delta >= this.ranges.current.inRange.length) {\n                isMovingForward = true;\n            }\n        }\n\n        if (!nextItem) {\n            let adjustedIndex = this.ranges.current.findIndex(this._highlightedItem);\n\n            const nextItems = this.ranges.calc(isMovingForward).inRange;\n\n            if (isMovingForward) {\n                adjustedIndex -= this.ranges.current.inRange.length;\n            } else {\n                adjustedIndex += nextItems.length;\n            }\n\n            nextItem = nextItems[adjustedIndex + delta];\n\n            if (nextItem.isDisabled) {\n                return;\n            }\n        }\n\n        this.ranges.move(isMovingForward);\n        this._highlightedItem = this.ranges.current.find(nextItem);\n    }\n\n    public ngOnDestroy():void {\n        this._documentKeyDownListener();\n    }\n}\n","import { CalendarViewType } from \"../views/calendar-view\";\n\nexport type CalendarMapping<T = CalendarViewType> = Map<CalendarViewType, T>;\n\nexport abstract class CalendarMappings {\n    public initialView:CalendarViewType;\n    public finalView:CalendarViewType;\n    public changed:CalendarMapping;\n    public zoom:CalendarMapping;\n}\n\nexport class DateMappings extends CalendarMappings {\n    constructor() {\n        super();\n\n        this.initialView = CalendarViewType.Date;\n        this.finalView = CalendarViewType.Date;\n\n        this.changed = new Map<CalendarViewType, CalendarViewType>([\n            [CalendarViewType.Year, CalendarViewType.Month],\n            [CalendarViewType.Month, CalendarViewType.Date],\n            [CalendarViewType.Date, CalendarViewType.Date]\n        ]);\n\n        this.zoom = new Map<CalendarViewType, CalendarViewType>([\n            [CalendarViewType.Year, CalendarViewType.Date],\n            [CalendarViewType.Month, CalendarViewType.Year],\n            [CalendarViewType.Date, CalendarViewType.Month]\n        ]);\n    }\n}\n\nexport class TimeMappings extends CalendarMappings {\n    constructor() {\n        super();\n\n        this.initialView = CalendarViewType.Hour;\n        this.finalView = CalendarViewType.Minute;\n\n        this.changed = new Map<CalendarViewType, CalendarViewType>([\n            [CalendarViewType.Hour, CalendarViewType.Minute],\n            [CalendarViewType.Minute, CalendarViewType.Minute]\n        ]);\n\n        this.zoom = new Map<CalendarViewType, CalendarViewType>([\n            [CalendarViewType.Hour, CalendarViewType.Minute],\n            [CalendarViewType.Minute, CalendarViewType.Hour]\n        ]);\n    }\n}\n\nexport class DatetimeMappings extends CalendarMappings {\n    constructor() {\n        super();\n\n        this.initialView = CalendarViewType.Date;\n        this.finalView = CalendarViewType.Minute;\n\n        this.changed = new Map<CalendarViewType, CalendarViewType>([\n            [CalendarViewType.Year, CalendarViewType.Month],\n            [CalendarViewType.Month, CalendarViewType.Date],\n            [CalendarViewType.Date, CalendarViewType.Hour],\n            [CalendarViewType.Hour, CalendarViewType.Minute],\n            [CalendarViewType.Minute, CalendarViewType.Minute]\n        ]);\n\n        this.zoom = new Map<CalendarViewType, CalendarViewType>([\n            [CalendarViewType.Year, CalendarViewType.Date],\n            [CalendarViewType.Month, CalendarViewType.Year],\n            [CalendarViewType.Date, CalendarViewType.Month],\n            [CalendarViewType.Hour, CalendarViewType.Date],\n            [CalendarViewType.Minute, CalendarViewType.Hour]\n        ]);\n    }\n}\n\nexport class MonthMappings extends CalendarMappings {\n    constructor() {\n        super();\n\n        this.initialView = CalendarViewType.Month;\n        this.finalView = CalendarViewType.Month;\n\n        this.changed = new Map<CalendarViewType, CalendarViewType>([\n            [CalendarViewType.Year, CalendarViewType.Month],\n            [CalendarViewType.Month, CalendarViewType.Month]\n        ]);\n\n        this.zoom = new Map<CalendarViewType, CalendarViewType>([\n            [CalendarViewType.Year, CalendarViewType.Month],\n            [CalendarViewType.Month, CalendarViewType.Year]\n        ]);\n    }\n}\n\nexport class YearMappings extends CalendarMappings {\n    constructor() {\n        super();\n\n        this.initialView = CalendarViewType.Year;\n        this.finalView = CalendarViewType.Year;\n\n        this.changed = new Map<CalendarViewType, CalendarViewType>([\n            [CalendarViewType.Year, CalendarViewType.Year]\n        ]);\n\n        this.zoom = new Map<CalendarViewType, CalendarViewType>([\n            [CalendarViewType.Year, CalendarViewType.Year]\n        ]);\n    }\n}\n","import { CalendarMode } from \"../services/calendar.service\";\nimport { CalendarMappings, DatetimeMappings, DateMappings, TimeMappings, MonthMappings, YearMappings } from \"./calendar-mappings\";\nimport { DatePrecision, DateUtil } from \"../../../misc/util/internal\";\n\nexport abstract class CalendarConfig {\n    public mode:CalendarMode;\n    public precision:DatePrecision;\n    public mappings:CalendarMappings;\n\n    public fallback:string;\n\n    public dateMinBound?:Date;\n    public dateMaxBound?:Date;\n\n    constructor(mode:CalendarMode, precision:DatePrecision, mappings:CalendarMappings, fallback:string) {\n        this.mode = mode;\n        this.precision = precision;\n        this.mappings = mappings;\n        this.fallback = fallback;\n    }\n\n    public updateBounds(providedDate:Date):void {\n        this.dateMinBound = DateUtil.startOf(DatePrecision.Year, new Date(), true);\n        this.dateMinBound.setFullYear(0);\n    }\n}\n\nexport class DateConfigBase extends CalendarConfig {\n    constructor(precision:DatePrecision, mappings:CalendarMappings, fallback:string) {\n        super(CalendarMode.DateOnly, precision, mappings, fallback);\n    }\n}\n\nexport class YearConfig extends DateConfigBase {\n    constructor() {\n        super(\n            DatePrecision.Year,\n            new YearMappings(),\n            \"number\");\n    }\n}\n\nexport class MonthConfig extends DateConfigBase {\n    constructor() {\n        super(\n            DatePrecision.Month,\n            new MonthMappings(),\n            \"month\");\n    }\n}\n\nexport class DateConfig extends DateConfigBase {\n    constructor() {\n        super(\n            DatePrecision.Date,\n            new DateMappings(),\n            \"date\");\n    }\n}\n\nexport class DatetimeConfig extends CalendarConfig {\n    constructor() {\n        super(\n            CalendarMode.Both,\n            DatePrecision.Minute,\n            new DatetimeMappings(),\n            \"datetime-local\");\n    }\n}\n\nexport class TimeConfig extends CalendarConfig {\n    constructor() {\n        super(\n            CalendarMode.TimeOnly,\n            DatePrecision.Minute,\n            new TimeMappings(),\n            \"time\");\n    }\n\n    public updateBounds(providedDate:Date):void {\n        this.dateMaxBound = DateUtil.endOf(DatePrecision.Date, DateUtil.clone(providedDate));\n        this.dateMinBound = DateUtil.previous(DatePrecision.Date, DateUtil.clone(this.dateMaxBound));\n    }\n}\n","import { DatePrecision, DateUtil, Util } from \"../../../misc/util/internal\";\n\nexport class DateComparer {\n    private _precision:DatePrecision;\n    private _isSmallest:boolean;\n\n    constructor(precision:DatePrecision, isSmallest:boolean) {\n        this._precision = precision;\n        this._isSmallest = isSmallest;\n    }\n\n    public equal(a:Date, b:Date | undefined):boolean {\n        if (this._precision === DatePrecision.Minute) {\n            return !!b &&\n               DateUtil.equal(DatePrecision.Hour, b, a) &&\n               Util.Math.roundDown(b.getMinutes(), 5) === Util.Math.roundDown(a.getMinutes(), 5);\n        }\n\n        return !!b && DateUtil.equal(this._precision, a, b);\n    }\n\n    public lessThan(a:Date, b:Date | undefined):boolean {\n        if (this._isSmallest) {\n            return !b || (b >= a);\n        }\n\n        return !b || (DateUtil.endOf(this._precision, DateUtil.clone(b)) >= a);\n    }\n\n    public greaterThan(a:Date, b:Date | undefined):boolean {\n        if (this._isSmallest) {\n            return !b || (b <= a);\n        }\n\n        return !b || (DateUtil.startOf(this._precision, DateUtil.clone(b)) <= a);\n    }\n\n    public between(date:Date, left:Date | undefined, right:Date | undefined):boolean {\n        return this.greaterThan(date, left) && this.lessThan(date, right);\n    }\n}\n","import { IDatepickerLocaleValues } from \"../../../behaviors/localization/internal\";\nimport { format, parse } from \"date-fns\";\nimport * as defaultLocale from \"date-fns/locale/en-US\";\n\ninterface IDateFnsLocaleValues { [name:string]:string[]; }\ninterface IDateFnsHelperOptions { type?:string; }\ntype DateFnsHelper<U, T> = (value:U, options:IDateFnsHelperOptions) => T;\ntype DateFnsWeekStartsOn = 0 | 1 | 2 | 3 | 4 | 5 | 6;\n\ninterface IDateFnsCustomLocale {\n    localize:{\n        weekday:DateFnsHelper<number, string>;\n        weekdays:DateFnsHelper<IDateFnsHelperOptions, string[]>;\n        month:DateFnsHelper<number, string>;\n        months:DateFnsHelper<IDateFnsHelperOptions, string[]>;\n        timeOfDay:DateFnsHelper<number, string>;\n        timesOfDay:DateFnsHelper<IDateFnsHelperOptions, string[]>;\n    };\n    match:{\n        weekdays:DateFnsHelper<string, RegExpMatchArray | null>;\n        weekday?:DateFnsHelper<RegExpMatchArray, number>;\n        months:DateFnsHelper<string, RegExpMatchArray | null>;\n        month?:DateFnsHelper<RegExpMatchArray, number>;\n        timesOfDay:DateFnsHelper<string, RegExpMatchArray | null>;\n        timeOfDay?:DateFnsHelper<RegExpMatchArray, number>;\n    };\n    options?:{\n        weekStartsOn?:number;\n    };\n}\n\nfunction buildLocalizeFn(values:IDateFnsLocaleValues,\n                         defaultType:string,\n                         indexCallback?:(oldIndex:number) => number):DateFnsHelper<number, string> {\n\n    return (dirtyIndex:number, { type } = { type: defaultType }) => {\n        const index = indexCallback ? indexCallback(dirtyIndex) : dirtyIndex;\n        return values[type][index];\n    };\n}\n\nfunction buildLocalizeArrayFn(values:IDateFnsLocaleValues, defaultType:string):DateFnsHelper<IDateFnsHelperOptions, string[]> {\n    return ({ type } = { type: defaultType }) => values[type];\n}\n\nfunction buildMatchFn(patterns:IDateFnsLocaleValues, defaultType:string):DateFnsHelper<string, RegExpMatchArray | null> {\n    return (dirtyString, { type } = { type: defaultType }) =>\n        dirtyString.match(`^(${patterns[type].join(\"|\")})`);\n}\n\nfunction buildParseFn(patterns:IDateFnsLocaleValues, defaultType:string):DateFnsHelper<RegExpMatchArray, number> {\n    return ([, result], { type } = { type: defaultType }) =>\n        (patterns[type] || patterns[defaultType])\n            .map(p => new RegExp(`^${p}`))\n            .findIndex(pattern => pattern.test(result));\n}\n\nexport class DateFnsParser {\n    private _weekStartsOn:DateFnsWeekStartsOn;\n    private _locale:IDateFnsCustomLocale;\n\n    private get _config():any {\n        return {\n            weekStartsOn: this._weekStartsOn,\n            locale: this._locale\n        };\n    }\n\n    constructor(locale:IDatepickerLocaleValues) {\n        this._weekStartsOn = locale.firstDayOfWeek as DateFnsWeekStartsOn;\n\n        const weekdayValues = {\n            long: locale.weekdays,\n            short: locale.weekdaysShort,\n            narrow: locale.weekdaysNarrow\n        };\n\n        const monthValues = {\n            long: locale.months,\n            short: locale.monthsShort\n        };\n\n        const timeOfDayValues = {\n            long: locale.timesOfDay,\n            uppercase: locale.timesOfDayUppercase,\n            lowercase: locale.timesOfDayLowercase\n        };\n\n        const timeOfDayMatchValues = {\n            long: locale.timesOfDay,\n            short: locale.timesOfDayUppercase.concat(locale.timesOfDayLowercase)\n        };\n\n        this._locale = defaultLocale as any;\n        this._locale.localize = {\n            ...this._locale.localize,\n            ...{\n                weekday: buildLocalizeFn(weekdayValues, \"long\"),\n                weekdays: buildLocalizeArrayFn(weekdayValues, \"long\"),\n                month: buildLocalizeFn(monthValues, \"long\"),\n                months: buildLocalizeArrayFn(monthValues, \"long\"),\n                timeOfDay: buildLocalizeFn(timeOfDayValues, \"long\", (hours:number) => {\n                    return hours / 12 >= 1 ? 1 : 0;\n                }),\n                timesOfDay: buildLocalizeArrayFn(timeOfDayValues, \"long\")\n            }\n        };\n        this._locale.match = {\n            ...this._locale.match,\n            ...{\n                weekdays: buildMatchFn(weekdayValues, \"long\"),\n                weekday: buildParseFn(weekdayValues, \"long\"),\n                months: buildMatchFn(monthValues, \"long\"),\n                month: buildParseFn(monthValues, \"long\"),\n                timesOfDay:buildMatchFn(timeOfDayMatchValues, \"long\"),\n                timeOfDay:buildParseFn(timeOfDayMatchValues, \"long\")\n            }\n        };\n    }\n\n    public format(d:Date, f:string):string {\n        return format(d, f, this._config);\n    }\n\n    public parse(dS:string, f:string, bD:Date):Date {\n        return parse(dS, f, bD, this._config);\n    }\n}\n","import { DatepickerMode } from \"../components/datepicker\";\nimport { DateFnsParser } from \"../helpers/date-fns\";\nimport { IDatepickerLocaleValues, IDatepickerFormatsLocaleValues } from \"../../../behaviors/localization/internal\";\n\nexport class DateParser {\n    private _format:string;\n    private _parser:DateFnsParser;\n\n    constructor(format:string, locale:IDatepickerLocaleValues) {\n        this._format = format;\n        this._parser = new DateFnsParser(locale);\n    }\n\n    public format(date:Date):string {\n        return this._parser.format(date, this._format);\n    }\n\n    public parse(dateString:string, baseDate:Date = new Date()):Date {\n        return this._parser.parse(dateString, this._format, baseDate);\n    }\n}\n\nexport class InternalDateParser extends DateParser {\n    constructor(mode:DatepickerMode, locale:IDatepickerLocaleValues) {\n        const internalFormats:IDatepickerFormatsLocaleValues = {\n            time: \"HH:mm\",\n            datetime: \"YYYY-MM-DDTHH:mm\",\n            date: \"YYYY-MM-DD\",\n            month: \"YYYY-MM\",\n            year: \"YYYY\"\n        };\n\n        super(internalFormats[mode], locale);\n    }\n}\n","import { DatePrecision, DateUtil, Util } from \"../../../misc/util/internal\";\nimport { CalendarItem } from \"../directives/calendar-item\";\nimport { CalendarService } from \"./calendar.service\";\nimport { DateComparer } from \"../classes/date-comparer\";\n\nexport class CalendarRange {\n    public start:Date;\n    public dates:Date[];\n    public items:CalendarItem[];\n    public get inRange():CalendarItem[] {\n        return this.items.filter(i => !i.isOutsideRange);\n    }\n    public groupedItems:CalendarItem[][];\n    private _comparer:DateComparer;\n\n    constructor(start:Date, dates:Date[], items:CalendarItem[], grouped:CalendarItem[][], comparer:DateComparer) {\n        this.start = start;\n        this.dates = dates;\n        this.items = items;\n        this.groupedItems = grouped;\n        this._comparer = comparer;\n    }\n\n    public find(item:CalendarItem):CalendarItem | undefined {\n        return this.items.find(i => this._comparer.equal(i.date, item.date));\n    }\n\n    public findIndex(item:CalendarItem | undefined):number {\n        if (!item) {\n            return -1;\n        }\n        return this.items.findIndex(i => this._comparer.equal(i.date, item.date));\n    }\n\n    public containsDate(date:Date):boolean {\n        return !!this.inRange.find(i => this._comparer.equal(i.date, date));\n    }\n}\n\nexport abstract class CalendarRangeService {\n    public previous:CalendarRange;\n    public current:CalendarRange;\n    public next:CalendarRange;\n\n    public service:CalendarService;\n\n    public interval:DatePrecision;\n    public marginal:DatePrecision;\n    public rows:number;\n    public columns:number;\n\n    public get dateComparer():DateComparer {\n        return new DateComparer(this.marginal, this.service.inFinalView);\n    }\n\n    public get length():number {\n        return this.rows * this.columns;\n    }\n\n    public get canMoveNext():boolean {\n        const firstItem = this.next.inRange[0];\n        if (firstItem && this.service.maxDate) {\n            return firstItem.date <= this.service.maxDate;\n        }\n        return true;\n    }\n\n    public get canMovePrevious():boolean {\n        const lastItem = this.previous.inRange.slice(-1).pop();\n        if (lastItem && this.service.minDate) {\n            return lastItem.date >= this.service.minDate;\n        }\n        return true;\n    }\n\n    constructor(interval:DatePrecision, rows:number, columns:number) {\n        this.interval = interval;\n        this.marginal = interval as number + 1;\n        this.rows = rows;\n        this.columns = columns;\n    }\n\n    public loadService(service:CalendarService):void {\n        this.service = service;\n\n        this.refresh();\n    }\n\n    public refresh():void {\n        this.current = this.calcRange(this.service.currentDate);\n\n        this.next = this.calcRange(DateUtil.next(this.interval, DateUtil.clone(this.service.currentDate)));\n        this.previous = this.calcRange(DateUtil.previous(this.interval, DateUtil.clone(this.service.currentDate)));\n    }\n\n    public move(forwards:boolean):void {\n        if (forwards) {\n            return this.moveNext();\n        }\n        return this.movePrevious();\n    }\n\n    public moveNext():void {\n        DateUtil.next(this.interval, this.service.currentDate);\n        this.previous = this.current;\n        this.current = this.next;\n        this.next = this.calcRange(DateUtil.next(this.interval, DateUtil.clone(this.service.currentDate)));\n    }\n\n    public movePrevious():void {\n        DateUtil.previous(this.interval, this.service.currentDate);\n        this.next = this.current;\n        this.current = this.previous;\n        this.previous = this.calcRange(DateUtil.previous(this.interval, DateUtil.clone(this.service.currentDate)));\n    }\n\n    public calc(forwards:boolean):CalendarRange {\n        if (forwards) {\n            return this.next;\n        }\n        return this.previous;\n    }\n\n    private calcRange(startDate:Date):CalendarRange {\n        const start = this.calcStart(startDate);\n        if (this.service.inFinalView) {\n            DateUtil.startOf(this.marginal, start, true);\n        }\n        const dates = this.calcDates(start);\n        const items = this.calcItems(dates, startDate);\n\n        return new CalendarRange(start, dates, items, Util.Array.group(items, this.columns), this.dateComparer);\n    }\n\n    protected calcStart(date:Date):Date {\n        return DateUtil.startOf(this.interval, DateUtil.clone(date));\n    }\n\n    protected calcDates(rangeStart:Date):Date[] {\n        return Util.Array\n            .range(this.length)\n            .map(i => DateUtil.add(this.marginal, DateUtil.clone(rangeStart), i));\n\n    }\n\n    protected calcItems(dateRange:Date[], baseDate:Date):CalendarItem[] {\n        return dateRange.map(date => {\n            const item = new CalendarItem(date);\n\n            item.isDisabled = !this.dateComparer.between(item.date, this.service.minDate, this.service.maxDate);\n            item.isActive = this.dateComparer.equal(item.date, this.service.selectedDate);\n            item.isToday = this.dateComparer.equal(item.date, new Date());\n            item.isSelectable = item.isDisabled;\n\n            this.configureItem(item, baseDate);\n\n            return item;\n        });\n    }\n\n    protected abstract configureItem(item:CalendarItem, baseDate:Date):void;\n}\n","import { Component, Input, EventEmitter, Output } from \"@angular/core\";\nimport { CalendarRangeService } from \"../services/calendar-range.service\";\n\n@Component({\n    selector: \"sui-calendar-view-title\",\n    template: `\n<span class=\"title link\" (click)=\"onZoomOut.emit()\">\n    <ng-content></ng-content>\n</span>\n<span class=\"prev link\" [class.disabled]=\"!ranges?.canMovePrevious\" (click)=\"ranges?.movePrevious()\">\n    <i class=\"chevron left icon\"></i>\n</span>\n<span class=\"next link\" [class.disabled]=\"!ranges?.canMoveNext\" (click)=\"ranges?.moveNext()\">\n    <i class=\"chevron right icon\"></i>\n</span>\n`,\n    styles: [`\n.title.link {\n    display: inline-block;\n    margin-left: 2rem;\n    margin-right: 2rem;\n}\n`]\n})\nexport class SuiCalendarViewTitle {\n\n    @Input()\n    public ranges:CalendarRangeService;\n\n    @Output(\"zoomOut\")\n    public onZoomOut:EventEmitter<void>;\n\n    constructor() {\n        this.onZoomOut = new EventEmitter<void>();\n    }\n}\n","import { Component, HostBinding, HostListener } from \"@angular/core\";\nimport { CalendarService } from \"./../services/calendar.service\";\nimport { DatetimeConfig } from \"../classes/calendar-config\";\nimport { SuiLocalizationService } from \"../../../behaviors/localization/internal\";\n\nexport type DatepickerMode = \"year\" | \"month\" | \"date\" | \"datetime\" | \"time\";\n\nexport const DatepickerMode = {\n    Year: \"year\" as DatepickerMode,\n    Month: \"month\" as DatepickerMode,\n    Date: \"date\" as DatepickerMode,\n    Datetime: \"datetime\" as DatepickerMode,\n    Time: \"time\" as DatepickerMode\n};\n\n@Component({\n    selector: \"sui-datepicker\",\n    template: `\n<ng-container [ngSwitch]=\"service.currentView\">\n    <sui-calendar-year-view [service]=\"service\" *ngSwitchCase=\"0\"></sui-calendar-year-view>\n    <sui-calendar-month-view [service]=\"service\" *ngSwitchCase=\"1\"></sui-calendar-month-view>    \n    <sui-calendar-date-view [service]=\"service\" *ngSwitchCase=\"2\"></sui-calendar-date-view>    \n    <sui-calendar-hour-view [service]=\"service\" *ngSwitchCase=\"3\"></sui-calendar-hour-view>    \n    <sui-calendar-minute-view [service]=\"service\" *ngSwitchCase=\"4\"></sui-calendar-minute-view>    \n</ng-container>\n`,\n    styles: [`\n:host {\n    user-select: none;\n}\n`]\n})\nexport class SuiDatepicker {\n    @HostBinding(\"class.ui\")\n    @HostBinding(\"class.active\")\n    @HostBinding(\"class.calendar\")\n    public readonly hasClasses:boolean;\n\n    public service:CalendarService;\n\n    constructor(localizationService:SuiLocalizationService) {\n        this.service = new CalendarService(new DatetimeConfig(), localizationService.get().datepicker);\n\n        this.hasClasses = true;\n    }\n\n    @HostListener(\"mousedown\", [\"$event\"])\n    public onMouseDown(e:MouseEvent):void {\n        e.preventDefault();\n    }\n}\n","import { TemplateRef } from \"@angular/core\";\nimport { ITemplateRefContext, PositioningPlacement } from \"../../../misc/util/internal\";\nimport { IPopup } from \"./popup-controller\";\n\nexport type PopupTrigger = \"hover\" | \"click\" | \"outsideClick\" | \"focus\" | \"manual\";\nexport type PopupSize = \"mini\" | \"tiny\" | \"small\" | \"large\" | \"huge\";\nexport type PopupWidth = \"wide\" | \"very wide\"  | \"flowing\";\n\nexport const PopupTrigger = {\n    Hover: \"hover\" as PopupTrigger,\n    Click: \"click\" as PopupTrigger,\n    OutsideClick: \"outsideClick\" as PopupTrigger,\n    Focus: \"focus\" as PopupTrigger,\n    Manual: \"manual\" as PopupTrigger\n};\n\nexport interface IPopupConfig {\n    header?:string;\n    text?:string;\n    placement?:PositioningPlacement;\n    trigger?:PopupTrigger;\n    isInverted?:boolean;\n    delay?:number;\n    isBasic?:boolean;\n    transition?:string;\n    transitionDuration?:number;\n    isFlowing?:boolean;\n    isInline?:boolean;\n}\n\nexport class PopupConfig implements IPopupConfig {\n    public header?:string;\n    public text?:string;\n    public placement:PositioningPlacement;\n    public trigger:PopupTrigger;\n    public isInverted:boolean;\n    public delay:number;\n    public isBasic:boolean;\n    public transition:string;\n    public size:PopupSize;\n    public width:PopupWidth;\n    public transitionDuration:number;\n    public isFlowing:boolean;\n    public isInline:boolean;\n\n    constructor(defaults:IPopupConfig = {}) {\n        this.placement = PositioningPlacement.TopLeft;\n        this.trigger = PopupTrigger.Hover;\n        this.isInverted = false;\n        this.delay = 0;\n        this.isBasic = false;\n        this.transition = \"scale\";\n        this.transitionDuration = 200;\n        this.isFlowing = false;\n        this.isInline = false;\n        Object.assign(this, defaults);\n    }\n}\n","import { Component, ViewChild, ViewContainerRef, ElementRef, EventEmitter, HostListener, HostBinding } from \"@angular/core\";\nimport { PositioningService, IDynamicClasses } from \"../../../misc/util/internal\";\nimport { TransitionController, TransitionDirection, Transition } from \"../../transition/internal\";\nimport { IPopup } from \"../classes/popup-controller\";\nimport { TemplatePopupConfig } from \"../classes/popup-template-controller\";\n\n@Component({\n    selector: \"sui-popup\",\n    template: `\n<div class=\"ui popup\"\n     [ngClass]=\"dynamicClasses\"\n     [suiTransition]=\"transitionController\"\n     [attr.direction]=\"direction\"\n     #container>\n\n    <ng-container *ngIf=\"!config.template && (!!config.header || !!config.text)\">\n        <div class=\"header\" *ngIf=\"config.header\">{{ config.header }}</div>\n        <div class=\"content\">{{ config.text }}</div>\n    </ng-container>\n    <div #templateSibling></div>\n\n    <sui-popup-arrow *ngIf=\"!config.isBasic\"\n                     [placement]=\"config.placement\"\n                     [inverted]=\"config.isInverted\"></sui-popup-arrow>\n</div>\n`,\n    styles: [`\n.ui.popup {\n    /* Autofit popup to the contents. */\n    right: auto;\n    margin: 0;\n}\n\n.ui.animating.popup {\n    /* When the popup is animating, it may not initially be in the correct position.\n       This fires a mouse event, causing the anchor's mouseleave to fire - making the popup flicker.\n       Setting pointer-events to none while animating fixes this bug. */\n    pointer-events: none;\n}\n\n.ui.popup::before {\n    /* Hide the Semantic UI CSS arrow. */\n    display: none;\n}\n\n/* Offset popup by 0.75em above and below when placed 'vertically'. */\n.ui.popup[direction=\"top\"],\n.ui.popup[direction=\"bottom\"] {\n    margin-top: 0.75em;\n    margin-bottom: 0.75em;\n}\n\n/* Offset popup by 0.75em either side when placed 'horizontally'. */\n.ui.popup[direction=\"left\"],\n.ui.popup[direction=\"right\"] {\n    margin-left: 0.75em;\n    margin-right: 0.75em;\n}\n`]\n})\nexport class SuiPopup implements IPopup {\n    // Config settings for this popup.\n    public config:TemplatePopupConfig<any>;\n\n    public transitionController:TransitionController;\n    public positioningService:PositioningService;\n    private _anchor:ElementRef;\n\n    // Keeps track of whether the popup is open internally.\n    private _isOpen:boolean;\n    // `setTimeout` timer pointer for cancelling popup close.\n    public closingTimeout:number;\n\n    // Fires when the popup opens (and the animation is completed).\n    public onOpen:EventEmitter<void>;\n    // Fires when the popup closes (and the animation is completed).\n    public onClose:EventEmitter<void>;\n\n    public get isOpen():boolean {\n        return this._isOpen;\n    }\n\n    // `ElementRef` for the positioning subject.\n    @ViewChild(\"container\", { read: ViewContainerRef })\n    private _container:ViewContainerRef;\n\n    public set anchor(anchor:ElementRef) {\n        this._anchor = anchor;\n    }\n\n    // Returns the direction (`top`, `left`, `right`, `bottom`) of the current placement.\n    public get direction():string | undefined {\n        // We need to set direction attribute before popper init to allow correct positioning\n        return this.config.placement.split(\" \").shift();\n    }\n\n    // Returns the alignment (`top`, `left`, `right`, `bottom`) of the current placement.\n    public get alignment():string | undefined {\n        return this.config.placement.split(\" \").pop();\n    }\n\n    public get dynamicClasses():IDynamicClasses {\n        const classes:IDynamicClasses = {};\n        if (this.direction) {\n            classes[this.direction] = true;\n        }\n        if (this.alignment) {\n            classes[this.alignment] = true;\n        }\n        if (this.config.isInverted) {\n            classes.inverted = true;\n        }\n        if (this.config.isBasic) {\n            classes.basic = true;\n        }\n        if (this.config.isFlowing) {\n            classes.flowing = true;\n        }\n        if (this.config.size) {\n            classes[this.config.size] = true;\n        }\n        if (this.config.width) {\n            classes[this.config.width] = true;\n        }\n        return classes;\n    }\n\n    // `ViewContainerRef` for the element the template gets injected as a sibling of.\n    @ViewChild(\"templateSibling\", { read: ViewContainerRef })\n    public templateSibling:ViewContainerRef;\n\n    @HostBinding(\"attr.tabindex\")\n    public readonly tabindex:number;\n\n    constructor(public elementRef:ElementRef) {\n        this.transitionController = new TransitionController(false);\n\n        this._isOpen = false;\n\n        this.onOpen = new EventEmitter<void>();\n        this.onClose = new EventEmitter<void>();\n\n        this.tabindex = 0;\n    }\n\n    public open():void {\n        // Only attempt to open if currently closed.\n        if (!this.isOpen) {\n            // Cancel the closing timer.\n            clearTimeout(this.closingTimeout);\n\n            // Create positioning service after a brief delay.\n            setTimeout(() => {\n                this.positioningService = new PositioningService(\n                    this._anchor,\n                    this._container.element,\n                    this.config.placement,\n                    \".dynamic.arrow\"\n                );\n                this.positioningService.hasArrow = !this.config.isBasic;\n            });\n\n            // Cancel all other transitions, and initiate the opening transition.\n            this.transitionController.stopAll();\n            this.transitionController.animate(\n                new Transition(this.config.transition, this.config.transitionDuration, TransitionDirection.In, () => {\n                    // Focus any element with [autofocus] attribute.\n                    const autoFocus = this.elementRef.nativeElement.querySelector(\"[autofocus]\") as HTMLElement | null;\n                    if (autoFocus) {\n                        // Autofocus after the browser has had time to process other event handlers.\n                        setTimeout(() => autoFocus.focus(), 10);\n                        // Try to focus again when the modal has opened so that autofocus works in IE11.\n                        setTimeout(() => autoFocus.focus(), this.config.transitionDuration);\n                    }\n                }));\n\n            // Finally, set the popup to be open.\n            this._isOpen = true;\n            this.onOpen.emit();\n        }\n    }\n\n    public toggle():void {\n        if (!this.isOpen) {\n            return this.open();\n        }\n\n        return this.close();\n    }\n\n    public close():void {\n        // Only attempt to close if currently open.\n        if (this.isOpen) {\n            // Cancel all other transitions, and initiate the closing transition.\n            this.transitionController.stopAll();\n            this.transitionController.animate(\n                new Transition(this.config.transition, this.config.transitionDuration, TransitionDirection.Out));\n\n            // Cancel the closing timer.\n            clearTimeout(this.closingTimeout);\n            // Start the closing timer, that fires the `onClose` event after the transition duration number of milliseconds.\n            this.closingTimeout = window.setTimeout(() => this.onClose.emit(), this.config.transitionDuration);\n\n            // Finally, set the popup to be closed.\n            this._isOpen = false;\n        }\n    }\n\n    @HostListener(\"click\", [\"$event\"])\n    public onClick(event:MouseEvent):void {\n        // Makes sense here, as the popup shouldn't be attached to any DOM element.\n        event.stopPropagation();\n    }\n}\n","import { ComponentRef, ElementRef, HostListener, OnDestroy, Renderer2 } from \"@angular/core\";\nimport { SuiComponentFactory } from \"../../../misc/util/internal\";\nimport { PopupConfig, PopupTrigger, IPopupConfig } from \"./popup-config\";\nimport { SuiPopup } from \"../components/popup\";\nimport { IPopupLifecycle } from \"./popup-lifecycle\";\n\nexport interface IPopup {\n    open():void;\n    close():void;\n    toggle():void;\n}\n\nexport abstract class SuiPopupController implements IPopup, OnDestroy {\n    // Stores reference to generated popup component.\n    private _componentRef:ComponentRef<SuiPopup>;\n\n    // Returns generated popup instance.\n    public get popup():SuiPopup {\n        // Use non-null assertion as we only access this when a popup exists.\n        return this._componentRef.instance;\n    }\n\n    // `setTimeout` timer pointer for delayed popup open.\n    private _openingTimeout:number;\n\n    // Function to remove the document click handler.\n    private _documentListener:(() => void) | undefined;\n\n    constructor(protected _renderer:Renderer2,\n                protected _element:ElementRef,\n                protected _componentFactory:SuiComponentFactory,\n                config:PopupConfig) {\n\n        // Generate a new SuiPopup component and attach it to the application view.\n        this._componentRef = this._componentFactory.createComponent(SuiPopup);\n\n        // Configure popup with provided config.\n        this.popup.config = config;\n\n        // When the popup is closed (onClose fires on animation complete),\n        this.popup.onClose.subscribe(() => this.cleanup());\n    }\n\n    public configure(config?:IPopupConfig):void {\n        if (config) {\n            Object.assign(this.popup.config, config);\n        }\n    }\n\n    public openDelayed():void {\n        // Cancel the opening timer.\n        clearTimeout(this._openingTimeout);\n\n        // Start the popup opening after the specified delay interval.\n        this._openingTimeout = window.setTimeout(() => this.open(), this.popup.config.delay);\n    }\n\n    public open():void {\n        // Attach the generated component to the current application.\n        this._componentFactory.attachToApplication(this._componentRef);\n\n        if (this.popup.config.isInline) {\n            this._componentFactory.moveToElement(this._componentRef, this._element.nativeElement.parentElement);\n        } else {\n            // Move the generated element to the body to avoid any positioning issues.\n            this._componentFactory.moveToDocumentBody(this._componentRef);\n        }\n\n        // Attach a reference to the anchor element. We do it here because IE11 loves to complain.\n        this.popup.anchor = this._element;\n\n        // Add a listener to the document body to handle closing.\n        this._documentListener = this._renderer\n            .listen(\"document\", \"click\", (e:MouseEvent) =>\n                this.onDocumentClick(e));\n\n        // Start popup open transition.\n        this.popup.open();\n\n        // Call lifecyle hook\n        const lifecycle = (this as IPopupLifecycle).popupOnOpen;\n        if (lifecycle) {\n            lifecycle.call(this);\n        }\n    }\n\n    public close():void {\n        // Cancel the opening timer to stop the popup opening after close has been called.\n        clearTimeout(this._openingTimeout);\n\n        if (this._componentRef) {\n            // Start popup close transition.\n            this.popup.close();\n        }\n\n        // Call lifecyle hook\n        const lifecycle = (this as IPopupLifecycle).popupOnClose;\n        if (lifecycle) {\n            lifecycle.call(this);\n        }\n    }\n\n    public toggleDelayed():void {\n        // If the popup hasn't been created, or it has but it isn't currently open, open the popup.\n        if (!this._componentRef || (this._componentRef && !this.popup.isOpen)) {\n            return this.openDelayed();\n        }\n\n        // O'wise, close it.\n        return this.close();\n    }\n\n    public toggle():void {\n        // If the popup hasn't been created, or it has but it isn't currently open, open the popup.\n        if (!this._componentRef || (this._componentRef && !this.popup.isOpen)) {\n            return this.open();\n        }\n\n        // O'wise, close it.\n        return this.close();\n    }\n\n    @HostListener(\"mouseenter\")\n    public onMouseEnter():void {\n        if (this.popup.config.trigger === PopupTrigger.Hover) {\n            this.openDelayed();\n        }\n    }\n\n    @HostListener(\"mouseleave\")\n    public onMouseLeave():void {\n        if (this.popup.config.trigger === PopupTrigger.Hover) {\n            this.close();\n        }\n    }\n\n    @HostListener(\"click\")\n    public onClick():void {\n        if (this.popup.config.trigger === PopupTrigger.Click ||\n            this.popup.config.trigger === PopupTrigger.OutsideClick) {\n\n            // Repeated clicks require a toggle, rather than just opening the popup each time.\n            this.toggleDelayed();\n        } else if (this.popup.config.trigger === PopupTrigger.Focus &&\n                   (!this._componentRef || (this._componentRef && !this.popup.isOpen))) {\n            // Repeated clicks with a focus trigger requires an open (as focus isn't ever lost on repeated click).\n            this.openDelayed();\n        }\n    }\n\n    private onDocumentClick(e:MouseEvent):void {\n        // If the popup trigger is outside click,\n        if (this._componentRef && this.popup.config.trigger === PopupTrigger.OutsideClick) {\n            const target = e.target as Element;\n            // Close the popup if the click is outside of the popup element.\n            if (!(this._element.nativeElement as Element).contains(target)) {\n                this.close();\n            }\n        }\n    }\n\n    @HostListener(\"focusin\")\n    public onFocusIn():void {\n        if (this.popup.config.trigger === PopupTrigger.Focus) {\n            this.openDelayed();\n        }\n    }\n\n    @HostListener(\"focusout\", [\"$event\"])\n    public onFocusOut(e:any):void {\n        if (!this._element.nativeElement.contains(e.relatedTarget) &&\n            !this.popup.elementRef.nativeElement.contains(e.relatedTarget) &&\n            this.popup.config.trigger === PopupTrigger.Focus) {\n\n            this.close();\n        }\n    }\n\n    protected cleanup():void {\n        clearTimeout(this._openingTimeout);\n\n        if (this._componentRef.instance && this._componentRef.instance.positioningService) {\n            this._componentRef.instance.positioningService.destroy();\n        }\n\n        this._componentFactory.detachFromApplication(this._componentRef);\n\n        if (this._documentListener) {\n            this._documentListener();\n        }\n    }\n\n    public ngOnDestroy():void {\n        this.cleanup();\n    }\n}\n","import { ComponentRef, ElementRef, Type, Renderer2, OnDestroy } from \"@angular/core\";\nimport { SuiComponentFactory } from \"../../../misc/util/internal\";\nimport { SuiPopupController } from \"./popup-controller\";\nimport { PopupConfig } from \"./popup-config\";\n\nexport class SuiPopupComponentController<T> extends SuiPopupController {\n    // Stores reference to generated content component.\n    private _contentComponentRef?:ComponentRef<T>;\n\n    public get componentInstance():T | undefined {\n        if (this._contentComponentRef) {\n            return this._contentComponentRef.instance;\n        }\n    }\n\n    constructor(renderer:Renderer2,\n                element:ElementRef,\n                componentFactory:SuiComponentFactory,\n                private _component:Type<T>,\n                config:PopupConfig) {\n\n        super(renderer, element, componentFactory, config);\n    }\n\n    public open():void {\n        if (!this._contentComponentRef) {\n            this._contentComponentRef = this._componentFactory.createComponent(this._component as Type<T>);\n            this._componentFactory.attachToView(this._contentComponentRef, this.popup.templateSibling);\n        }\n\n        super.open();\n    }\n\n    protected cleanup():void {\n        super.cleanup();\n\n        if (this._contentComponentRef) {\n            this._contentComponentRef.destroy();\n            this._contentComponentRef = undefined;\n        }\n    }\n}\n","import { TemplateRef, Renderer2, ElementRef } from \"@angular/core\";\nimport { SuiPopupController, IPopup } from \"./popup-controller\";\nimport { ITemplateRefContext, SuiComponentFactory, IImplicitContext } from \"../../../misc/util/internal\";\nimport { PopupConfig, IPopupConfig } from \"./popup-config\";\n\nconst templateRef = TemplateRef;\n\nexport interface ITemplatePopupContext<T> extends IImplicitContext<IPopup> {\n    context?:T;\n}\n\nexport interface ITemplatePopupConfig<T> extends IPopupConfig {\n    template?:TemplateRef<ITemplatePopupContext<T>>;\n    context?:T;\n}\n\nexport class TemplatePopupConfig<T> extends PopupConfig {\n    public template?:TemplateRef<ITemplatePopupContext<T>>;\n    public context?:T;\n}\n\nexport class SuiPopupTemplateController<T> extends SuiPopupController {\n    public template?:TemplateRef<ITemplatePopupContext<T>>;\n    public context?:T;\n\n    constructor(renderer:Renderer2,\n                element:ElementRef,\n                componentFactory:SuiComponentFactory,\n                config:PopupConfig) {\n\n        super(renderer, element, componentFactory, config);\n    }\n\n    public configure(config?:ITemplatePopupConfig<T>):void {\n        super.configure(config);\n\n        if (config) {\n            this.template = config.template;\n            this.context = config.context;\n        }\n    }\n\n    public open():void {\n        // If there is a template, inject it into the view.\n        if (this.template) {\n            this.popup.templateSibling.clear();\n\n            this._componentFactory.createView(this.popup.templateSibling, this.template, {\n                $implicit: this.popup,\n                context: this.context\n            });\n        }\n\n        super.open();\n    }\n}\n","import { Component, Input, HostBinding } from \"@angular/core\";\nimport { PositioningPlacement } from \"../../../misc/util/internal\";\n\n@Component({\n    selector: \"sui-popup-arrow\",\n    template: `\n<div class=\"dynamic arrow\" [attr.direction]=\"direction\" *ngIf=\"alignment == 'center'\"></div>\n<div class=\"static arrow\" [attr.direction]=\"direction\" [attr.alignment]=\"alignment\" *ngIf=\"alignment != 'center'\"></div>\n`,\n    styles: [`\n.arrow {\n    position: absolute;\n    width: 0.71428571em;\n    height: 0.71428571em;\n    background: #ffffff;\n    -webkit-transform: rotate(45deg);\n    -ms-transform: rotate(45deg);\n    transform: rotate(45deg);\n    z-index: 2;\n}\n\n:host.inverted .arrow {\n    background: #1b1c1d;\n}\n\n.arrow[direction=\"top\"] {\n    bottom: -0.30714286em;\n    box-shadow: 1px 1px 0 0 #bababc;\n}\n\n.arrow[direction=\"left\"] {\n    right: -0.30714286em;\n    box-shadow: 1px -1px 1px 0 #bababc;\n}\n\n.arrow[direction=\"bottom\"] {\n    top: -0.30714286em;\n    box-shadow: -1px -1px 0 0 #bababc;\n}\n\n.arrow[direction=\"right\"] {\n    left: -0.30714286em;\n    box-shadow: -1px 1px 1px 0 #bababc;\n}\n\n.static.arrow[direction=\"bottom\"][alignment=\"left\"],\n.static.arrow[direction=\"top\"][alignment=\"left\"] {\n    left: 1em;\n    right: auto;\n}\n\n.static.arrow[direction=\"left\"][alignment=\"top\"],\n.static.arrow[direction=\"right\"][alignment=\"top\"] {\n    top: 1em;\n    bottom: auto;\n}\n\n.static.arrow[direction=\"bottom\"][alignment=\"right\"],\n.static.arrow[direction=\"top\"][alignment=\"right\"] {\n    left: auto;\n    right: 1em;\n}\n\n.static.arrow[direction=\"left\"][alignment=\"bottom\"],\n.static.arrow[direction=\"right\"][alignment=\"bottom\"] {\n    top: auto;\n    bottom: 1em;\n}\n`]\n})\nexport class SuiPopupArrow {\n    @Input()\n    public placement:PositioningPlacement;\n\n    @HostBinding(\"class.inverted\")\n    @Input()\n    public inverted:boolean;\n\n    public get direction():string | undefined {\n        if (this.placement) {\n            return this.placement.split(\" \").shift();\n        }\n    }\n\n    public get alignment():string | undefined {\n        if (this.placement) {\n            const alignment = this.placement.split(\" \").pop();\n            if (alignment === this.direction) {\n                return \"center\";\n            }\n            return alignment;\n        }\n    }\n}\n","import { Injectable } from \"@angular/core\";\nimport { PopupConfig } from \"../classes/popup-config\";\n\n@Injectable()\nexport class SuiPopupConfig extends PopupConfig {\n    constructor() {\n        // We use an empty constructor to ensure Angular DI works correctly.\n        super();\n    }\n}\n","import { Directive, Input, ElementRef, TemplateRef, Renderer2 } from \"@angular/core\";\nimport { ITemplateRefContext, Util, PositioningPlacement, SuiComponentFactory } from \"../../../misc/util/internal\";\nimport { SuiPopup } from \"../components/popup\";\nimport { PopupConfig, PopupTrigger, PopupSize, PopupWidth } from \"../classes/popup-config\";\nimport { SuiPopupConfig } from \"../services/popup.service\";\nimport { SuiPopupController } from \"../classes/popup-controller\";\nimport { SuiPopupTemplateController, ITemplatePopupContext, ITemplatePopupConfig } from \"../classes/popup-template-controller\";\n\nconst templateRef = TemplateRef;\n\n@Directive({\n    selector: \"[suiPopup]\",\n    exportAs: \"suiPopup\"\n})\nexport class SuiPopupDirective<T> extends SuiPopupTemplateController<T> {\n    @Input()\n    public set popupHeader(header:string) {\n        this.popup.config.header = header;\n    }\n\n    @Input()\n    public set popupText(text:string) {\n        this.popup.config.text = text;\n    }\n\n    @Input()\n    public set popupInverted(inverted:boolean) {\n        this.popup.config.isInverted = Util.DOM.parseBooleanAttribute(inverted);\n    }\n\n    @Input()\n    public set popupBasic(basic:boolean) {\n        this.popup.config.isBasic = Util.DOM.parseBooleanAttribute(basic);\n    }\n\n    @Input()\n    public set popupInline(inline:boolean) {\n        this.popup.config.isInline = Util.DOM.parseBooleanAttribute(inline);\n    }\n\n    @Input()\n    public set popupFlowing(flowing:boolean) {\n        this.popup.config.isFlowing = Util.DOM.parseBooleanAttribute(flowing);\n    }\n\n    @Input()\n    public set popupTransition(transition:string) {\n        this.popup.config.transition = transition;\n    }\n\n    @Input()\n    public set popupTransitionDuration(duration:number) {\n        this.popup.config.transitionDuration = duration;\n    }\n\n    @Input()\n    public set popupPlacement(placement:PositioningPlacement) {\n        this.popup.config.placement = placement;\n    }\n\n    @Input()\n    public set popupWidth(width:PopupWidth) {\n        this.popup.config.width = width;\n    }\n\n    @Input()\n    public set popupSize(size:PopupSize) {\n        this.popup.config.size = size;\n    }\n\n    @Input()\n    public set popupDelay(delay:number) {\n        this.popup.config.delay = delay;\n    }\n\n    @Input()\n    public get popupTrigger():PopupTrigger {\n        return this.popup.config.trigger;\n    }\n\n    public set popupTrigger(trigger:PopupTrigger) {\n        this.popup.config.trigger = trigger;\n    }\n\n    @Input()\n    public set popupTemplate(template:TemplateRef<ITemplatePopupContext<T>> | undefined) {\n        this.template = template;\n    }\n\n    @Input()\n    public set popupTemplateContext(context:T | undefined) {\n        this.context = context;\n    }\n\n    @Input()\n    public set popupConfig(config:ITemplatePopupConfig<T> | undefined) {\n        this.configure(config);\n    }\n\n    constructor(renderer:Renderer2,\n                element:ElementRef,\n                componentFactory:SuiComponentFactory,\n                popupDefaults:SuiPopupConfig) {\n\n        super(renderer, element, componentFactory, new PopupConfig(popupDefaults));\n    }\n}\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { SuiTransitionModule } from \"../transition/internal\";\nimport { SuiUtilityModule } from \"../../misc/util/internal\";\nimport { SuiPopupDirective } from \"./directives/popup.directive\";\nimport { SuiPopupArrow } from \"./components/popup-arrow\";\nimport { SuiPopup } from \"./components/popup\";\nimport { SuiPopupConfig } from \"./services/popup.service\";\n\n@NgModule({\n    imports: [\n        CommonModule,\n        SuiTransitionModule,\n        SuiUtilityModule\n    ],\n    declarations: [\n        SuiPopupDirective,\n        SuiPopupArrow,\n        SuiPopup\n    ],\n    exports: [\n        SuiPopupDirective,\n        SuiPopup\n    ],\n    providers: [\n        SuiPopupConfig\n    ],\n    entryComponents: [\n        SuiPopup\n    ]\n})\n\nexport class SuiPopupModule {}\n","import {\n    Directive, ElementRef, Renderer2, EventEmitter, Output, Input,\n    HostListener, OnChanges, SimpleChanges\n} from \"@angular/core\";\nimport { AbstractControl, ValidationErrors } from \"@angular/forms\";\nimport {\n    ICustomValueAccessorHost, customValueAccessorFactory, CustomValueAccessor,\n    ICustomValidatorHost, customValidatorFactory, CustomValidator, PositioningPlacement, SuiComponentFactory, KeyCode\n} from \"../../../misc/util/internal\";\nimport { IDatepickerLocaleValues, RecursivePartial, SuiLocalizationService } from \"../../../behaviors/localization/internal\";\nimport { SuiPopupComponentController, PopupAfterOpen, PopupConfig, PopupTrigger } from \"../../popup/internal\";\nimport { SuiDatepicker, DatepickerMode } from \"../components/datepicker\";\nimport { CalendarConfig, YearConfig, MonthConfig, DatetimeConfig, TimeConfig, DateConfig } from \"../classes/calendar-config\";\n\n@Directive({\n    selector: \"[suiDatepicker]\",\n    providers: [customValidatorFactory(SuiDatepickerDirective)]\n})\nexport class SuiDatepickerDirective\n       extends SuiPopupComponentController<SuiDatepicker>\n       implements ICustomValueAccessorHost<Date>, ICustomValidatorHost, OnChanges, PopupAfterOpen {\n\n    private _selectedDate?:Date;\n\n    public get selectedDate():Date | undefined {\n        return this._selectedDate;\n    }\n\n    public set selectedDate(date:Date | undefined) {\n        this._selectedDate = date;\n        this.onSelectedDateChange.emit(date);\n    }\n\n    private _mode:DatepickerMode;\n    public config:CalendarConfig;\n\n    @Input(\"pickerMode\")\n    public get mode():DatepickerMode {\n        return this._mode;\n    }\n\n    public set mode(mode:DatepickerMode) {\n        this._mode = mode || DatepickerMode.Datetime;\n        switch (this._mode) {\n            case DatepickerMode.Year:\n                this.config = new YearConfig();\n                break;\n            case DatepickerMode.Month:\n                this.config = new MonthConfig();\n                break;\n            case DatepickerMode.Date:\n            default:\n                this.config = new DateConfig();\n                break;\n            case DatepickerMode.Datetime:\n                this.config = new DatetimeConfig();\n                break;\n            case DatepickerMode.Time:\n                this.config = new TimeConfig();\n                break;\n        }\n        this.writeValue(this.selectedDate);\n    }\n\n    @Input(\"pickerInitialDate\")\n    public initialDate?:Date;\n\n    @Input(\"pickerMaxDate\")\n    public maxDate?:Date;\n\n    @Input(\"pickerMinDate\")\n    public minDate?:Date;\n\n    @Input(\"pickerFirstDayOfWeek\")\n    public firstDayOfWeek?:number;\n\n    private _localeValues:IDatepickerLocaleValues;\n\n    @Input(\"pickerLocaleOverrides\")\n    public localeOverrides:RecursivePartial<IDatepickerLocaleValues>;\n\n    public get localeValues():IDatepickerLocaleValues {\n        return this.localizationService.override<\"datepicker\">(this._localeValues, this.localeOverrides);\n    }\n\n    @Input(\"pickerPlacement\")\n    public set placement(placement:PositioningPlacement) {\n        this.popup.config.placement = placement;\n    }\n\n    @Input(\"pickerTransition\")\n    public set transition(transition:string) {\n        this.popup.config.transition = transition;\n    }\n\n    @Input(\"pickerTransitionDuration\")\n    public set transitionDuration(duration:number) {\n        this.popup.config.transitionDuration = duration;\n    }\n\n    @Output(\"pickerSelectedDateChange\")\n    public onSelectedDateChange:EventEmitter<Date>;\n\n    @Output(\"pickerValidatorChange\")\n    public onValidatorChange:EventEmitter<void>;\n\n    constructor(renderer:Renderer2,\n                element:ElementRef,\n                componentFactory:SuiComponentFactory,\n                public localizationService:SuiLocalizationService) {\n\n        super(renderer, element, componentFactory, SuiDatepicker, new PopupConfig({\n            trigger: PopupTrigger.Focus,\n            placement: PositioningPlacement.BottomLeft,\n            transition: \"scale\",\n            transitionDuration: 200\n        }));\n\n        // This ensures the popup is drawn correctly (i.e. no border).\n        this._renderer.addClass(this.popup.elementRef.nativeElement, \"ui\");\n        this._renderer.addClass(this.popup.elementRef.nativeElement, \"calendar\");\n\n        this.onLocaleUpdate();\n        this.localizationService.onLanguageUpdate.subscribe(() => this.onLocaleUpdate());\n\n        this.onSelectedDateChange = new EventEmitter<Date>();\n        this.onValidatorChange = new EventEmitter<void>();\n\n        this.mode = DatepickerMode.Datetime;\n    }\n\n    public popupOnOpen():void {\n        if (this.componentInstance) {\n            this.componentInstance.service.config = this.config;\n            this.componentInstance.service.localeValues = this.localeValues;\n            this.componentInstance.service.currentDate = this.initialDate || new Date();\n            this.componentInstance.service.selectedDate = this.selectedDate;\n            this.componentInstance.service.maxDate = this.maxDate;\n            this.componentInstance.service.minDate = this.minDate;\n\n            if (this.firstDayOfWeek != undefined) {\n                this.componentInstance.service.firstDayOfWeek = this.firstDayOfWeek;\n            }\n\n            this.componentInstance.service.reset();\n\n            this.componentInstance.service.onDateChange.subscribe((d:Date) => {\n                this.selectedDate = d;\n                this.close();\n            });\n        }\n    }\n\n    public ngOnChanges({ maxDate, minDate, mode }:SimpleChanges):void {\n        if (maxDate || minDate || mode) {\n            this.onValidatorChange.emit();\n        }\n    }\n\n    private onLocaleUpdate():void {\n        this._localeValues = this.localizationService.get().datepicker;\n    }\n\n    public validate(c:AbstractControl):ValidationErrors | null {\n        const value = c.value;\n\n        if (value != undefined) {\n            // We post process the min & max date because sometimes this puts the date outside of the allowed range.\n            if (this.minDate && value < this.minDate) {\n                return { suiMinDate: { required: this.minDate, actual: value } };\n            }\n\n            if (this.maxDate && value > this.maxDate) {\n                return { suiMaxDate: { required: this.maxDate, actual: value } };\n            }\n        }\n\n        // Angular expects null\n        // tslint:disable-next-line:no-null-keyword\n        return null;\n    }\n\n    public writeValue(value:Date | undefined):void {\n        this.selectedDate = value;\n\n        if (this.componentInstance) {\n            this.componentInstance.service.selectedDate = value;\n        }\n    }\n\n    @HostListener(\"keydown\", [\"$event\"])\n    public onKeyDown(e:KeyboardEvent):void {\n        if (e.keyCode === KeyCode.Escape) {\n            this.close();\n        }\n    }\n}\n\n@Directive({\n    selector: \"[suiDatepicker]\",\n    host: { \"(pickerSelectedDateChange)\": \"onChange($event)\" },\n    providers: [customValueAccessorFactory(SuiDatepickerDirectiveValueAccessor)]\n})\nexport class SuiDatepickerDirectiveValueAccessor extends CustomValueAccessor<Date, SuiDatepickerDirective> {\n    constructor(public host:SuiDatepickerDirective) { super(host); }\n}\n\n@Directive({\n    selector: \"[suiDatepicker]\",\n    host: { \"(pickerValidatorChange)\": \"onValidatorChange()\" },\n    providers: [customValidatorFactory(SuiDatepickerDirectiveValidator)]\n})\nexport class SuiDatepickerDirectiveValidator extends CustomValidator<SuiDatepickerDirective> {\n    constructor(public host:SuiDatepickerDirective) { super(host); }\n}\n","\nimport { Directive, Host, Input, ElementRef, HostBinding, HostListener, Renderer2 } from \"@angular/core\";\nimport { DateUtil, DatePrecision } from \"../../../misc/util/internal\";\nimport { SuiLocalizationService } from \"../../../behaviors/localization/internal\";\nimport { PopupTrigger } from \"../../popup/internal\";\nimport { SuiDatepickerDirective, SuiDatepickerDirectiveValueAccessor } from \"./datepicker.directive\";\nimport { InternalDateParser, DateParser } from \"../classes/date-parser\";\nimport * as bowser from \"bowser\";\n\nimport \"../helpers/is-webview\";\nimport * as isUAWebView from \"is-ua-webview\";\nconst isWebView = isUAWebView[\"default\"] || isUAWebView;\n\n@Directive({\n    selector: \"input[suiDatepicker]\"\n})\nexport class SuiDatepickerInputDirective {\n    private _useNativeOnMobile:boolean;\n\n    @Input(\"pickerUseNativeOnMobile\")\n    public get useNativeOnMobile():boolean {\n        return this._useNativeOnMobile;\n    }\n\n    public set useNativeOnMobile(fallback:boolean) {\n        this._useNativeOnMobile = fallback;\n        const isOnMobile = bowser.mobile || bowser.tablet || isWebView(navigator.userAgent);\n        this.fallbackActive = this.useNativeOnMobile && isOnMobile;\n    }\n\n    private _fallbackActive:boolean;\n\n    public get fallbackActive():boolean {\n        return this._fallbackActive;\n    }\n\n    public set fallbackActive(active:boolean) {\n        this._fallbackActive = active;\n        // If the fallback is active, then the trigger must be manual so the datepicker never opens.\n        this.datepicker.popup.config.trigger = this.fallbackActive ? PopupTrigger.Manual : PopupTrigger.Focus;\n        // Update the input value (this will insert the `T` as required).\n        this.updateValue(this.selectedDateString);\n    }\n\n    public get parser():DateParser {\n        if (this.fallbackActive) {\n            return new InternalDateParser(this.datepicker.mode, this.datepicker.localeValues);\n        }\n        return new DateParser(this.datepicker.localeValues.formats[this.datepicker.mode], this.datepicker.localeValues);\n    }\n\n    private _currentInputValue:string | undefined;\n    private _lastUpdateTyped:boolean;\n\n    public get selectedDateString():string | undefined {\n        if (this.datepicker.selectedDate) {\n            return this.parser.format(this.datepicker.selectedDate);\n        }\n    }\n\n    @HostBinding(\"attr.type\")\n    public get type():string {\n        if (this.fallbackActive) {\n            return this.datepicker.config.fallback;\n        }\n        return \"text\";\n    }\n\n    @HostBinding(\"attr.max\")\n    public get max():string | undefined {\n        if (this.fallbackActive && this.datepicker.maxDate) {\n            // Since HTML doesn't use a date object max is somewhat tricky.\n            // Our Datepicker will always choose the 1st date on the provided precision,\n            // meaning anything below the maxDate will work, hence endOf.\n            const max = DateUtil.endOf(this.datepicker.config.precision, DateUtil.clone(this.datepicker.maxDate));\n            return this.parser.format(max);\n        }\n    }\n\n    @HostBinding(\"attr.min\")\n    public get min():string | undefined {\n        if (this.fallbackActive && this.datepicker.minDate) {\n            // Since HTML doesn't use a date object min is somewhat tricky.\n            // We use 1 minute before the next date at the configured precision since\n            // our Datepicker picks the first available date at that precision.\n            const min = DateUtil.clone(this.datepicker.minDate);\n            return this.parser.format(min);\n        }\n    }\n\n    constructor(@Host() public datepicker:SuiDatepickerDirective,\n                @Host() public valueAccessor:SuiDatepickerDirectiveValueAccessor,\n                private _renderer:Renderer2,\n                private _element:ElementRef,\n                localizationService:SuiLocalizationService) {\n\n        this.useNativeOnMobile = true;\n        this.fallbackActive = false;\n\n        // Whenever the datepicker value updates, update the input text alongside it.\n        this.datepicker.onSelectedDateChange.subscribe(() =>\n            this.updateValue(this.selectedDateString));\n\n        localizationService.onLanguageUpdate.subscribe(() =>\n            this.updateValue(this.selectedDateString));\n    }\n\n    private updateValue(value:string | undefined):void {\n        // Only update the current value if it is different to what it's being updated to.\n        // This is so that the editing position isn't changed when manually typing the date.\n        if (!this._lastUpdateTyped) {\n            this._renderer.setProperty(this._element.nativeElement, \"value\", value || \"\");\n        }\n\n        this._lastUpdateTyped = false;\n    }\n\n    @HostListener(\"input\", [\"$event.target.value\"])\n    public typeValue(value:string | undefined):void {\n        this._lastUpdateTyped = true;\n        this._currentInputValue = value;\n\n        if (!value) {\n            // Delete the selected date if no date was entered manually.\n            return this.datepicker.writeValue(undefined);\n        }\n\n        const parsed = this.parser.parse(value, this.datepicker.selectedDate);\n        if (!isNaN(parsed.getTime()) && value === this.parser.format(parsed)) {\n            return this.datepicker.writeValue(parsed);\n        }\n        return this.datepicker.writeValue(undefined);\n    }\n\n    @HostListener(\"focusout\")\n    public onFocusOut():void {\n        this.valueAccessor.onTouched();\n    }\n}\n","import { Component, Renderer2 } from \"@angular/core\";\nimport { DateUtil, DatePrecision } from \"../../../misc/util/internal\";\nimport { CalendarItem } from \"../directives/calendar-item\";\nimport { CalendarView, CalendarViewType } from \"./calendar-view\";\nimport { CalendarRangeService } from \"../services/calendar-range.service\";\nimport { DateParser } from \"../classes/date-parser\";\n\nexport class CalendarRangeDateService extends CalendarRangeService {\n    public calcStart(start:Date):Date {\n        const monthStart = DateUtil.startOf(DatePrecision.Month, DateUtil.clone(start));\n        monthStart.setDate((1 - monthStart.getDay() + this.service.firstDayOfWeek - 7) % 7);\n        return monthStart;\n    }\n\n    public configureItem(item:CalendarItem, baseDate:Date):void {\n        item.humanReadable = item.date.getDate().toString();\n        item.isOutsideRange = item.date.getMonth() !== baseDate.getMonth();\n        item.isSelectable = item.isDisabled;\n    }\n}\n\n@Component({\n    selector: \"sui-calendar-date-view\",\n    template: `\n<table class=\"ui celled center aligned unstackable table seven column day\">\n<thead>\n    <tr>\n        <th colspan=\"7\">\n            <sui-calendar-view-title [ranges]=\"ranges\" (zoomOut)=\"zoomOut()\">\n                {{ date }}\n            </sui-calendar-view-title>\n        </th>\n    </tr>\n    <tr>\n        <th *ngFor=\"let day of days\">{{ day }}</th>\n    </tr>\n</thead>\n<tbody>\n    <tr *ngFor=\"let group of ranges.current.groupedItems\">\n        <td class=\"link\"\n            *ngFor=\"let item of group\"\n            [calendarItem]=\"item\"\n            (click)=\"setDate(item)\">{{ item.humanReadable }}\n        </td>\n    </tr>\n</tbody>\n</table>\n`\n})\nexport class SuiCalendarDateView extends CalendarView {\n    public get days():string[] {\n        const days = this.service.localeValues.weekdaysNarrow;\n        return days.map((d, i) => days[(i + this.service.firstDayOfWeek) % days.length]);\n    }\n\n    public get date():string {\n        return new DateParser(this.service.localeValues.formats.month, this.service.localeValues).format(this.currentDate);\n    }\n\n    constructor(renderer:Renderer2) {\n        super(renderer, CalendarViewType.Date, new CalendarRangeDateService(DatePrecision.Month, 6, 7));\n    }\n}\n","import { Component, Renderer2 } from \"@angular/core\";\nimport { DatePrecision } from \"../../../misc/util/internal\";\nimport { CalendarView, CalendarViewType } from \"./calendar-view\";\nimport { CalendarItem } from \"../directives/calendar-item\";\nimport { CalendarRangeService } from \"../services/calendar-range.service\";\nimport { DateParser } from \"../classes/date-parser\";\n\nexport class CalendarRangeHourService extends CalendarRangeService {\n    public configureItem(item:CalendarItem, baseDate:Date):void {\n        // Set minutes and seconds to 0\n        const customFormat:string = this.service.localeValues.formats.time.replace(/[ms]/g, \"0\");\n        item.humanReadable = new DateParser(customFormat, this.service.localeValues).format(item.date);\n        item.isOutsideRange = false;\n    }\n}\n\n@Component({\n    selector: \"sui-calendar-hour-view\",\n    template: `\n<table class=\"ui celled center aligned unstackable table four column hour\">\n<thead *ngIf=\"service.config.mode != 1\">\n    <tr>\n        <th colspan=\"4\">\n            <sui-calendar-view-title [ranges]=\"ranges\" (zoomOut)=\"zoomOut()\">\n                {{ date }}\n            </sui-calendar-view-title>\n        </th>\n    </tr>\n</thead>\n<tbody>\n    <tr *ngFor=\"let group of ranges.current.groupedItems\">\n        <td class=\"link\"\n            *ngFor=\"let item of group\"\n            [calendarItem]=\"item\"\n            (click)=\"setDate(item)\">{{ item.humanReadable }}\n        </td>\n    </tr>\n</tbody>\n</table>\n`\n})\nexport class SuiCalendarHourView extends CalendarView {\n\n    public get date():string {\n        return new DateParser(this.service.localeValues.formats.date, this.service.localeValues).format(this.currentDate);\n    }\n\n    constructor(renderer:Renderer2) {\n        super(renderer, CalendarViewType.Hour, new CalendarRangeHourService(DatePrecision.Date, 6, 4));\n    }\n}\n","import { Component, Renderer2 } from \"@angular/core\";\nimport { Util, DateUtil, DatePrecision } from \"../../../misc/util/internal\";\nimport { CalendarView, CalendarViewType } from \"./calendar-view\";\nimport { CalendarItem } from \"../directives/calendar-item\";\nimport { CalendarMode } from \"../services/calendar.service\";\nimport { CalendarRangeService } from \"../services/calendar-range.service\";\nimport { DateParser } from \"../classes/date-parser\";\n\nexport class CalendarRangeMinuteService extends CalendarRangeService {\n    public calcStart(start:Date):Date {\n        return DateUtil.startOf(DatePrecision.Hour, DateUtil.clone(start), true);\n    }\n\n    public calcDates(start:Date):Date[] {\n        return Util.Array\n            .range(this.length)\n            .map(i => DateUtil.add(DatePrecision.Minute, DateUtil.clone(start), i * 5));\n    }\n\n    public configureItem(item:CalendarItem, baseDate:Date):void {\n        item.humanReadable = new DateParser(this.service.localeValues.formats.time, this.service.localeValues).format(item.date);\n        item.isOutsideRange = false;\n    }\n}\n\n@Component({\n    selector: \"sui-calendar-minute-view\",\n    template: `\n<table class=\"ui celled center aligned unstackable table three column minute\">\n<thead>\n    <tr>\n        <th colspan=\"4\">\n            <sui-calendar-view-title [ranges]=\"ranges\" (zoomOut)=\"zoomOut()\">\n                {{ date }}\n            </sui-calendar-view-title>\n        </th>\n    </tr>\n</thead>\n<tbody>\n    <tr *ngFor=\"let group of ranges.current.groupedItems\">\n        <td class=\"link\"\n            *ngFor=\"let item of group\"\n            [calendarItem]=\"item\"\n            (click)=\"setDate(item)\">{{ item.humanReadable }}\n        </td>\n    </tr>\n</tbody>\n</table>\n`\n})\nexport class SuiCalendarMinuteView extends CalendarView {\n    public get date():string {\n        if (this.service.config.mode !== CalendarMode.TimeOnly) {\n            // Set minutes and seconds to 0\n            const dateTimeFormat:string = this.service.localeValues.formats.datetime.replace(/[ms]/g, \"0\");\n            return new DateParser(dateTimeFormat, this.service.localeValues).format(this.currentDate);\n        } else {\n            // Set minutes and seconds to 0\n            const timeFormat:string = this.service.localeValues.formats.time.replace(/[ms]/g, \"0\");\n            return new DateParser(timeFormat, this.service.localeValues).format(this.currentDate);\n        }\n    }\n\n    constructor(renderer:Renderer2) {\n        super(renderer, CalendarViewType.Minute, new CalendarRangeMinuteService(DatePrecision.Hour, 4, 3));\n    }\n}\n","import { Component, Renderer2 } from \"@angular/core\";\nimport { DatePrecision } from \"../../../misc/util/internal\";\nimport { CalendarView, CalendarViewType } from \"./calendar-view\";\nimport { CalendarItem } from \"../directives/calendar-item\";\nimport { CalendarRangeService } from \"../services/calendar-range.service\";\nimport { DateParser } from \"../classes/date-parser\";\n\nexport class CalendarRangeMonthService extends CalendarRangeService {\n    public configureItem(item:CalendarItem, baseDate:Date):void {\n        item.humanReadable = this.service.localeValues.monthsShort[item.date.getMonth()];\n        item.isOutsideRange = false;\n    }\n}\n\n@Component({\n    selector: \"sui-calendar-month-view\",\n    template: `\n<table class=\"ui celled center aligned unstackable table three column month\">\n<thead>\n    <tr>\n        <th colspan=\"3\">\n            <sui-calendar-view-title [ranges]=\"ranges\" (zoomOut)=\"zoomOut()\">\n                {{ year }}\n            </sui-calendar-view-title>\n        </th>\n    </tr>\n</thead>\n<tbody>\n    <tr *ngFor=\"let group of ranges.current.groupedItems\">\n        <td class=\"link\"\n            *ngFor=\"let item of group\"\n            [calendarItem]=\"item\"\n            (click)=\"setDate(item)\">{{ item.humanReadable }}\n        </td>\n    </tr>\n</tbody>\n</table>\n`\n})\nexport class SuiCalendarMonthView extends CalendarView {\n    public get year():string {\n        return new DateParser(this.service.localeValues.formats.year, this.service.localeValues).format(this.currentDate);\n    }\n\n    constructor(renderer:Renderer2) {\n        super(renderer, CalendarViewType.Month, new CalendarRangeMonthService(DatePrecision.Year, 4, 3));\n    }\n}\n","import { Component, Renderer2 } from \"@angular/core\";\nimport { Util, DateUtil, DatePrecision } from \"../../../misc/util/internal\";\nimport { CalendarView, CalendarViewType } from \"./calendar-view\";\nimport { CalendarItem } from \"../directives/calendar-item\";\nimport { CalendarRangeService } from \"../services/calendar-range.service\";\n\nexport class CalendarRangeYearService extends CalendarRangeService {\n    public configureItem(item:CalendarItem, baseDate:Date):void {\n        item.humanReadable = Util.String.padLeft(item.date.getFullYear().toString(), 4, \"0\");\n        item.isOutsideRange = item.date.getFullYear() >= this.calcStart(baseDate).getFullYear() + 10;\n    }\n}\n\n@Component({\n    selector: \"sui-calendar-year-view\",\n    template: `\n<table class=\"ui celled center aligned unstackable table three column year\">\n<thead>\n    <tr>\n        <th colspan=\"3\">\n            <sui-calendar-view-title [ranges]=\"ranges\" (zoomOut)=\"zoomOut()\">\n                {{ pad(decadeStart) }} - {{ pad(decadeStart + 10) }}\n            </sui-calendar-view-title>\n        </th>\n    </tr>\n</thead>\n<tbody>\n    <tr *ngFor=\"let group of ranges.current.groupedItems\">\n        <td class=\"link\"\n            *ngFor=\"let item of group\"\n            [calendarItem]=\"item\"\n            (click)=\"setDate(item)\">{{ item.humanReadable }}\n        </td>\n    </tr>\n</tbody>\n</table>\n`\n})\nexport class SuiCalendarYearView extends CalendarView {\n    public get decadeStart():number {\n        return DateUtil\n            .startOf(DatePrecision.Decade, DateUtil.clone(this.service.currentDate))\n            .getFullYear();\n    }\n\n    constructor(renderer:Renderer2) {\n        super(renderer, CalendarViewType.Year, new CalendarRangeYearService(DatePrecision.Decade, 4, 3));\n    }\n\n    public pad(year:number):string {\n        return Util.String.padLeft(year.toString(), 4, \"0\");\n    }\n}\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { FormsModule } from \"@angular/forms\";\nimport { SuiPopupModule } from \"../popup/internal\";\nimport { SuiLocalizationModule } from \"../../behaviors/localization/internal\";\nimport { SuiUtilityModule } from \"../../misc/util/internal\";\nimport { SuiCalendarViewTitle } from \"./components/calendar-view-title\";\nimport { SuiCalendarYearView } from \"./views/year-view\";\nimport { SuiCalendarMonthView } from \"./views/month-view\";\nimport { SuiCalendarItem } from \"./directives/calendar-item\";\nimport { SuiCalendarDateView } from \"./views/date-view\";\nimport { SuiDatepicker } from \"./components/datepicker\";\nimport { SuiCalendarHourView } from \"./views/hour-view\";\nimport { SuiCalendarMinuteView } from \"./views/minute-view\";\nimport { SuiDatepickerInputDirective } from \"./directives/input.directive\";\nimport {\n    SuiDatepickerDirective, SuiDatepickerDirectiveValueAccessor,\n    SuiDatepickerDirectiveValidator\n} from \"./directives/datepicker.directive\";\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        SuiPopupModule,\n        SuiLocalizationModule,\n        SuiUtilityModule\n    ],\n    declarations: [\n        SuiCalendarItem,\n\n        SuiCalendarViewTitle,\n        SuiCalendarYearView,\n        SuiCalendarMonthView,\n        SuiCalendarDateView,\n        SuiCalendarHourView,\n        SuiCalendarMinuteView,\n\n        SuiDatepicker,\n        SuiDatepickerDirective,\n        SuiDatepickerDirectiveValueAccessor,\n        SuiDatepickerDirectiveValidator,\n        SuiDatepickerInputDirective\n    ],\n    exports: [\n        SuiDatepickerDirective,\n        SuiDatepickerDirectiveValueAccessor,\n        SuiDatepickerDirectiveValidator,\n        SuiDatepickerInputDirective\n    ],\n    entryComponents: [\n        SuiDatepicker\n    ]\n})\nexport class SuiDatepickerModule {}\n","import {\n    Component, Input, Output, HostBinding, HostListener, EventEmitter, Renderer2,\n    ElementRef, ChangeDetectorRef\n} from \"@angular/core\";\nimport { TransitionController, SuiTransition, TransitionDirection, Transition } from \"../../transition/internal\";\n\n@Component({\n    selector: \"sui-dimmer\",\n    template: `\n<div [class.content]=\"wrapContent\">\n    <ng-content></ng-content>\n</div>\n`,\n    styles: [`\n:host.dimmer:not(.hidden) {\n    transition: none;\n    display: flex !important;\n}\n`]\n})\nexport class SuiDimmer extends SuiTransition {\n    @HostBinding(\"class.ui\")\n    @HostBinding(\"class.dimmer\")\n    public readonly hasClasses:boolean;\n\n    private _transitionController:TransitionController;\n\n    private _isDimmed:boolean;\n\n    @HostBinding(\"class.active\")\n    @Input()\n    public get isDimmed():boolean {\n        return this._isDimmed;\n    }\n\n    public set isDimmed(value:boolean) {\n        const isDimmed = !!value;\n\n        if (!this._transitionController) {\n            // Initialise transition functionality when first setting dimmed, to ensure initial state doesn't transition.\n            this._transitionController = new TransitionController(isDimmed, \"block\");\n\n            this.setTransitionController(this._transitionController);\n\n            this._isDimmed = isDimmed;\n        } else if (this._isDimmed !== isDimmed) {\n\n            this._isDimmed = isDimmed;\n\n            this._transitionController.stopAll();\n            this._transitionController.animate(\n                new Transition(\"fade\", this.transitionDuration, isDimmed ? TransitionDirection.In : TransitionDirection.Out));\n        }\n    }\n\n    @Output()\n    public isDimmedChange:EventEmitter<boolean>;\n\n    @Input()\n    public isClickable:boolean;\n\n    @Input()\n    public transition:string;\n\n    @Input()\n    public transitionDuration:number;\n\n    /* Internal for now */\n    @Input()\n    public wrapContent:boolean;\n\n    constructor(renderer:Renderer2, element:ElementRef, changeDetector:ChangeDetectorRef) {\n        super(renderer, element, changeDetector);\n\n        this._isDimmed = false;\n        this.isDimmedChange = new EventEmitter<boolean>();\n        this.isClickable = true;\n\n        this.wrapContent = true;\n\n        this.hasClasses = true;\n    }\n\n    @HostListener(\"click\")\n    public onClick():void {\n        if (this.isClickable) {\n            this.isDimmed = false;\n            this.isDimmedChange.emit(this.isDimmed);\n        }\n    }\n}\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { SuiTransitionModule } from \"../transition/internal\";\nimport { SuiDimmer } from \"./components/dimmer\";\n\n@NgModule({\n    imports: [\n        CommonModule,\n        SuiTransitionModule\n    ],\n    declarations: [\n        SuiDimmer\n    ],\n    exports: [\n        SuiDimmer\n    ]\n})\nexport class SuiDimmerModule {}\n","import { EventEmitter } from \"@angular/core\";\n\nexport type DropdownAutoCloseType = \"itemClick\" | \"outsideClick\" | \"disabled\";\n\n// Creates essentially a 'string' enum.\nexport const DropdownAutoCloseType = {\n    ItemClick: \"itemClick\" as DropdownAutoCloseType,\n    OutsideClick: \"outsideClick\" as DropdownAutoCloseType,\n    Disabled: \"disabled\" as DropdownAutoCloseType\n};\n\nexport class DropdownService {\n    // Open state of the dropdown\n    public isOpen:boolean;\n    // Animating state of the dropdown.\n    public isAnimating:boolean;\n    // Emitter for when dropdown open state changes.\n    public isOpenChange:EventEmitter<boolean>;\n\n    public isDisabled:boolean;\n\n    // Sets the \"autoclose\" mode of the dropdown - i.e. what user action causes it to autoclose.\n    public autoCloseMode:DropdownAutoCloseType;\n\n    // Keep track of the containing dropdown so we can open it as necessary.\n    public parent?:DropdownService;\n    // Also keep track of dropdowns nested in this one so we can close them as necessary.\n    public children:DropdownService[];\n    public get isNested():boolean {\n        return !!this.parent;\n    }\n\n    constructor(autoCloseMode:DropdownAutoCloseType = DropdownAutoCloseType.ItemClick) {\n        this.isOpen = false;\n        this.isOpenChange = new EventEmitter<boolean>();\n\n        this.isDisabled = false;\n\n        this.autoCloseMode = autoCloseMode;\n\n        this.children = [];\n    }\n\n    public setOpenState(isOpen:boolean, reflectInParent:boolean = false):void {\n        if (this.isOpen !== isOpen && !this.isDisabled) {\n            // Only update the state if it has changed, and the dropdown isn't disabled.\n            this.isOpen = !!isOpen;\n            this.isAnimating = true;\n            // We must delay the emitting to avoid the 'changed after checked' Angular errors.\n            this.delay(() => this.isOpenChange.emit(this.isOpen));\n\n            if (!this.isOpen) {\n                // Close the child dropdowns when this one closes.\n                this.children.forEach(c => c.setOpenState(this.isOpen));\n            }\n\n            if (this.parent && reflectInParent) {\n                // Open the parent dropdowns when this one opens.\n                this.parent.setOpenState(this.isOpen, true);\n            }\n        } else if (this.isOpen !== isOpen && this.isDisabled) {\n            // If the state has changed, but the dropdown is disabled, re-emit the original isOpen value.\n            this.delay(() => this.isOpenChange.emit(this.isOpen));\n        }\n    }\n\n    public setDisabledState(isDisabled:boolean):void {\n        if (this.isDisabled !== isDisabled) {\n            if (!!isDisabled) {\n                // Close the dropdown as it is now disabled\n                this.setOpenState(false);\n            }\n\n            this.isDisabled = !!isDisabled;\n        }\n    }\n\n    public toggleOpenState():void {\n        this.setOpenState(!this.isOpen);\n    }\n\n    // Registers a dropdown service as a child of this service.\n    public registerChild(child:DropdownService):void {\n        if (!this.isChildRegistered(child)) {\n            this.children.push(child);\n            child.parent = this;\n        }\n    }\n\n    // Recursive method to check if the provided dropdown is already registered as a child, or is a descendant of a child.\n    public isChildRegistered(child:DropdownService):boolean {\n        return this === child || !!this.children\n            .find(c => !!c.children\n                .find(cChild => cChild.isChildRegistered(child)));\n    }\n\n    // Wipes any nested data, so all services can be cleanly reattached.\n    public clearChildren():void {\n        this.children.forEach(c => {\n            c.parent = undefined;\n        });\n        this.children = [];\n    }\n\n    // Method for delaying an event into the next tick, to avoid Angular \"changed after checked\" error.\n    private delay(callback:() => void):void {\n        setTimeout(() => callback());\n    }\n}\n","import {\n    Directive, ContentChild, forwardRef, Renderer2, ElementRef, AfterContentInit,\n    ContentChildren, QueryList, Input, HostListener, ChangeDetectorRef, OnDestroy\n} from \"@angular/core\";\nimport { Transition, SuiTransition, TransitionController, TransitionDirection } from \"../../transition/internal\";\nimport { HandledEvent, IAugmentedElement, KeyCode } from \"../../../misc/util/internal\";\nimport { DropdownService, DropdownAutoCloseType } from \"../services/dropdown.service\";\n// Polyfill for IE\nimport \"element-closest\";\n\n@Directive({\n    // We must attach to every '.item' as Angular doesn't support > selectors.\n    selector: \".item\"\n})\nexport class SuiDropdownMenuItem {\n    public get isDisabled():boolean {\n        // We must use nativeElement as Angular doesn't have a way of reading class information.\n        const element = this.element.nativeElement as Element;\n        return element.classList.contains(\"disabled\");\n    }\n\n    private _isSelected:boolean;\n\n    public get isSelected():boolean {\n        return this._isSelected;\n    }\n\n    public set isSelected(value:boolean) {\n        // Renderer is used to enable a dynamic class name.\n        if (value) {\n            this._renderer.addClass(this.element.nativeElement, this.selectedClass);\n        } else {\n            this._renderer.removeClass(this.element.nativeElement, this.selectedClass);\n        }\n    }\n\n    // Stores the class name used for a 'selected' item.\n    public selectedClass:string;\n\n    @ContentChild(forwardRef(() => SuiDropdownMenu))\n    public childDropdownMenu:SuiDropdownMenu;\n\n    public get hasChildDropdown():boolean {\n        return !!this.childDropdownMenu;\n    }\n\n    constructor(private _renderer:Renderer2, public element:ElementRef) {\n        this.isSelected = false;\n\n        this.selectedClass = \"selected\";\n    }\n\n    public performClick():void {\n        // Using directly because Renderer2 doesn't have invokeElementMethod method anymore.\n        this.element.nativeElement.click();\n    }\n}\n\n@Directive({\n    selector: \"[suiDropdownMenu]\"\n})\nexport class SuiDropdownMenu extends SuiTransition implements AfterContentInit, OnDestroy {\n    private _service:DropdownService;\n    private _transitionController:TransitionController;\n\n    @Input()\n    public menuTransition:string;\n\n    @Input()\n    public menuTransitionDuration:number;\n\n    public get service():DropdownService {\n        return this._service;\n    }\n\n    public set service(value:DropdownService) {\n        this._service = value;\n\n        let previousIsOpen = this._service.isOpen;\n        this._service.isOpenChange.subscribe((isOpen:boolean) => {\n            if (isOpen !== previousIsOpen) {\n                // Only run transitions if the open state has changed.\n                this._transitionController.stopAll();\n                this._transitionController.animate(\n                    new Transition(\n                        this.menuTransition,\n                        this.menuTransitionDuration,\n                        TransitionDirection.Either,\n                        () => this._service.isAnimating = false));\n            }\n\n            if (!isOpen) {\n                // Reset the item selections when a nested item is selected to avoid incosistent open states.\n                if (this.selectedItems.length > 1) {\n                    this.resetSelection();\n                }\n            }\n\n            previousIsOpen = isOpen;\n        });\n    }\n\n    public set parentElement(value:ElementRef) {\n        this._parentKeyDownListener = this._renderer\n            .listen(value.nativeElement, \"keydown\", (e:KeyboardEvent) =>\n                this.onParentKeyDown(e));\n    }\n\n    @ContentChildren(SuiDropdownMenuItem)\n    private _itemsQueryInternal:QueryList<SuiDropdownMenuItem>;\n\n    private _itemsQueryOverride:QueryList<SuiDropdownMenuItem>;\n\n    public set items(items:QueryList<SuiDropdownMenuItem>) {\n        this._itemsQueryOverride = items;\n    }\n\n    private get _itemsQuery():QueryList<SuiDropdownMenuItem> {\n        return this._itemsQueryOverride || this._itemsQueryInternal;\n    }\n\n    // Get the list of items, ignoring those that are disabled.\n    private get _items():SuiDropdownMenuItem[] {\n        return this._itemsQuery.filter(i => !i.isDisabled);\n    }\n\n    // Stack that keeps track of the currently selected item.\n    // Selected items lower in the stack are necessarily the parent of the item one higher.\n    public selectedItems:SuiDropdownMenuItem[];\n\n    // Sets whether or not to automatically select the 1st item when the dropdown is opened.\n    @Input()\n    public menuAutoSelectFirst:boolean;\n\n    @Input()\n    public menuSelectedItemClass:string;\n\n    private _parentKeyDownListener:() => void;\n\n    constructor(renderer:Renderer2, element:ElementRef, changeDetector:ChangeDetectorRef) {\n        super(renderer, element, changeDetector);\n\n        // Initialise transition functionality.\n        this._transitionController = new TransitionController(false);\n        this.setTransitionController(this._transitionController);\n\n        this.menuTransition = \"slide down\";\n        this.menuTransitionDuration = 200;\n\n        this.menuAutoSelectFirst = false;\n        this.menuSelectedItemClass = \"selected\";\n\n        // In case the dropdown menu is destroyed before it has a chance to be fully initialised.\n        this._parentKeyDownListener = () => {};\n    }\n\n    @HostListener(\"click\", [\"$event\"])\n    public onClick(e:HandledEvent & MouseEvent):void {\n        if (!e.eventHandled) {\n            e.eventHandled = true;\n\n            if (this._service.autoCloseMode === DropdownAutoCloseType.ItemClick) {\n                const target = e.target as IAugmentedElement;\n                if (this._element.nativeElement.contains(target.closest(\".item\")) && !/input|textarea/i.test(target.tagName)) {\n                    // Once an item is selected, we can close the entire dropdown.\n                    this._service.setOpenState(false, true);\n                }\n            }\n        }\n    }\n\n    public onParentKeyDown(e:KeyboardEvent):void {\n        // Only the root dropdown (i.e. not nested dropdowns) is responsible for keeping track of the currently selected item.\n        if (this._service && this._service.isOpen && !this._service.isNested) {\n            // Stop document events like scrolling while open.\n            const target = e.target as Element;\n            if (!/input/i.test(target.tagName) &&\n                [KeyCode.Escape, KeyCode.Enter, KeyCode.Up, KeyCode.Down, KeyCode.Left, KeyCode.Right].find(kC => kC === e.keyCode)) {\n                e.preventDefault();\n            }\n\n            // Gets the top selected item from the stack.\n            const [selected] = this.selectedItems.slice(-1);\n            // Keeping track of the menu containing the currently selected element allows us to easily determine its siblings.\n            let selectedContainer:SuiDropdownMenu = this;\n            if (this.selectedItems.length >= 2) {\n                const [selectedParent] = this.selectedItems.slice(-2);\n                selectedContainer = selectedParent.childDropdownMenu;\n            }\n\n            switch (e.keyCode) {\n                // Escape : close the entire dropdown.\n                case KeyCode.Escape: {\n                    this._service.setOpenState(false);\n                    break;\n                }\n                // Down : select the next item below the current one, or the 1st if none selected.\n                case KeyCode.Down:\n                // Up : select the next item above the current one, or the 1st if none selected.\n                case KeyCode.Up: {\n                    this.selectedItems.pop();\n                    this.selectedItems.push(selectedContainer.updateSelection(selected, e.keyCode));\n                    // Prevent default regardless of whether we are in an input, to stop jumping to the start or end of the query string.\n                    e.preventDefault();\n                    break;\n                }\n                // Enter : if the item doesn't contain a nested dropdown, 'click' it. Otherwise, fall through to 'Right' action.\n                case KeyCode.Enter: {\n                    if (selected && !selected.hasChildDropdown) {\n                        selected.performClick();\n                        break;\n                    }\n                }\n                    // falls through\n                // Right : if the selected item contains a nested dropdown, open the dropdown & select the 1st item.\n                case KeyCode.Right: {\n                    if (selected && selected.hasChildDropdown) {\n                        selected.childDropdownMenu.service.setOpenState(true);\n\n                        this.selectedItems.push(selected.childDropdownMenu.updateSelection(selected, e.keyCode));\n                    }\n                    break;\n                }\n                // Left : if the selected item is in a nested dropdown, close it and select the containing item.\n                case KeyCode.Left: {\n                    if (this.selectedItems.length >= 2) {\n                        this.selectedItems.pop();\n                        const [selectedParent] = this.selectedItems.slice(-1);\n\n                        selectedParent.childDropdownMenu.service.setOpenState(false);\n                        selectedParent.isSelected = true;\n                    }\n                    break;\n                }\n            }\n        }\n    }\n\n    public resetSelection():void {\n        this.selectedItems = [];\n        this._items.forEach(i => {\n            i.selectedClass = this.menuSelectedItemClass;\n            i.isSelected = false;\n        });\n\n        if (this.menuAutoSelectFirst && this._items.length > 0) {\n            // Autoselect 1st item if required & possible.\n            this._items[0].isSelected = true;\n            this.scrollToItem(this._items[0]);\n            this.selectedItems.push(this._itemsQuery.first);\n        }\n    }\n\n    // Determines the item to next be selected, based on the keyboard input & the currently selected item.\n    public updateSelection(selectedItem:SuiDropdownMenuItem, keyCode:KeyCode):SuiDropdownMenuItem {\n        if (selectedItem) {\n            // Remove the selected status on the previously selected item.\n            selectedItem.isSelected = false;\n        }\n\n        let selectedIndex = this._items\n            .findIndex(i => i === selectedItem);\n\n        let newSelection:SuiDropdownMenuItem;\n\n        switch (keyCode) {\n            case KeyCode.Enter:\n            case KeyCode.Right:\n            case KeyCode.Down:\n                selectedIndex += 1;\n                break;\n            case KeyCode.Up:\n                if (selectedIndex === -1) {\n                    // If none are selected, select the 1st item. Should this be `this.items.last - 1`?\n                    selectedIndex = 0;\n                    break;\n                }\n\n                selectedIndex -= 1;\n                break;\n        }\n\n        // Select the item at the updated index. The || is to stop us selecting past the start or end of the item list.\n        newSelection = this._items[selectedIndex] || selectedItem;\n\n        if (newSelection) {\n            // Set the selected status on the newly selected item.\n            newSelection.isSelected = true;\n\n            // Set the current scroll position to the location of the newly selected item.\n            this.scrollToItem(newSelection);\n        }\n\n        return newSelection;\n    }\n\n    public scrollToItem(item:SuiDropdownMenuItem):void {\n        const menu:Element = this._element.nativeElement;\n        const selectedRect:ClientRect = item.element.nativeElement.getBoundingClientRect();\n\n        const menuRect = menu.getBoundingClientRect();\n\n        let scrollAmount = 0;\n\n        if (selectedRect.bottom > menuRect.bottom) {\n            scrollAmount = selectedRect.bottom - menuRect.bottom;\n        }\n\n        if (selectedRect.top < menuRect.top) {\n            scrollAmount = selectedRect.top - menuRect.top;\n        }\n\n        menu.scrollTop += Math.round(scrollAmount);\n    }\n\n    public ngAfterContentInit():void {\n        this.onItemsChanged();\n        this._itemsQuery.changes.subscribe(() => this.onItemsChanged());\n    }\n\n    private onItemsChanged():void {\n        // We use `_items` rather than `items` in case one or more have become disabled.\n        this.resetSelection();\n    }\n\n    public ngOnDestroy():void {\n        this._parentKeyDownListener();\n    }\n}\n","import {\n    Directive, Input, HostBinding, EventEmitter, Output, AfterContentInit, ContentChild,\n    ElementRef, HostListener, QueryList, ContentChildren\n} from \"@angular/core\";\nimport { HandledEvent, KeyCode, IFocusEvent } from \"../../../misc/util/internal\";\nimport { DropdownService, DropdownAutoCloseType } from \"../services/dropdown.service\";\nimport { SuiDropdownMenu } from \"./dropdown-menu\";\n\n@Directive({\n    selector: \"[suiDropdown]\"\n})\nexport class SuiDropdown implements AfterContentInit {\n    public service:DropdownService;\n\n    @ContentChild(SuiDropdownMenu)\n    private _menu:SuiDropdownMenu;\n\n    @ContentChildren(SuiDropdown, { descendants: true })\n    private _children:QueryList<SuiDropdown>;\n\n    public get children():SuiDropdown[] {\n        // @ContentChildren includes the current element by default.\n        return this._children.filter(c => c !== this);\n    }\n\n    @Output()\n    public get isOpenChange():EventEmitter<boolean> {\n        return this.service.isOpenChange;\n    }\n\n    @HostBinding(\"class.active\")\n    public get isActive():boolean {\n        // This is to ensure nested dropdowns don't get made bold.\n        return this.service.isOpen && !this.service.isNested;\n    }\n\n    @Input()\n    public get isOpen():boolean {\n        return this.service.isOpen;\n    }\n\n    public set isOpen(value:boolean) {\n        // If we are opening the dropdown, we want to always open its parents.\n        this.service.setOpenState(value, !!value);\n    }\n\n    @HostBinding(\"class.disabled\")\n    @Input()\n    public get isDisabled():boolean {\n        return this.service.isDisabled;\n    }\n\n    public set isDisabled(value:boolean) {\n        this.service.setDisabledState(value);\n    }\n\n    @Input(\"tabindex\")\n    private _tabIndex?:number;\n\n    @HostBinding(\"attr.tabindex\")\n    public get tabIndex():number | undefined {\n        if (this.isDisabled || this.service.isNested) {\n            // If disabled, remove from tabindex.\n            return undefined;\n        }\n        if (this._tabIndex != undefined) {\n            // If custom tabindex, default to that.\n            return this._tabIndex;\n        }\n        // Otherwise, return default of 0.\n        return 0;\n    }\n\n    @Input()\n    public get autoClose():DropdownAutoCloseType {\n        return this.service.autoCloseMode;\n    }\n\n    public set autoClose(value:DropdownAutoCloseType) {\n        this.service.autoCloseMode = value;\n    }\n\n    constructor(private _element:ElementRef) {\n        this.service = new DropdownService();\n        this.service.isOpenChange.subscribe(() => {\n            if (this.service.isOpen) {\n                this._element.nativeElement.focus();\n            }\n        });\n    }\n\n    public ngAfterContentInit():void {\n        if (!this._menu) {\n            throw new Error(\"You must set [suiDropdownMenu] on the menu element.\");\n        }\n        this._menu.service = this.service;\n        this._menu.parentElement = this._element;\n\n        this.childrenUpdated();\n        this._children.changes\n            .subscribe(() => this.childrenUpdated());\n    }\n\n    private childrenUpdated():void {\n        // Reregister child dropdowns each time the menu content changes.\n        this.children\n            .map(c => c.service)\n            .forEach(s => this.service.registerChild(s));\n    }\n\n    @HostListener(\"click\", [\"$event\"])\n    public onClick(e:HandledEvent):void {\n        if (!e.eventHandled) {\n            e.eventHandled = true;\n\n            this.service.toggleOpenState();\n        }\n    }\n\n    @HostListener(\"focusout\", [\"$event\"])\n    public onFocusOut(e:IFocusEvent):void {\n        if (!this._element.nativeElement.contains(e.relatedTarget)) {\n            this.externallyClose();\n        }\n    }\n\n    @HostListener(\"keypress\", [\"$event\"])\n    public onKeypress(e:HandledEvent & KeyboardEvent):void {\n        // Block the keyboard event from being fired on parent dropdowns.\n        if (!e.eventHandled) {\n\n            if (e.keyCode === KeyCode.Enter) {\n                e.eventHandled = true;\n\n                this.service.setOpenState(true);\n            }\n        }\n    }\n\n    private externallyClose():void {\n        if (this.service.autoCloseMode === DropdownAutoCloseType.ItemClick ||\n                this.service.autoCloseMode === DropdownAutoCloseType.OutsideClick) {\n                // No need to reflect in parent since they are also bound to document.\n            this.service.setOpenState(false);\n        }\n    }\n}\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { SuiTransitionModule } from \"../transition/internal\";\nimport { SuiDropdown } from \"./directives/dropdown\";\nimport { SuiDropdownMenu, SuiDropdownMenuItem } from \"./directives/dropdown-menu\";\n\n@NgModule({\n    imports: [\n        CommonModule,\n        SuiTransitionModule\n    ],\n    declarations: [\n        SuiDropdown,\n        SuiDropdownMenu,\n        SuiDropdownMenuItem\n    ],\n    exports: [\n        SuiDropdown,\n        SuiDropdownMenu,\n        SuiDropdownMenuItem\n    ]\n})\nexport class SuiDropdownModule {}\n","import { ComponentRef } from \"@angular/core\";\nimport { ModalConfig } from \"./modal-config\";\nimport { SuiModal } from \"../components/modal\";\n\n// Helper class to support method chaining when calling `SuiModalService.open(...)`.\nexport class ActiveModal<T, U, V> {\n    private _config:ModalConfig<T, U, V>;\n    private _componentRef:ComponentRef<SuiModal<U, V>>;\n\n    // Shorthand for direct access to the `SuiModal` instance.\n    public get component():SuiModal<U, V> {\n        return this._componentRef.instance;\n    }\n\n    constructor(instance:ModalConfig<T, U, V>, componentRef:ComponentRef<SuiModal<U, V>>) {\n        this._config = instance;\n        this._componentRef = componentRef;\n\n        // Automatically destroy the modal component when it has been dismissed.\n        this.component.onDismiss.subscribe(() => this._componentRef.destroy());\n    }\n\n    // Registers a callback for when `onApprove` is fired.\n    public onApprove(callback:(result:U) => void):ActiveModal<T, U, V> {\n        this.component.onApprove.subscribe((res:U) => callback(res));\n        return this;\n    }\n\n    // Registers a callback for when `onDeny` is fired.\n    public onDeny(callback:(result:V) => void):ActiveModal<T, U, V> {\n        this.component.onDeny.subscribe((res:V) => callback(res));\n        return this;\n    }\n\n    // Fires the approve event of the modal manually.\n    public approve(result:U):void {\n        this.component.approve(result);\n    }\n\n    // Fires the deny event of the modal manually.\n    public deny(result:V):void {\n        this.component.deny(result);\n    }\n\n    // Removes the modal component instantly, without transitions or firing any events.\n    public destroy():void {\n        this._componentRef.destroy();\n    }\n}\n","import { Type } from \"@angular/core\";\nimport { ModalTemplate } from \"./modal-template\";\n\nexport type ModalSize = \"mini\" | \"tiny\" | \"small\" | \"normal\" | \"large\";\n\nexport const ModalSize = {\n    Mini: \"mini\" as ModalSize,\n    Tiny: \"tiny\" as ModalSize,\n    Small: \"small\" as ModalSize,\n    Normal: \"normal\" as ModalSize,\n    Large: \"large\" as ModalSize\n};\n\n// Stores a basic set of configuration options for a modal.\nexport class ModalConfig<T, U = undefined, V = undefined> {\n    // Determines whether the modal can be closed with a close button, clicking outside, or the escape key.\n    public isClosable:boolean;\n    // Value to deny with when closing via `isClosable`.\n    public closeResult:V;\n\n    // Data to pass to the modal instance when opened.\n    public context?:T;\n\n    // Size used to display the modal.\n    public size:ModalSize;\n    // Whether the modal takes up the full width of the screen.\n    public isFullScreen:boolean;\n    // Whether or not the modal has basic styles applied.\n    public isBasic:boolean;\n    // Whether the modal shows against a light background.\n    public isInverted:boolean;\n    // Whether or not the modal should be placed in the center of the page.\n    public isCentered:boolean;\n\n    // Whether or not the modal should always display a scrollbar.\n    public mustScroll:boolean;\n\n    // Transition to display modal with.\n    public transition:string;\n    // Duration of the modal & dimmer transitions.\n    public transitionDuration:number;\n\n    constructor(context:T | undefined = undefined, isClosable:boolean = true) {\n        // Initialise with default values.\n        this.isClosable = isClosable;\n        this.context = context;\n\n        this.size = ModalSize.Normal;\n        this.isFullScreen = false;\n        this.isBasic = false;\n        this.isInverted = false;\n        this.isCentered = true;\n\n        this.mustScroll = false;\n\n        this.transition = \"scale\";\n        this.transitionDuration = 500;\n    }\n}\n\n// Used when creating a modal from a `TemplateRef`.\nexport class TemplateModalConfig<T, U = undefined, V = undefined> extends ModalConfig<T, U, V> {\n    public template:ModalTemplate<T, U, V>;\n\n    constructor(template:ModalTemplate<T, U, V>, context:T | undefined = undefined, isClosable:boolean = true) {\n        super(context, isClosable);\n\n        this.template = template;\n    }\n}\n\n// Used when creating a modal from an existing component.\nexport class ComponentModalConfig<T, U = undefined, V = undefined> extends ModalConfig<T, U, V> {\n    public component:Type<any>;\n\n    constructor(component:Type<any>, context:T | undefined = undefined, isClosable:boolean = true) {\n        super(context, isClosable);\n\n        this.component = component;\n    }\n}\n","// Shorthand to avoid writing arrow types everywhere.\nexport type ModalResult<T> = (result:T) => void;\n\n// Used to pass ability to control a modal to a component.\nexport class ModalControls<T, U> {\n    constructor(approve:ModalResult<T>, deny:ModalResult<U>) {\n        this.approve = approve;\n        this.deny = deny;\n    }\n\n    // Use method here rather than arrow variables to make intellisense show they're methods.\n    public approve(result:T):void {}\n    public deny(result:U):void {}\n}\n\n// Injected into custom modal components, to allow control of the modal, and access to a context object.\nexport class Modal<T, U = undefined, V = undefined> extends ModalControls<U, V> {\n    public context:T;\n\n    constructor(controls:ModalControls<U, V>, context:T) {\n        // Instances of `ModalControls` are only created in the `SuiModal` constructor,\n        // so we take an initialised instance rather than remaking one each time.\n        super(controls.approve, controls.deny);\n\n        this.context = context;\n    }\n}\n","import { TemplateRef } from \"@angular/core\";\nimport { ModalControls } from \"./modal-controls\";\n\n// Shorthand for a modal template. Sets up ability to write: `<ng-template let-context let-modal=\"modal\">...</ng-template>`\n// We use an abstract class as ModalTemplate tends to be used within decorated properties, which means it needs to exist!\nexport abstract class ModalTemplate<T, U, V> extends TemplateRef<{ $implicit:T; modal:ModalControls<U, V> }> {}\n","import {\n    Component, Input, OnInit, ViewChild, ElementRef, Renderer2,\n    EventEmitter, Output, HostListener, ViewContainerRef, AfterViewInit\n} from \"@angular/core\";\nimport { Util, IDynamicClasses, KeyCode, SuiComponentFactory } from \"../../../misc/util/internal\";\nimport { TransitionController, Transition, TransitionDirection } from \"../../transition/internal\";\nimport { ModalControls, ModalResult } from \"../classes/modal-controls\";\nimport { ModalConfig, ModalSize } from \"../classes/modal-config\";\n\n@Component({\n    selector: \"sui-modal\",\n    template: `\n<!-- Page dimmer for modal background. -->\n<sui-modal-dimmer [ngClass]=\"{'top aligned': !isCentered}\" \n                  [class.inverted]=\"isInverted\"\n                  [(isDimmed)]=\"dimBackground\"\n                  [transitionDuration]=\"transitionDuration\"\n                  (click)=\"close()\">\n\n    <!-- Modal component, with transition component attached -->\n    <div class=\"ui modal\"\n         [suiTransition]=\"transitionController\"\n         [class.active]=\"transitionController?.isVisible\"\n         [class.fullscreen]=\"isFullScreen\"\n         [class.basic]=\"isBasic\"\n         [class.scrolling]=\"mustScroll\"\n         [class.inverted]=\"isInverted\"\n         [ngClass]=\"dynamicClasses\"\n         (click)=\"onClick($event)\"\n         #modal>\n\n        <!-- Configurable close icon -->\n        <i class=\"close icon\" *ngIf=\"isClosable\" (click)=\"close()\"></i>\n        <!-- <ng-content> so that <sui-modal> can be used as a normal component. -->\n        <ng-content></ng-content>\n        <!-- @ViewChild reference so we can insert elements beside this div. -->\n        <div #templateSibling></div>\n    </div>\n</sui-modal-dimmer>\n`,\n    styles: [``]\n})\nexport class SuiModal<T, U> implements OnInit, AfterViewInit {\n    @Input()\n    // Determines whether the modal can be closed with a close button, clicking outside, or the escape key.\n    public isClosable:boolean;\n\n    @Input()\n    // Value to deny with when closing via `isClosable`.\n    public closeResult:U;\n\n    // Separate class for the `approve` and `deny` methods to support passing into components.\n    public controls:ModalControls<T, U>;\n\n    public get approve():ModalResult<T> {\n        return this.controls.approve;\n    }\n\n    public get deny():ModalResult<U> {\n        return this.controls.deny;\n    }\n\n    // Fires when the modal closes, after `approve` has been called.\n    @Output(\"approved\")\n    public onApprove:EventEmitter<T>;\n\n    // Fires when the modal closes, after `deny` has been called.\n    @Output(\"denied\")\n    public onDeny:EventEmitter<U>;\n\n    // Fires when the modal closes.\n    @Output(\"dismissed\")\n    public onDismiss:EventEmitter<void>;\n\n    @ViewChild(\"modal\")\n    private _modalElement:ElementRef;\n\n    // Size used to display the modal.\n    @Input()\n    public size:ModalSize;\n\n    @Input()\n    public isCentered:boolean;\n\n    // Whether the modal takes up the full width of the screen.\n    private _isFullScreen:boolean;\n\n    // Value to deny with when closing via `isClosable`.\n    @Input()\n    public get isFullScreen():boolean {\n        return this._isFullScreen;\n    }\n\n    public set isFullScreen(fullScreen:boolean) {\n        this._isFullScreen = Util.DOM.parseBooleanAttribute(fullScreen);\n    }\n\n    // Whether or not the modal has basic styles applied.\n    @Input()\n    public isBasic:boolean;\n\n    // Whether the modal currently is displaying a scrollbar.\n    private _mustScroll:boolean;\n    // Whether or not the modal should always display a scrollbar.\n    private _mustAlwaysScroll:boolean;\n\n    @Input()\n    public get mustScroll():boolean {\n        return this._mustScroll;\n    }\n\n    public set mustScroll(mustScroll:boolean) {\n        this._mustScroll = mustScroll;\n        // 'Cache' value in _mustAlwaysScroll so that if `true`, _mustScroll isn't ever auto-updated.\n        this._mustAlwaysScroll = mustScroll;\n        this.updateScroll();\n    }\n\n    // Whether the modal shows against a light background.\n    private _isInverted:boolean;\n\n    @Input()\n    public get isInverted():boolean {\n        return this._isInverted;\n    }\n\n    public set isInverted(inverted:boolean) {\n        this._isInverted = Util.DOM.parseBooleanAttribute(inverted);\n    }\n\n    public transitionController:TransitionController;\n\n    // Transition to display modal with.\n    @Input()\n    public transition:string;\n\n    // Duration of the modal & dimmer transitions.\n    @Input()\n    public transitionDuration:number;\n\n    // Whether or not the backround dimmer is active.\n    public dimBackground:boolean;\n    // True after `approve` or `deny` has been called.\n    private _isClosing:boolean;\n\n    // `ViewContainerRef` for the element the template gets injected as a sibling of.\n    @ViewChild(\"templateSibling\", { read: ViewContainerRef })\n    public templateSibling:ViewContainerRef;\n\n    // Parent element of modal before relocation to document body.\n    private _originalContainer?:Element;\n\n    public get dynamicClasses():IDynamicClasses {\n        const classes:IDynamicClasses = {};\n        if (this.size) {\n            classes[this.size] = true;\n        }\n        return classes;\n    }\n\n    constructor(private _renderer:Renderer2, private _element:ElementRef, private _componentFactory:SuiComponentFactory) {\n        // Initialise with default configuration from `ModalConfig` (to avoid writing defaults twice).\n        const config = new ModalConfig<undefined, T, U>();\n        this.loadConfig(config);\n\n        // Event emitters for each of the possible modal outcomes.\n        this.onApprove = new EventEmitter<T>();\n        this.onDeny = new EventEmitter<U>();\n        this.onDismiss = new EventEmitter<void>();\n\n        // Initialise controls with actions for the `approve` and `deny` cases.\n        this.controls = new ModalControls<T, U>(\n            res => this.dismiss(() => this.onApprove.emit(res)),\n            res => this.dismiss(() => this.onDeny.emit(res)));\n\n        // Internal variable initialisation.\n        this.dimBackground = false;\n        this._isClosing = false;\n        this.transitionController = new TransitionController(false);\n    }\n\n    public ngOnInit():void {\n        // Transition the modal to be visible.\n        this.transitionController.animate(new Transition(this.transition, this.transitionDuration, TransitionDirection.In));\n        setTimeout(() => this.dimBackground = true);\n    }\n\n    public ngAfterViewInit():void {\n        // Move the modal to the document body to ensure correct scrolling.\n        this._originalContainer = this._element.nativeElement.parentNode;\n        document.querySelector(\"body\")!.appendChild(this._element.nativeElement);\n        // Remove the #templateSibling element from the DOM to fix bottom border styles.\n        const templateElement = this.templateSibling.element.nativeElement as Element;\n        if (templateElement.parentNode) {\n            templateElement.parentNode.removeChild(templateElement);\n        }\n\n        const element = this._modalElement.nativeElement as Element;\n        setTimeout(() => this.updateScroll());\n\n        // Focus any element with [autofocus] attribute.\n        const autoFocus = element.querySelector(\"[autofocus]\") as HTMLElement | null;\n        if (autoFocus) {\n            // Autofocus after the browser has had time to process other event handlers.\n            setTimeout(() => autoFocus.focus(), 10);\n            // Try to focus again when the modal has opened so that autofocus works in IE11.\n            setTimeout(() => autoFocus.focus(), this.transitionDuration);\n        }\n    }\n\n    // Updates the modal with the specified configuration.\n    public loadConfig<V>(config:ModalConfig<V, T, U>):void {\n        this.isClosable = config.isClosable;\n        this.closeResult = config.closeResult;\n\n        this.size = config.size;\n        this.isFullScreen = config.isFullScreen;\n        this.isBasic = config.isBasic;\n        this.isInverted = config.isInverted;\n        this.isCentered = config.isCentered;\n\n        this.mustScroll = config.mustScroll;\n\n        this.transition = config.transition;\n        this.transitionDuration = config.transitionDuration;\n    }\n\n    // Dismisses the modal with a transition, firing the callback after the modal has finished transitioning.\n    private dismiss(callback:() => void = () => {}):void {\n        // If we aren't currently closing,\n        if (!this._isClosing) {\n            this._isClosing = true;\n\n            // Transition the modal to be invisible.\n            this.dimBackground = false;\n            this.transitionController.stopAll();\n            this.transitionController.animate(\n                new Transition(this.transition, this.transitionDuration, TransitionDirection.Out, () => {\n                    // When done, move the modal back to its original location, emit a dismiss event, and fire the callback.\n                    if (this._originalContainer) {\n                        this._originalContainer.appendChild(this._element.nativeElement);\n                    }\n                    this.onDismiss.emit();\n                    callback();\n                }));\n        }\n    }\n\n    // Closes the modal with a 'deny' outcome, using the specified default reason.\n    public close():void {\n        if (this.isClosable) {\n            // If we are allowed to close, fire the deny result with the default value.\n            this.deny(this.closeResult);\n        }\n    }\n\n    // Decides whether the modal needs to reposition to allow scrolling.\n    private updateScroll():void {\n\n        // _mustAlwaysScroll works by stopping _mustScroll from being automatically updated, so it stays `true`.\n        if (!this._mustAlwaysScroll && this._modalElement) {\n\n            // Semantic UI modal margin and dimmer padding are 1rem, which is relative to the global font size, so for compatibility:\n            const fontSize = parseFloat(window.getComputedStyle(document.documentElement).getPropertyValue(\"font-size\"));\n            const margin = fontSize * 2;\n            const element = this._modalElement.nativeElement as Element;\n\n            // The modal must scroll if the window height is smaller than the modal height + both margins.\n            this._mustScroll = window.innerHeight < element.clientHeight + margin * 2;\n        }\n    }\n\n    public onClick(e:MouseEvent):void {\n        // Makes sense here, as the modal shouldn't be attached to any DOM element.\n        e.stopPropagation();\n    }\n\n    // Document listener is fine here because nobody will have enough modals open.\n    @HostListener(\"document:keyup\", [\"$event\"])\n    public onDocumentKeyUp(e:KeyboardEvent):void {\n        if (e.keyCode === KeyCode.Escape) {\n            // Close automatically covers case of `!isClosable`, so check not needed.\n            this.close();\n        }\n    }\n\n    @HostListener(\"window:resize\")\n    public onDocumentResize():void {\n        this.updateScroll();\n    }\n}\n","import { Injectable } from \"@angular/core\";\nimport { SuiComponentFactory } from \"../../../misc/util/internal\";\nimport { ModalConfig, TemplateModalConfig, ComponentModalConfig } from \"../classes/modal-config\";\nimport { SuiModal } from \"../components/modal\";\nimport { Modal } from \"../classes/modal-controls\";\nimport { ActiveModal } from \"../classes/active-modal\";\n\n@Injectable()\nexport class SuiModalService {\n    constructor(private _componentFactory:SuiComponentFactory) {}\n\n    public open<T, U, V>(modal:ModalConfig<T, U, V>):ActiveModal<T, U, V> {\n        // Generate the modal component to be shown.\n        const componentRef = this._componentFactory.createComponent<SuiModal<U, V>>(SuiModal);\n\n        // Shorthand for the created modal component instance.\n        const modalComponent = componentRef.instance;\n\n        if (modal instanceof TemplateModalConfig) {\n            // Inject the template into the view.\n            this._componentFactory.createView(modalComponent.templateSibling, modal.template, {\n                // `let-context`\n                $implicit: modal.context,\n                // `let-modal=\"modal\"`\n                modal: componentRef.instance.controls\n            });\n        } else if (modal instanceof ComponentModalConfig) {\n            // Generate the component to be used as the modal content,\n            // injecting an instance of `Modal` to be used in the component constructor.\n            const contentComponentRef = this._componentFactory.createComponent(\n                modal.component,\n                [\n                    {\n                        provide: Modal,\n                        useValue: new Modal(modalComponent.controls, modal.context)\n                    }\n                ]\n            );\n\n            // Insert the new component into the content of the modal.\n            this._componentFactory.attachToView(contentComponentRef, modalComponent.templateSibling);\n\n            // Shorthand for access to the content component's DOM element.\n            const contentElement = contentComponentRef.location.nativeElement as Element;\n\n            // Move all of the DOM elements inside the component to the main modal element.\n            // This is done so that CSS classes apply correctly. It does stop any custom styles from working however,\n            // so other ways may have to be investigated.\n            while (contentElement.hasChildNodes() && contentElement.parentElement && contentElement.firstChild) {\n                contentElement.parentElement.appendChild(contentElement.removeChild(contentElement.firstChild));\n            }\n            // Remove the generated component's 'empty shell' from the DOM.\n            this._componentFactory.detachFromDocument(contentComponentRef);\n        }\n\n        // Attach the new modal component to the application.\n        // The component will move itself to the document body for correctl styling.\n        this._componentFactory.attachToApplication(componentRef);\n\n        // Initialise the generated modal with the provided config.\n        modalComponent.loadConfig(modal);\n\n        // Return an instance of an `ActiveModal`, so the user can control the new modal.\n        return new ActiveModal(modal, componentRef);\n    }\n}\n","import { Component, HostBinding, Renderer2, ElementRef, ChangeDetectorRef } from \"@angular/core\";\nimport { SuiDimmer } from \"../../dimmer/internal\";\n\n@Component({\n    selector: \"sui-modal-dimmer\",\n    template: `<ng-content></ng-content>`,\n    styles: [`\n        :host.ui.dimmer:not(.hidden) {\n            transition: none;\n            overflow-y: auto;\n            display: flex !important; \n        }\n    `]\n})\nexport class SuiModalDimmer extends SuiDimmer {\n\n    @HostBinding(\"class.page\")\n    @HostBinding(\"class.modals\")\n    public readonly hasClasses:boolean;\n\n    constructor(renderer:Renderer2, element:ElementRef, changeDetector:ChangeDetectorRef) {\n        super(renderer, element, changeDetector);\n        this.hasClasses = true;\n        this.isClickable = false;\n    }\n}\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { SuiDimmerModule } from \"../dimmer/internal\";\nimport { SuiTransitionModule } from \"../transition/internal\";\nimport { SuiUtilityModule } from \"../../misc/util/internal\";\nimport { SuiModalService } from \"./services/modal.service\";\nimport { SuiModal } from \"./components/modal\";\nimport { SuiModalDimmer } from \"./components/dimmer\";\n\n@NgModule({\n    imports: [\n        CommonModule,\n        SuiDimmerModule,\n        SuiTransitionModule,\n        SuiUtilityModule\n    ],\n    declarations: [\n        SuiModal,\n        SuiModalDimmer\n    ],\n    exports: [\n        SuiModal\n    ],\n    providers: [\n        SuiModalService\n    ],\n    entryComponents: [\n        SuiModal\n    ]\n})\nexport class SuiModalModule {}\n","import { Component, Input, HostBinding } from \"@angular/core\";\n\n@Component({\n    selector: \"sui-progress\",\n    template: `\n<div class=\"bar\" [style.width.%]=\"percentage\">\n    <div class=\"progress\" *ngIf=\"showProgress\">{{ percentage }}%</div>\n</div>\n<div class=\"label\">\n    <ng-content></ng-content>\n</div>\n`,\n    styles: [`\n.bar {\n    transition-duration: 300ms !important;\n    z-index: 1;\n}\n`]\n})\nexport class SuiProgress {\n    @HostBinding(\"class.ui\")\n    @HostBinding(\"class.progress\")\n    public readonly hasClasses:boolean;\n\n    private _value:number;\n    private _maximum:number;\n    private _precision:number;\n\n    private _overrideSuccess:boolean;\n\n    @Input()\n    public autoSuccess:boolean;\n\n    @Input()\n    public showProgress:boolean;\n\n    @Input()\n    public get value():number {\n        return this._value;\n    }\n\n    public set value(value:number) {\n        // Convert value from string to number where necessary.\n        const converted = +value;\n\n        if (Number.isNaN(converted)) {\n            return;\n        }\n\n        this._value = converted;\n    }\n\n    @Input()\n    public get maximum():number {\n        return this._maximum;\n    }\n\n    public set maximum(value:number) {\n        // Convert value from string to number where necessary.\n        const converted = +value;\n\n        if (Number.isNaN(converted)) {\n            return;\n        }\n\n        this._maximum = converted;\n    }\n\n    @Input()\n    public get precision():number {\n        return this._precision;\n    }\n\n    public set precision(value:number) {\n        // Convert value from string to number where necessary.\n        const converted = +value;\n\n        if (Number.isNaN(converted)) {\n            return;\n        }\n\n        this._precision = Math.min(Math.max(converted, 0), 20);\n    }\n\n    @HostBinding(\"class.success\")\n    public get reachedMaximum():boolean {\n        return this._overrideSuccess || ((this.value >= this.maximum) && this.autoSuccess);\n    }\n\n    @HostBinding(\"attr.data-percent\")\n    public get percentage():string {\n        const boundedValue = Math.min(Math.max(this.value, 0), this.maximum);\n\n        const percentage = (boundedValue / this.maximum) * 100;\n\n        return percentage.toFixed(this.precision);\n    }\n\n    @Input(\"class\")\n    public set classValue(classes:string) {\n        if (classes.includes(\"attached\") || classes.includes(\"tiny\")) {\n            this.showProgress = false;\n        }\n        if (classes.includes(\"success\")) {\n            this._overrideSuccess = true;\n        }\n    }\n\n    constructor() {\n        this.value = 0;\n        this.maximum = 100;\n        this.precision = 0;\n\n        this._overrideSuccess = false;\n        this.autoSuccess = true;\n        this.showProgress = true;\n\n        this.hasClasses = true;\n    }\n}\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { SuiProgress } from \"./components/progress\";\n\n@NgModule({\n    imports: [\n        CommonModule\n    ],\n    declarations: [\n        SuiProgress\n    ],\n    exports: [\n        SuiProgress\n    ]\n})\nexport class SuiProgressModule {}\n","import { Component, Directive, Input, Output, EventEmitter, HostBinding, HostListener } from \"@angular/core\";\nimport { ICustomValueAccessorHost, customValueAccessorFactory, CustomValueAccessor } from \"../../../misc/util/internal\";\n\n@Component({\n    selector: \"sui-rating\",\n    template: `\n<i class=\"icon\"\n   *ngFor=\"let icon of icons; let i = index\"\n   (mouseover)=\"onMouseover(i)\"\n   (click)=\"onClick(i)\"\n   [class.selected]=\"hoveredIndex >= i && !isReadonly\"\n   [class.active]=\"value > i\">\n</i>\n`,\n    styles: [`\n:host.read-only .icon {\n    cursor: auto\n}\n`]\n})\nexport class SuiRating implements ICustomValueAccessorHost<number> {\n    @HostBinding(\"class.ui\")\n    @HostBinding(\"class.rating\")\n    public readonly hasClasses:boolean;\n\n    public value:number;\n\n    @Output()\n    public valueChange:EventEmitter<number>;\n\n    private _maximum:number;\n\n    @Input()\n    public get maximum():number {\n        return this._maximum;\n    }\n\n    public set maximum(value:number) {\n        this._maximum = +value;\n    }\n\n    @HostBinding(\"class.read-only\")\n    @Input()\n    public isReadonly:boolean;\n\n    public get icons():undefined[] {\n        // tslint:disable-next-line:prefer-literal\n        return new Array(this.maximum);\n    }\n\n    public hoveredIndex:number = -1;\n\n    constructor() {\n        this.value = 0;\n        this.valueChange = new EventEmitter<number>();\n\n        this.maximum = 5;\n        this.isReadonly = false;\n\n        this.hasClasses = true;\n    }\n\n    public onClick(i:number):void {\n        if (!this.isReadonly) {\n            this.value = i + 1;\n            this.valueChange.emit(this.value);\n        }\n    }\n\n    public onMouseover(i:number):void {\n        this.hoveredIndex = i;\n    }\n\n    @HostListener(\"mouseout\")\n    public onMouseout():void {\n        this.hoveredIndex = -1;\n    }\n\n    public writeValue(value:number):void {\n        this.value = value;\n    }\n}\n\n@Directive({\n    selector: \"sui-rating\",\n    host: { \"(valueChange)\": \"onChange($event)\" },\n    providers: [customValueAccessorFactory(SuiRatingValueAccessor)]\n})\nexport class SuiRatingValueAccessor extends CustomValueAccessor<number, SuiRating> {\n    constructor(host:SuiRating) {\n        super(host);\n    }\n}\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { FormsModule } from \"@angular/forms\";\nimport { SuiRating, SuiRatingValueAccessor } from \"./components/rating\";\n\n@NgModule({\n    imports: [\n        FormsModule,\n        CommonModule\n    ],\n    declarations: [\n        SuiRating,\n        SuiRatingValueAccessor\n    ],\n    exports: [\n        SuiRating,\n        SuiRatingValueAccessor\n    ]\n})\nexport class SuiRatingModule {}\n","import {\n    Component, ViewChild, ViewContainerRef, Renderer2, ElementRef, HostBinding,\n    Input, TemplateRef\n} from \"@angular/core\";\nimport { ITemplateRefContext, SuiComponentFactory } from \"../../../misc/util/internal\";\nimport { IResultContext } from \"./search\";\n\n// See https://github.com/Microsoft/TypeScript/issues/13449.\nconst templateRef = TemplateRef;\n\n@Component({\n    selector: \"sui-search-result\",\n    template: `\n<span #templateSibling></span>\n<span *ngIf=\"!template\" [innerHTML]=\"formatter(value, query)\"></span>\n`\n})\nexport class SuiSearchResult<T> {\n    // Sets the Semantic UI classes on the host element.\n    @HostBinding(\"class.result\")\n    public readonly hasClasses:boolean;\n\n    @Input()\n    public value:T;\n\n    @Input()\n    public query:string;\n\n    // Returns the label from a given value.\n    @Input()\n    public formatter:(obj:T, query:string) => string;\n\n    private _template?:TemplateRef<IResultContext<T>>;\n\n    @Input()\n    public get template():TemplateRef<IResultContext<T>> | undefined {\n        return this._template;\n    }\n\n    public set template(template:TemplateRef<IResultContext<T>> | undefined) {\n        this._template = template;\n        if (this.template) {\n            this.componentFactory.createView(this.templateSibling, this.template, {\n                $implicit: this.value,\n                query: this.query\n            });\n        }\n    }\n\n    // Placeholder to draw template beside.\n    @ViewChild(\"templateSibling\", { read: ViewContainerRef })\n    public templateSibling:ViewContainerRef;\n\n    constructor(public componentFactory:SuiComponentFactory) {\n        this.hasClasses = true;\n\n        // By default we make this function return an empty string, for the brief moment when it isn't displaying the correct label.\n        this.formatter = value => \"\";\n    }\n}\n","import { Util } from \"../../../misc/util/internal\";\nimport { LookupFn, LookupFnResult, FilterFn } from \"../helpers/lookup-fn\";\n\ninterface ICachedArray<T> { [query:string]:T[]; }\n\nexport class SearchService<T, U> {\n    // Stores the available options.\n    private _options:T[];\n    // Converts a query string into an array of options. Must be a function returning a promise.\n    private _optionsLookup?:LookupFn<T, U>;\n    // Field that options are searched & displayed on.\n    private _optionsField?:string;\n    // Filters a list of options.\n    public optionsFilter:FilterFn<T>;\n\n    public get options():T[] {\n        return this._options;\n    }\n\n    public set options(options:T[]) {\n        this._options = options || [];\n        // We cannot use both local & remote options simultaneously.\n        this._optionsLookup = undefined;\n        // Reset entire service with new options.\n        this.reset();\n    }\n\n    public get optionsLookup():LookupFn<T, U> | undefined {\n        return this._optionsLookup;\n    }\n\n    public set optionsLookup(lookupFn:LookupFn<T, U> | undefined) {\n        this._optionsLookup = lookupFn;\n        // As before, cannot use local & remote options simultaneously.\n        this._options = [];\n        this.reset();\n    }\n\n    public get hasItemLookup():boolean {\n        return !!this.optionsLookup && this.optionsLookup.length === 2;\n    }\n\n    public get optionsField():string | undefined {\n        return this._optionsField;\n    }\n\n    public set optionsField(field:string | undefined) {\n        this._optionsField = field;\n        // We need to reset otherwise we would now be showing invalid search results.\n        this.reset();\n    }\n\n    // Stores the results of the query.\n    private _results:T[];\n    // Cache of results, indexed by query.\n    private _resultsCache:ICachedArray<T>;\n\n    public get results():T[] {\n        return this._results;\n    }\n\n    private _query:string;\n    // Allows the empty query to produce results.\n    public allowEmptyQuery:boolean;\n    // How long to delay the search for when using updateQueryDelayed. Stored in ms.\n    public searchDelay:number;\n    // Stores the search timeout handle so we can cancel it.\n    private _searchDelayTimeout:number;\n    // Provides 'loading' functionality.\n    private _isSearching:boolean;\n\n    public get query():string {\n        return this._query;\n    }\n\n    public get isSearching():boolean {\n        return this._isSearching;\n    }\n\n    constructor(allowEmptyQuery:boolean = false) {\n        this._options = [];\n        this.optionsFilter = (os, q) => {\n            // Convert the query string to a RegExp.\n            const regex = this.toRegex(this._query);\n\n            if (regex instanceof RegExp) {\n                // Only update the results if the query was valid regex.\n                // This avoids the results suddenly becoming empty if an invalid regex string is inputted.\n                return os\n                    // Filter on the options with a string match on the field we are testing.\n                    .filter(o => Util.Object.readValue<T, string>(o, this._optionsField)\n                        .toString()\n                        .match(regex));\n            }\n\n            // Don't update since it wasn't a valid regex.\n            return false;\n        };\n\n        // Set default values and reset.\n        this.allowEmptyQuery = allowEmptyQuery;\n        this.searchDelay = 0;\n        this.reset();\n    }\n\n    // Updates the query after the specified search delay.\n    public updateQueryDelayed(query:string, callback:(err?:Error) => void = () => {}):void {\n        this._query = query;\n\n        clearTimeout(this._searchDelayTimeout);\n        this._searchDelayTimeout = window.setTimeout(\n            () => {\n                this.updateQuery(query, callback);\n            },\n            this.searchDelay\n        );\n    }\n\n    // Updates the current search query.\n    public updateQuery(query:string, callback:(err?:Error) => void = () => {}):void {\n        this._query = query;\n\n        if (this._query === \"\" && !this.allowEmptyQuery) {\n            // Don't update if the new query is empty (and we don't allow empty queries).\n            // Don't reset so that when animating closed we don't get a judder.\n            return callback();\n        }\n\n        if (this._resultsCache.hasOwnProperty(this._query)) {\n            // If the query is already cached, make use of it.\n            this._results = this._resultsCache[this._query];\n\n            return callback();\n        }\n\n        if (this._optionsLookup) {\n            this._isSearching = true;\n\n            // Call the options lookup without a this context.\n            const queryLookup = this._optionsLookup.call(undefined, this._query) as LookupFnResult<T[]>;\n\n            queryLookup\n                .then(results => {\n                    this._isSearching = false;\n\n                    this.updateResults(results);\n                    return callback();\n                })\n                .catch(error => {\n                    // Unset 'loading' state, and throw the returned error without updating the results.\n                    this._isSearching = false;\n                    return callback(error);\n                });\n\n            return;\n        }\n\n        const filtered = this.optionsFilter.call(undefined, this._options, this._query);\n        if (filtered) {\n            this.updateResults(filtered);\n        }\n        return callback();\n    }\n\n    // Updates & caches the new set of results.\n    private updateResults(results:T[]):void {\n        this._resultsCache[this._query] = results;\n        this._results = results;\n    }\n\n    // tslint:disable-next-line:promise-function-async\n    public initialLookup(initial:U):LookupFnResult<T>;\n    // tslint:disable-next-line:promise-function-async\n    public initialLookup(initial:U[]):LookupFnResult<T[]>;\n    // tslint:disable-next-line:promise-function-async\n    public initialLookup(initial:U | U[]):LookupFnResult<T> | LookupFnResult<T[]> {\n        if (initial instanceof Array) {\n            return (this._optionsLookup as LookupFn<T, U[]>)(undefined, initial) as LookupFnResult<T[]>;\n        }\n        return (this._optionsLookup as LookupFn<T, U>)(undefined, initial) as LookupFnResult<T>;\n    }\n\n    // Converts a query string to regex without throwing an error.\n    private toRegex(query:string):RegExp | string {\n        try {\n            return new RegExp(query, \"i\");\n        } catch (e) {\n            return query;\n        }\n    }\n\n    // Generates HTML for highlighted match text.\n    public highlightMatches(text:string, query:string):string {\n        const regex = this.toRegex(query);\n        if (regex instanceof RegExp) {\n            return text.replace(regex, match => `<b>${match}</b>`);\n        }\n        return text;\n    }\n\n    // Resets the search back to a pristine state.\n    private reset():void {\n        this._results = [];\n        this._resultsCache = {};\n        this._isSearching = false;\n        this.updateQuery(\"\");\n    }\n}\n","import {\n    Component, ViewChild, HostBinding, Input, AfterViewInit, HostListener,\n    EventEmitter, Output, Directive, ElementRef, TemplateRef, Renderer2\n} from \"@angular/core\";\nimport { Util, ITemplateRefContext, IFocusEvent } from \"../../../misc/util/internal\";\nimport { DropdownService, SuiDropdownMenu } from \"../../dropdown/internal\";\nimport { ISearchLocaleValues, RecursivePartial, SuiLocalizationService } from \"../../../behaviors/localization/internal\";\nimport { SearchService } from \"../services/search.service\";\nimport { LookupFn, FilterFn } from \"../helpers/lookup-fn\";\n\nexport interface IResultContext<T> extends ITemplateRefContext<T> {\n    query:string;\n}\n\n@Component({\n    selector: \"sui-search\",\n    template: `\n<div class=\"ui input\" [class.icon]=\"hasIcon\" (click)=\"onClick($event)\">\n    <input class=\"prompt\" type=\"text\" [attr.placeholder]=\"placeholder\" autocomplete=\"off\" [(ngModel)]=\"query\">\n    <i *ngIf=\"hasIcon\" class=\"search icon\"></i>\n</div>\n<div class=\"results\"\n     suiDropdownMenu\n     [menuTransition]=\"transition\"\n     [menuTransitionDuration]=\"transitionDuration\"\n     menuSelectedItemClass=\"active\">\n\n    <sui-search-result *ngFor=\"let r of results\"\n                       class=\"item\"\n                       [value]=\"r\"\n                       [query]=\"query\"\n                       [formatter]=\"resultFormatter\"\n                       [template]=\"resultTemplate\"\n                       (click)=\"select(r)\"></sui-search-result>\n\n    <div *ngIf=\"results.length == 0\" class=\"message empty\">\n        <div class=\"header\">{{ localeValues.noResults.header }}</div>\n        <div class=\"description\">{{ localeValues.noResults.message }}</div>\n    </div>\n</div>\n`,\n    styles: [`\n/* Ensures results div has margin. */\n:host {\n    display: inline-block;\n    outline: 0;\n}\n\n/* Fixes positioning when results are pushed above the search. */\n.results {\n    margin-bottom: .5em;\n}\n`]\n})\nexport class SuiSearch<T> implements AfterViewInit {\n    public dropdownService:DropdownService;\n    public searchService:SearchService<T, T>;\n\n    @ViewChild(SuiDropdownMenu)\n    private _menu:SuiDropdownMenu;\n\n    // Sets the Semantic UI classes on the host element.\n    // Doing it on the host enables use in menus etc.\n    @HostBinding(\"class.ui\")\n    @HostBinding(\"class.search\")\n    public readonly hasClasses:boolean;\n\n    @HostBinding(\"attr.tabindex\")\n    public readonly tabindex:number;\n\n    @HostBinding(\"class.active\")\n    public get isActive():boolean {\n        return this.dropdownService.isOpen;\n    }\n\n    // Sets whether the search element has a visible search icon.\n    @Input()\n    public hasIcon:boolean;\n\n    private _placeholder:string;\n\n    // Gets & sets the placeholder text displayed inside the text input.\n    @Input()\n    public get placeholder():string {\n        return this._placeholder || this.localeValues.placeholder;\n    }\n\n    public set placeholder(placeholder:string) {\n        this._placeholder = placeholder;\n    }\n\n    private _localeValues:ISearchLocaleValues;\n\n    public localeOverrides:RecursivePartial<ISearchLocaleValues>;\n\n    public get localeValues():ISearchLocaleValues {\n        return this._localizationService.override<\"search\">(this._localeValues, this.localeOverrides);\n    }\n\n    public get query():string {\n        return this.searchService.query;\n    }\n\n    public set query(query:string) {\n        this.selectedResult = undefined;\n        // Initialise a delayed search.\n        this.searchService.updateQueryDelayed(query, () =>\n            // Set the results open state depending on whether a query has been entered.\n            this.dropdownService.setOpenState(this.searchService.query.length > 0));\n    }\n\n    @Input()\n    public set options(options:T[] | undefined) {\n        if (options) {\n            this.searchService.options = options;\n        }\n    }\n\n    @Input()\n    public set optionsFilter(filter:FilterFn<T> | undefined) {\n        if (filter) {\n            this.searchService.optionsFilter = filter;\n        }\n    }\n\n    @Input()\n    public set optionsLookup(lookupFn:LookupFn<T> | undefined) {\n        this.searchService.optionsLookup = lookupFn;\n    }\n\n    @Input()\n    public set optionsField(field:string | undefined) {\n        this.searchService.optionsField = field;\n    }\n\n    private _resultFormatter?:(r:T, q:string) => string;\n\n    public get resultFormatter():(result:T, query:string) => string {\n        if (this._resultFormatter) {\n            return this._resultFormatter;\n        } else if (this.searchService.optionsLookup) {\n            return r => this.readValue(r);\n        } else {\n            return (r, q) => this.searchService.highlightMatches(this.readValue(r), q);\n        }\n    }\n\n    @Input()\n    public set resultFormatter(formatter:(result:T, query:string) => string) {\n        this._resultFormatter = formatter;\n    }\n\n    @Input()\n    public resultTemplate:TemplateRef<IResultContext<T>>;\n\n    @Input()\n    public retainSelectedResult:boolean;\n\n    @Input()\n    public set searchDelay(delay:number) {\n        this.searchService.searchDelay = delay;\n    }\n\n    @HostBinding(\"class.loading\")\n    public get isSearching():boolean {\n        return this.searchService.isSearching;\n    }\n\n    @Input()\n    public maxResults:number;\n\n    public get results():T[] {\n        return this.searchService.results.slice(0, this.maxResults);\n    }\n\n    // Stores the currently selected result.\n    public selectedResult?:T;\n\n    // Emits whenever a new result is selected.\n    @Output(\"resultSelected\")\n    public onResultSelected:EventEmitter<T>;\n\n    @Input()\n    public transition:string;\n\n    @Input()\n    public transitionDuration:number;\n\n    constructor(private _element:ElementRef, renderer:Renderer2, private _localizationService:SuiLocalizationService) {\n        this.dropdownService = new DropdownService();\n        this.searchService = new SearchService<T, T>();\n\n        this.onLocaleUpdate();\n        this._localizationService.onLanguageUpdate.subscribe(() => this.onLocaleUpdate());\n\n        this.hasClasses = true;\n        this.tabindex = 0;\n        this.hasIcon = true;\n        this.retainSelectedResult = true;\n        this.searchDelay = 200;\n        this.maxResults = 7;\n\n        this.onResultSelected = new EventEmitter<T>();\n\n        this.transition = \"scale\";\n        this.transitionDuration = 200;\n    }\n\n    public ngAfterViewInit():void {\n        this._menu.service = this.dropdownService;\n    }\n\n    private onLocaleUpdate():void {\n        this._localeValues = this._localizationService.get().search;\n    }\n\n    // Selects a result.\n    public select(result:T):void {\n        this.onResultSelected.emit(result);\n        this.dropdownService.setOpenState(false);\n\n        if (this.retainSelectedResult) {\n            this.selectedResult = result;\n            this.searchService.updateQuery(this.readValue(result));\n        } else {\n            this.searchService.updateQuery(\"\");\n        }\n    }\n\n    public onClick(e:MouseEvent):void {\n        this.open();\n    }\n\n    @HostListener(\"focusin\")\n    public onFocusIn():void {\n        if (!this.dropdownService.isAnimating) {\n            this.open();\n        }\n    }\n\n    private open():void {\n        if (this.searchService.query.length > 0) {\n            // Only open on click when there is a query entered.\n            this.dropdownService.setOpenState(true);\n        }\n    }\n\n    @HostListener(\"focusout\", [\"$event\"])\n    public onFocusOut(e:IFocusEvent):void {\n        console.log(e);\n        if (!this._element.nativeElement.contains(e.relatedTarget)) {\n            this.dropdownService.setOpenState(false);\n        }\n    }\n\n    // Reads the specified field from an item.\n    public readValue(object:T):string {\n        return Util.Object.readValue<T, string>(object, this.searchService.optionsField);\n    }\n}\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { FormsModule } from \"@angular/forms\";\nimport { SuiDropdownModule } from \"../dropdown/internal\";\nimport { SuiLocalizationModule } from \"../../behaviors/localization/internal\";\nimport { SuiUtilityModule } from \"../../misc/util/internal\";\nimport { SuiSearch } from \"./components/search\";\nimport { SuiSearchResult } from \"./components/search-result\";\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        SuiDropdownModule,\n        SuiLocalizationModule,\n        SuiUtilityModule\n    ],\n    declarations: [\n        SuiSearch,\n        SuiSearchResult\n    ],\n    exports: [\n        SuiSearch\n    ]\n})\nexport class SuiSearchModule {}\n","import {\n    Component, Input, HostBinding, HostListener, EventEmitter, ViewContainerRef,\n    ViewChild, Renderer2, ElementRef, Output, ChangeDetectorRef\n} from \"@angular/core\";\nimport { SuiDropdownMenuItem } from \"../../dropdown/internal\";\nimport { HandledEvent } from \"../../../misc/util/internal\";\n\n@Component({\n    selector: \"sui-select-option\",\n    template: `\n<span #templateSibling></span>\n<span [innerHTML]=\"renderedText\"></span>\n`\n})\nexport class SuiSelectOption<T> extends SuiDropdownMenuItem {\n    // Sets the Semantic UI classes on the host element.\n    @HostBinding(\"class.item\")\n    public readonly hasClasses:boolean;\n\n    @Input()\n    public value:T;\n\n    // Fires when the option is selected, whether by clicking or by keyboard.\n    @Output()\n    public onSelected:EventEmitter<T>;\n\n    @HostBinding(\"class.active\")\n    public isActive:boolean;\n\n    public renderedText?:string;\n\n    public set formatter(formatter:(obj:T) => string) {\n        if (!this.usesTemplate) {\n            this.renderedText = formatter(this.value);\n        } else {\n            this.renderedText = \"\";\n        }\n    }\n\n    public usesTemplate:boolean;\n\n    // Placeholder to draw template beside.\n    @ViewChild(\"templateSibling\", { read: ViewContainerRef })\n    public templateSibling:ViewContainerRef;\n\n    constructor(renderer:Renderer2, element:ElementRef, public changeDetector:ChangeDetectorRef) {\n        // We inherit SuiDropdownMenuItem to automatically gain all keyboard navigation functionality.\n        // This is not done via adding the .item class because it isn't supported by Angular.\n        super(renderer, element);\n\n        this.hasClasses = true;\n        this.isActive = false;\n        this.onSelected = new EventEmitter<T>();\n\n        // By default we make the default text an empty label, for the brief moment when it isn't displaying the correct one.\n        this.renderedText = \"\";\n\n        this.usesTemplate = false;\n    }\n\n    @HostListener(\"click\", [\"$event\"])\n    public onClick(e:HandledEvent):void {\n        e.eventHandled = true;\n\n        setTimeout(() => this.onSelected.emit(this.value));\n    }\n}\n","import { Directive, Input, EventEmitter, Renderer2, ElementRef, HostListener, HostBinding } from \"@angular/core\";\n\n@Directive({\n    selector: \"input[suiSelectSearch]\"\n})\nexport class SuiSelectSearch {\n    @HostBinding(\"class.search\")\n    public readonly hasClasses:boolean;\n\n    @HostBinding(\"attr.autocomplete\")\n    public readonly autoComplete:string;\n\n    public set query(query:string) {\n        this._renderer.setProperty(this._element.nativeElement, \"value\", query);\n    }\n\n    public onQueryUpdated:EventEmitter<string>;\n    public onQueryKeyDown:EventEmitter<KeyboardEvent>;\n\n    constructor(private _renderer:Renderer2, private _element:ElementRef) {\n        this.onQueryUpdated = new EventEmitter<string>();\n        this.onQueryKeyDown = new EventEmitter<KeyboardEvent>();\n\n        this.hasClasses = true;\n        this.autoComplete = \"off\";\n    }\n\n    @HostListener(\"input\", [\"$event.target.value\"])\n    public updateQuery(query:string):void {\n        this.onQueryUpdated.emit(query);\n    }\n\n    @HostListener(\"keydown\", [\"$event\"])\n    public onKeyDown(e:KeyboardEvent):void {\n        this.onQueryKeyDown.emit(e);\n    }\n\n    public focus():void {\n        // Slightly delay to support in menu search.\n        this._element.nativeElement.focus();\n        setTimeout(() => this._element.nativeElement.focus());\n    }\n}\n","import {\n    ViewChild, HostBinding, ElementRef, HostListener, Input, ContentChildren, QueryList,\n    AfterContentInit, TemplateRef, ViewContainerRef, ContentChild, EventEmitter, Output, OnDestroy\n} from \"@angular/core\";\nimport { Subscription } from \"rxjs\";\nimport { DropdownService, SuiDropdownMenu } from \"../../dropdown/internal\";\nimport { SearchService, LookupFn, FilterFn } from \"../../search/internal\";\nimport { Util, ITemplateRefContext, HandledEvent, KeyCode, IFocusEvent } from \"../../../misc/util/internal\";\nimport { ISelectLocaleValues, RecursivePartial, SuiLocalizationService } from \"../../../behaviors/localization/internal\";\nimport { SuiSelectOption } from \"../components/select-option\";\nimport { SuiSelectSearch } from \"../directives/select-search\";\n\nexport interface IOptionContext<T> extends ITemplateRefContext<T> {\n    query?:string;\n}\n\n// We use generic type T to specify the type of the options we are working with,\n// and U to specify the type of the property of the option used as the value.\nexport abstract class SuiSelectBase<T, U> implements AfterContentInit, OnDestroy {\n    public dropdownService:DropdownService;\n    public searchService:SearchService<T, U>;\n\n    @ViewChild(SuiDropdownMenu)\n    protected _menu:SuiDropdownMenu;\n\n    // Keep track of all of the rendered select options. (Rendered by the user using *ngFor).\n    @ContentChildren(SuiSelectOption, { descendants: true })\n    protected _renderedOptions:QueryList<SuiSelectOption<T>>;\n\n    // Keep track of all of the subscriptions to the selected events on the rendered options.\n    private _renderedSubscriptions:Subscription[];\n\n    // Sets the Semantic UI classes on the host element.\n    @HostBinding(\"class.ui\")\n    @HostBinding(\"class.dropdown\")\n    public readonly hasClasses:boolean;\n\n    @HostBinding(\"class.active\")\n    public get isActive():boolean {\n        return this.dropdownService.isOpen;\n    }\n\n    @HostBinding(\"class.visible\")\n    public get isVisible():boolean {\n        return this._menu.isVisible;\n    }\n\n    @Input()\n    public isSearchable:boolean;\n\n    public isSearchExternal:boolean;\n\n    @HostBinding(\"class.search\")\n    public get hasSearchClass():boolean {\n        return this.isSearchable && !this.isSearchExternal;\n    }\n\n    @HostBinding(\"class.loading\")\n    public get isSearching():boolean {\n        return this.searchService.isSearching;\n    }\n\n    @ViewChild(SuiSelectSearch)\n    private _internalSearch?:SuiSelectSearch;\n\n    @ContentChild(SuiSelectSearch)\n    private _manualSearch?:SuiSelectSearch;\n\n    public get searchInput():SuiSelectSearch | undefined {\n        return this._manualSearch || this._internalSearch;\n    }\n\n    @Input(\"tabindex\")\n    private _tabIndex?:number;\n\n    @HostBinding(\"attr.tabindex\")\n    public get tabindex():number {\n        if (this.isDisabled) {\n            // If disabled, remove from tabindex.\n            return -1;\n        }\n        if (this.dropdownService.isOpen && this.isSearchExternal) {\n            // If open & in menu search, remove from tabindex (as input always autofocusses).\n            return -1;\n        }\n        if (this._tabIndex != undefined) {\n            // If custom tabindex, default to that.\n            return this._tabIndex;\n        }\n        if (this.hasSearchClass) {\n            // If search input enabled, tab goes to input.\n            return -1;\n        }\n        // Otherwise, return default of 0.\n        return 0;\n    }\n\n    @HostBinding(\"class.disabled\")\n    @Input()\n    public get isDisabled():boolean {\n        return this.dropdownService.isDisabled;\n    }\n\n    public set isDisabled(value:boolean) {\n        this.dropdownService.isDisabled = !!value;\n    }\n\n    @Input()\n    public set options(options:T[]) {\n        if (options) {\n            this.searchService.options = options;\n\n            this.optionsUpdateHook();\n        }\n    }\n\n    @Input()\n    public set optionsFilter(filter:FilterFn<T> | undefined) {\n        if (filter) {\n            this.searchService.optionsFilter = filter;\n\n            this.optionsUpdateHook();\n        }\n    }\n\n    @Input()\n    public set optionsLookup(lookup:LookupFn<T, U> | undefined) {\n        if (lookup) {\n            this.searchService.optionsLookup = lookup;\n\n            this.optionsUpdateHook();\n        }\n    }\n\n    public get filteredOptions():T[] {\n        return this.searchService.results;\n    }\n\n    // Deprecated\n    public get availableOptions():T[] {\n        return this.filteredOptions;\n    }\n\n    public get query():string | undefined {\n        return this.isSearchable ? this.searchService.query : undefined;\n    }\n\n    public set query(query:string | undefined) {\n        if (query != undefined) {\n            this.queryUpdateHook();\n            this.updateQuery(query);\n            // Update the rendered text as query has changed.\n            this._renderedOptions.forEach(ro => this.initialiseRenderedOption(ro));\n\n            if (this.searchInput) {\n                this.searchInput.query = query;\n            }\n        }\n    }\n\n    @Input()\n    public get labelField():string | undefined {\n        return this.searchService.optionsField;\n    }\n\n    public set labelField(field:string | undefined) {\n        this.searchService.optionsField = field;\n    }\n\n    public get labelGetter():(obj:T) => string {\n        // Helper function to retrieve the label from an item.\n        return (obj:T) => {\n            const label = Util.Object.readValue<T, string>(obj, this.labelField);\n            if (label != undefined) {\n                return label.toString();\n            }\n            return \"\";\n        };\n    }\n\n    @Input()\n    public valueField:string;\n\n    public get valueGetter():(obj:T) => U {\n        // Helper function to retrieve the value from an item.\n        return (obj:T) => Util.Object.readValue<T, U>(obj, this.valueField);\n    }\n\n    @Input()\n    public optionTemplate:TemplateRef<IOptionContext<T>>;\n\n    private _optionFormatter?:(o:T, q?:string) => string;\n\n    public get configuredFormatter():(option:T) => string {\n        if (this._optionFormatter) {\n            return o => this._optionFormatter!(o, this.isSearchable ? this.query : undefined);\n        } else if (this.searchService.optionsLookup) {\n            return o => this.labelGetter(o);\n        } else {\n            return o => this.searchService.highlightMatches(this.labelGetter(o), this.query || \"\");\n        }\n    }\n\n    @Input()\n    public set optionFormatter(formatter:((option:T, query?:string) => string) | undefined) {\n        this._optionFormatter = formatter;\n    }\n\n    private _localeValues:ISelectLocaleValues;\n    public localeOverrides:RecursivePartial<ISelectLocaleValues>;\n\n    public get localeValues():ISelectLocaleValues {\n        return this._localizationService.override<\"select\">(this._localeValues, this.localeOverrides);\n    }\n\n    @Input()\n    public icon:string;\n\n    @Input()\n    public transition:string;\n\n    @Input()\n    public transitionDuration:number;\n\n    @Output(\"touched\")\n    public onTouched:EventEmitter<void>;\n\n    constructor(private _element:ElementRef, protected _localizationService:SuiLocalizationService) {\n        this.dropdownService = new DropdownService();\n        // We do want an empty query to return all results.\n        this.searchService = new SearchService<T, U>(true);\n\n        this.isSearchable = false;\n\n        this.onLocaleUpdate();\n        this._localizationService.onLanguageUpdate.subscribe(() => this.onLocaleUpdate());\n        this._renderedSubscriptions = [];\n\n        this.icon = \"dropdown\";\n        this.transition = \"slide down\";\n        this.transitionDuration = 200;\n\n        this.onTouched = new EventEmitter<void>();\n\n        this.hasClasses = true;\n    }\n\n    public ngAfterContentInit():void {\n        this._menu.service = this.dropdownService;\n        // We manually specify the menu items to the menu because the @ContentChildren doesn't pick up our dynamically rendered items.\n        this._menu.items = this._renderedOptions;\n        this._menu.parentElement = this._element;\n\n        if (this._manualSearch) {\n            this.isSearchable = true;\n            this.isSearchExternal = true;\n        }\n\n        if (this.searchInput) {\n            this.searchInput.onQueryUpdated.subscribe((q:string) => this.query = q);\n            this.searchInput.onQueryKeyDown.subscribe((e:KeyboardEvent) => this.onQueryInputKeydown(e));\n        }\n\n        // We must call this immediately as changes doesn't fire when you subscribe.\n        this.onAvailableOptionsRendered();\n        this._renderedOptions.changes.subscribe(() => this.onAvailableOptionsRendered());\n    }\n\n    private onLocaleUpdate():void {\n        this._localeValues = this._localizationService.get().select;\n    }\n\n    // Hook is here since Typescript doesn't yet support overriding getters & setters while still calling the superclass.\n    protected optionsUpdateHook():void {}\n\n    // Hook is here since Typescript doesn't yet support overriding getters & setters while still calling the superclass.\n    protected queryUpdateHook():void {}\n\n    protected updateQuery(query:string):void {\n        // Update the query then open the dropdown, as after keyboard input it should always be open.\n        this.searchService.updateQuery(query, () =>\n            this.dropdownService.setOpenState(true));\n    }\n\n    protected resetQuery(delayed:boolean = true):void {\n        // The search delay is set to the transition duration to ensure results\n        // aren't rendered as the select closes as that causes a sudden flash.\n        if (delayed) {\n            this.searchService.searchDelay = this._menu.menuTransitionDuration;\n            this.searchService.updateQueryDelayed(\"\");\n        } else {\n            this.searchService.updateQuery(\"\");\n        }\n\n        if (this.searchInput) {\n            this.searchInput.query = \"\";\n        }\n    }\n\n    protected onAvailableOptionsRendered():void {\n        // Unsubscribe from all previous subscriptions to avoid memory leaks on large selects.\n        this._renderedSubscriptions.forEach(rs => rs.unsubscribe());\n        this._renderedSubscriptions = [];\n\n        this._renderedOptions.forEach(ro => {\n            // Slightly delay initialisation to avoid change after checked errors. TODO - look into avoiding this!\n            setTimeout(() => this.initialiseRenderedOption(ro));\n\n            this._renderedSubscriptions.push(ro.onSelected.subscribe(() => this.selectOption(ro.value)));\n        });\n\n        // If no options have been provided, autogenerate them from the rendered ones.\n        if (this.searchService.options.length === 0 && !this.searchService.optionsLookup) {\n            this.options = this._renderedOptions.map(ro => ro.value);\n        }\n    }\n\n    protected initialiseRenderedOption(option:SuiSelectOption<T>):void {\n        option.usesTemplate = !!this.optionTemplate;\n        option.formatter = this.configuredFormatter;\n\n        if (option.usesTemplate) {\n            this.drawTemplate(option.templateSibling, option.value);\n        }\n\n        option.changeDetector.markForCheck();\n    }\n\n    public abstract selectOption(option:T):void;\n\n    protected findOption(options:T[], value:U):T | undefined {\n        // Tries to find an option in options array\n        return options.find(o => value === this.valueGetter(o));\n    }\n\n    public onCaretClick(e:HandledEvent):void {\n        if (!e.eventHandled) {\n            e.eventHandled = true;\n\n            if (!this.dropdownService.isAnimating) {\n                this.dropdownService.setOpenState(!this.dropdownService.isOpen);\n\n                this.focus();\n            }\n        }\n    }\n\n    @HostListener(\"click\", [\"$event\"])\n    public onClick(e:HandledEvent):void {\n        if (!e.eventHandled && !this.dropdownService.isAnimating) {\n            e.eventHandled = true;\n\n            // If the dropdown is searchable, clicking should keep it open, otherwise we toggle the open state.\n            this.dropdownService.setOpenState(this.isSearchable ? true : !this.dropdownService.isOpen);\n\n            // Immediately focus the search input whenever clicking on the select.\n            this.focus();\n        }\n    }\n\n    @HostListener(\"focusin\")\n    public onFocusIn():void {\n        if (!this.dropdownService.isOpen && !this.dropdownService.isAnimating) {\n            this.dropdownService.setOpenState(true);\n\n            this.focus();\n        }\n    }\n\n    @HostListener(\"focusout\", [\"$event\"])\n    public onFocusOut(e:IFocusEvent):void {\n        if (!this._element.nativeElement.contains(e.relatedTarget)) {\n            this.dropdownService.setOpenState(false);\n            this.onTouched.emit();\n        }\n    }\n\n    @HostListener(\"keypress\", [\"$event\"])\n    public onKeyPress(e:KeyboardEvent):void {\n        if (e.keyCode === KeyCode.Enter) {\n            // Enables support for focussing and opening with the keyboard alone.\n            // Using directly because Renderer2 doesn't have invokeElementMethod method anymore.\n            this._element.nativeElement.click();\n        }\n    }\n\n    @HostListener(\"keydown\", [\"$event\"])\n    public onKeyDown(e:KeyboardEvent):void {\n        if (!this.dropdownService.isOpen && e.keyCode === KeyCode.Down) {\n\n            // Enables support for focussing and opening with the keyboard alone.\n            // Using directly because Renderer2 doesn't have invokeElementMethod method anymore.\n            this._element.nativeElement.click();\n\n            e.preventDefault();\n        }\n    }\n\n    public onQueryInputKeydown(event:KeyboardEvent):void {}\n\n    protected focus():void {\n        if (this.isSearchable && this.searchInput) {\n            // Focusses the search input only when searchable.\n            // Using directly because Renderer2 doesn't have invokeElementMethod method anymore.\n            this.searchInput.focus();\n        } else {\n            this._element.nativeElement.focus();\n        }\n    }\n\n    // Helper that draws the provided template beside the provided ViewContainerRef.\n    protected drawTemplate(siblingRef:ViewContainerRef, value:T):void {\n        siblingRef.clear();\n        // Use of `$implicit` means use of <ng-template let-option> syntax is supported.\n        siblingRef.createEmbeddedView(this.optionTemplate, {\n            $implicit: value,\n            query: this.query\n        });\n    }\n\n    public ngOnDestroy():void {\n        this._renderedSubscriptions.forEach(s => s.unsubscribe());\n    }\n}\n","import {\n    Component, Input, HostBinding, HostListener, EventEmitter, ViewContainerRef,\n    ViewChild, Renderer2, ElementRef, Output, ChangeDetectorRef, TemplateRef\n} from \"@angular/core\";\nimport { SuiTransition, TransitionController, Transition, TransitionDirection } from \"../../transition/internal\";\nimport { HandledEvent, SuiComponentFactory } from \"../../../misc/util/internal\";\nimport { IOptionContext } from \"../classes/select-base\";\n\n// See https://github.com/Microsoft/TypeScript/issues/13449.\nconst templateRef = TemplateRef;\n\n@Component({\n    selector: \"sui-multi-select-label\",\n    template: `\n<span #templateSibling></span>\n<span *ngIf=\"!template\" [innerHTML]=\"formatter(value)\"></span>\n<i class=\"delete icon\" (click)=\"deselectOption($event)\"></i>\n`\n})\nexport class SuiMultiSelectLabel<T> extends SuiTransition {\n    // Sets the Semantic UI classes on the host element.\n    // Doing it on the host enables use in menus etc.\n    @HostBinding(\"class.ui\")\n    @HostBinding(\"class.label\")\n    public readonly hasClasses:boolean;\n\n    private _transitionController:TransitionController;\n\n    @Input()\n    public value:T;\n\n    @Input()\n    public query?:string;\n\n    @Output(\"deselected\")\n    public onDeselected:EventEmitter<T>;\n\n    @Input()\n    public formatter:(obj:T) => string;\n\n    private _template?:TemplateRef<IOptionContext<T>>;\n\n    @Input()\n    public get template():TemplateRef<IOptionContext<T>> | undefined {\n        return this._template;\n    }\n\n    public set template(template:TemplateRef<IOptionContext<T>> | undefined) {\n        this._template = template;\n        if (this.template) {\n            this.componentFactory.createView(this.templateSibling, this.template, {\n                $implicit: this.value,\n                query: this.query\n            });\n        }\n    }\n\n    // Placeholder to draw template beside.\n    @ViewChild(\"templateSibling\", { read: ViewContainerRef })\n    public templateSibling:ViewContainerRef;\n\n    constructor(renderer:Renderer2,\n                element:ElementRef,\n                changeDetector:ChangeDetectorRef,\n                public componentFactory:SuiComponentFactory) {\n\n        super(renderer, element, changeDetector);\n\n        // Initialise transition functionality.\n        this._transitionController = new TransitionController(false, \"inline-block\");\n        this.setTransitionController(this._transitionController);\n\n        this.onDeselected = new EventEmitter<T>();\n\n        this.hasClasses = true;\n\n        this._transitionController.animate(new Transition(\"scale\", 100, TransitionDirection.In));\n    }\n\n    public deselectOption(e:HandledEvent):void {\n        e.eventHandled = true;\n\n        this._transitionController.animate(\n            new Transition(\"scale\", 100, TransitionDirection.Out, () =>\n                this.onDeselected.emit(this.value)));\n    }\n\n    @HostListener(\"click\", [\"$event\"])\n    public onClick(e:HandledEvent):void {\n        e.eventHandled = true;\n    }\n}\n","import { Component, HostBinding, ElementRef, EventEmitter, Output, Input, Directive } from \"@angular/core\";\nimport { ICustomValueAccessorHost, KeyCode, customValueAccessorFactory, CustomValueAccessor } from \"../../../misc/util/internal\";\nimport { SuiLocalizationService } from \"../../../behaviors/localization/internal\";\nimport { SuiSelectBase } from \"../classes/select-base\";\nimport { SuiSelectOption } from \"./select-option\";\n\n@Component({\n    selector: \"sui-multi-select\",\n    template: `\n<!-- Dropdown icon -->\n<i class=\"{{ icon }} icon\" (click)=\"onCaretClick($event)\"></i>\n\n<ng-container *ngIf=\"hasLabels\">\n<!-- Multi-select labels -->\n    <sui-multi-select-label *ngFor=\"let selected of selectedOptions;\"\n                            [value]=\"selected\"\n                            [query]=\"query\"\n                            [formatter]=\"configuredFormatter\"\n                            [template]=\"optionTemplate\"\n                            (deselected)=\"deselectOption($event)\"></sui-multi-select-label>\n</ng-container>\n\n<!-- Query input -->\n<input suiSelectSearch\n       type=\"text\"\n       [hidden]=\"!isSearchable || isSearchExternal\">\n\n<!-- Helper text -->\n<div class=\"text\"\n     [class.default]=\"hasLabels\"\n     [class.filtered]=\"!!query && !isSearchExternal\">\n    \n    <!-- Placeholder text -->\n    <ng-container *ngIf=\"hasLabels; else selectedBlock\">{{ placeholder }}</ng-container>\n    \n    <!-- Summary shown when labels are hidden -->\n    <ng-template #selectedBlock> {{ selectedMessage }}</ng-template>\n</div>\n\n<!-- Select dropdown menu -->\n<div class=\"menu\"\n     suiDropdownMenu\n     [menuTransition]=\"transition\"\n     [menuTransitionDuration]=\"transitionDuration\"\n     [menuAutoSelectFirst]=\"true\">\n\n    <ng-content></ng-content>\n    <ng-container *ngIf=\"availableOptions.length == 0 \">\n        <div *ngIf=\"!maxSelectedReached\" class=\"message\">{{ localeValues.noResultsMessage }}</div>\n        <div *ngIf=\"maxSelectedReached\" class=\"message\">{{ maxSelectedMessage }}</div>\n    </ng-container>\n</div>\n`,\n    styles: [`\n:host input.search {\n    width: 12em !important;\n}\n`]\n})\nexport class SuiMultiSelect<T, U> extends SuiSelectBase<T, U> implements ICustomValueAccessorHost<U[]> {\n    public selectedOptions:T[];\n    // Stores the values written by ngModel before it can be matched to an option from `options`.\n    private _writtenOptions?:U[];\n\n    @Output()\n    public selectedOptionsChange:EventEmitter<U[]>;\n\n    public get filteredOptions():T[] {\n        if (this.maxSelectedReached) {\n            // If we have reached the maximum number of selections, then empty the results completely.\n            return [];\n        }\n\n        const searchResults:T[] = this.searchService.results;\n\n        if (!this.hasLabels) {\n            return searchResults;\n        } else {\n            // Returns the search results \\ selected options.\n            return searchResults\n                .filter(r => this.selectedOptions.find(o => r === o) == undefined);\n        }\n    }\n\n    public get availableOptions():T[] {\n        return this.filteredOptions;\n    }\n\n    private _hasLabels:boolean;\n\n    @Input()\n    public get hasLabels():boolean {\n        return this._hasLabels;\n    }\n\n    public set hasLabels(hasLabels:boolean) {\n        this._hasLabels = hasLabels;\n    }\n\n    private _placeholder:string;\n\n    @Input()\n    public get placeholder():string {\n        return this._placeholder || this.localeValues.multi.placeholder;\n    }\n\n    public set placeholder(placeholder:string) {\n        this._placeholder = placeholder;\n    }\n\n    @Input()\n    public maxSelected:number;\n\n    private _zeroSelectionText:string;\n    private _defaultSelectionText:string;\n\n    @Input()\n    public get zeroSelectionText():string {\n        return this._zeroSelectionText;\n    }\n\n    public set zeroSelectionText(zeroSelectionText:string) {\n        this._zeroSelectionText = zeroSelectionText;\n    }\n\n    @Input()\n    public get defaultSelectionText():string {\n        return this._defaultSelectionText || this.localeValues.multi.placeholder;\n    }\n\n    public set defaultSelectionText(defaultSelectionText:string) {\n        this._defaultSelectionText = `#{count} ${defaultSelectionText}`;\n    }\n\n    public get maxSelectedReached():boolean {\n        if (this.maxSelected == undefined) {\n            // If there is no maximum then we can immediately return.\n            return false;\n        }\n        return this.selectedOptions.length === this.maxSelected;\n    }\n\n    public get maxSelectedMessage():string {\n        return this._localizationService.interpolate(\n            this.localeValues.multi.maxSelectedMessage,\n            [[\"max\", this.maxSelected.toString()]]);\n    }\n\n    public get selectedMessage():string {\n        if (this.selectedOptions.length  > 0) {\n            return this._localizationService.interpolate(\n                this._defaultSelectionText ? this._defaultSelectionText : this.localeValues.multi.selectedMessage,\n                [[\"count\", this.selectedOptions.length.toString()]]);\n        } else {\n            return this._localizationService.interpolate(\n                this._defaultSelectionText ? this._defaultSelectionText : this.localeValues.multi.selectedMessage,\n                [[\"count\", this._zeroSelectionText ? this._zeroSelectionText : this.selectedOptions.length.toString()]]);\n        }\n    }\n\n    @HostBinding(\"class.multiple\")\n    public readonly hasClasses:boolean;\n\n    constructor(element:ElementRef, localizationService:SuiLocalizationService) {\n        super(element, localizationService);\n\n        this.selectedOptions = [];\n        this.selectedOptionsChange = new EventEmitter<U[]>();\n\n        this.hasLabels = true;\n        this.hasClasses = true;\n    }\n\n    protected optionsUpdateHook():void {\n        if (!this._writtenOptions && this.selectedOptions.length > 0) {\n            // We need to check the options still exist.\n            this.writeValue(this.selectedOptions.map(o => this.valueGetter(o)));\n        }\n\n        if (this._writtenOptions && this.searchService.options.length > 0) {\n            // If there were values written by ngModel before the options had been loaded, this runs to fix it.\n            this.selectedOptions = this._writtenOptions\n                // non-null assertion added here because Typescript doesn't recognise the non-null filter.\n                .map(v => this.findOption(this.searchService.options, v)!)\n                .filter(v => v != undefined);\n\n            if (this.selectedOptions.length === this._writtenOptions.length) {\n                this._writtenOptions = undefined;\n            }\n        }\n    }\n\n    protected initialiseRenderedOption(option:SuiSelectOption<T>):void {\n        super.initialiseRenderedOption(option);\n\n        // Boldens the item so it appears selected in the dropdown.\n        option.isActive = !this.hasLabels && this.selectedOptions.indexOf(option.value) !== -1;\n    }\n\n    public selectOption(option:T):void {\n        if (this.selectedOptions.indexOf(option) !== -1) {\n            this.deselectOption(option);\n            return;\n        }\n        this.selectedOptions.push(option);\n        this.selectedOptionsChange.emit(this.selectedOptions.map(o => this.valueGetter(o)));\n\n        this.resetQuery(false);\n\n        // Automatically refocus the search input for better keyboard accessibility.\n        this.focus();\n\n        if (!this.hasLabels) {\n            this.onAvailableOptionsRendered();\n        }\n    }\n\n    public writeValue(values:U[]):void {\n        if (values instanceof Array) {\n            if (this.searchService.options.length > 0) {\n                // If the options have already been loaded, we can immediately match the ngModel values to options.\n                this.selectedOptions = values\n                    // non-null assertion added here because Typescript doesn't recognise the non-null filter.\n                    .map(v => this.findOption(this.searchService.options, v)!)\n                    .filter(v => v != undefined);\n            }\n            if (values.length > 0 && this.selectedOptions.length === 0) {\n                if (this.valueField && this.searchService.hasItemLookup) {\n                    // If the search service has a selected lookup function, make use of that to load the initial values.\n                    this.searchService\n                        .initialLookup(values)\n                        .then(items => this.selectedOptions = items);\n                } else {\n                    // Otherwise, cache the written value for when options are set.\n                    this._writtenOptions = values;\n                }\n            }\n            if (values.length === 0) {\n                this.selectedOptions = [];\n            }\n        } else {\n            this.selectedOptions = [];\n        }\n    }\n\n    public deselectOption(option:T):void {\n        // Update selected options to the previously selected options \\ {option}.\n        this.selectedOptions = this.selectedOptions.filter(so => so !== option);\n        this.selectedOptionsChange.emit(this.selectedOptions.map(o => this.valueGetter(o)));\n\n        // Automatically refocus the search input for better keyboard accessibility.\n        this.focus();\n\n        if (!this.hasLabels) {\n            this.onAvailableOptionsRendered();\n        }\n    }\n\n    public onQueryInputKeydown(event:KeyboardEvent):void {\n        if (event.keyCode === KeyCode.Backspace && this.query === \"\" && this.selectedOptions.length > 0) {\n            // Deselect the rightmost option when the user presses backspace in the search input.\n            this.deselectOption(this.selectedOptions[this.selectedOptions.length - 1]);\n        }\n    }\n}\n\n// Value accessor directive for the select to support ngModel.\n@Directive({\n    selector: \"sui-multi-select\",\n    host: {\n        \"(selectedOptionsChange)\": \"onChange($event)\",\n        \"(touched)\": \"onTouched()\"\n    },\n    providers: [customValueAccessorFactory(SuiMultiSelectValueAccessor)]\n})\nexport class SuiMultiSelectValueAccessor<T, U> extends CustomValueAccessor<U[], SuiMultiSelect<T, U>> {\n    constructor(host:SuiMultiSelect<T, U>) {\n        super(host);\n    }\n}\n","import { Component, ViewContainerRef, ViewChild, Output, EventEmitter, ElementRef, Directive, Input } from \"@angular/core\";\nimport { ICustomValueAccessorHost, customValueAccessorFactory, CustomValueAccessor } from \"../../../misc/util/internal\";\nimport { SuiLocalizationService } from \"../../../behaviors/localization/internal\";\nimport { SuiSelectBase } from \"../classes/select-base\";\nimport { SuiSelectOption } from \"./select-option\";\n\n@Component({\n    selector: \"sui-select\",\n    template: `\n<!-- Query input -->\n<input suiSelectSearch\n       type=\"text\"\n       [hidden]=\"!isSearchable || isSearchExternal\">\n\n<!-- Placeholder text -->\n<div *ngIf=\"selectedOption == undefined\" class=\"default text\" [class.filtered]=\"query\">{{ placeholder }}</div>\n<!-- Selected item -->\n<div class=\"text\" [class.filtered]=\"query || selectedOption == undefined\">\n    <span #optionTemplateSibling></span>\n    <span *ngIf=\"!optionTemplate && selectedOption != undefined\" [innerHTML]=\"configuredFormatter(selectedOption)\"></span>\n</div>\n<!-- Dropdown icon -->\n<i class=\"{{ icon }} icon\" (click)=\"onCaretClick($event)\"></i>\n<!-- Select dropdown menu -->\n<div class=\"menu\"\n     suiDropdownMenu\n     [menuTransition]=\"transition\"\n     [menuTransitionDuration]=\"transitionDuration\"\n     [menuAutoSelectFirst]=\"isSearchable\">\n\n    <ng-content></ng-content>\n    <div *ngIf=\"isSearchable && availableOptions.length === 0\" class=\"message\">\n        {{ localeValues.noResultsMessage }}\n    </div>\n</div>\n`\n})\nexport class SuiSelect<T, U> extends SuiSelectBase<T, U> implements ICustomValueAccessorHost<U> {\n    public selectedOption?:T;\n    // Stores the value written by ngModel before it can be matched to an option from `options`.\n    private _writtenOption?:U;\n\n    @ViewChild(\"optionTemplateSibling\", { read: ViewContainerRef })\n    private _optionTemplateSibling:ViewContainerRef;\n\n    @Output()\n    public selectedOptionChange:EventEmitter<U>;\n\n    private _placeholder:string;\n\n    @Input()\n    public get placeholder():string {\n        return this._placeholder || this.localeValues.single.placeholder;\n    }\n\n    public set placeholder(placeholder:string) {\n        this._placeholder = placeholder;\n    }\n\n    constructor(element:ElementRef, localizationService:SuiLocalizationService) {\n        super(element, localizationService);\n\n        this.selectedOptionChange = new EventEmitter<U>();\n    }\n\n    protected optionsUpdateHook():void {\n        if (!this._writtenOption && this.selectedOption) {\n            // We need to check the option still exists.\n            this.writeValue(this.valueGetter(this.selectedOption));\n        }\n\n        if (this._writtenOption && this.searchService.options.length > 0) {\n            // If there was an value written by ngModel before the options had been loaded, this runs to fix it.\n            this.selectedOption = this.findOption(this.searchService.options, this._writtenOption);\n            if (this.selectedOption) {\n                this._writtenOption = undefined;\n                this.drawSelectedOption();\n            }\n        }\n    }\n\n    protected queryUpdateHook():void {\n        // When the query is updated, we just abandon the current selection.\n        this.selectedOption = undefined;\n    }\n\n    public selectOption(option:T):void {\n        // Choose and emit the selected option.\n        this.selectedOption = option;\n        this.selectedOptionChange.emit(this.valueGetter(option));\n\n        this.dropdownService.setOpenState(false);\n\n        this.resetQuery();\n\n        this.drawSelectedOption();\n\n        // Automatically refocus the search input for better keyboard accessibility.\n        this.focus();\n    }\n\n    public writeValue(value:U):void {\n        if (value != undefined) {\n            if (this.searchService.options.length > 0) {\n                // If the options have already been loaded, we can immediately match the ngModel value to an option.\n                this.selectedOption = this.findOption(this.searchService.options, value);\n\n                this.drawSelectedOption();\n            }\n            if (this.selectedOption == undefined) {\n                if (this.valueField && this.searchService.hasItemLookup) {\n                    // If the search service has a selected lookup function, make use of that to load the initial value.\n                    this.searchService\n                        .initialLookup(value)\n                        .then(i => {\n                            this.selectedOption = i;\n                            this.drawSelectedOption();\n                        });\n                } else {\n                    // Otherwise, cache the written value for when options are set.\n                    this._writtenOption = value;\n                }\n            }\n        } else {\n            this.selectedOption = undefined;\n            this.drawSelectedOption();\n        }\n    }\n\n    protected initialiseRenderedOption(option:SuiSelectOption<T>):void {\n        super.initialiseRenderedOption(option);\n\n        // Boldens the item so it appears selected in the dropdown.\n        option.isActive = option.value === this.selectedOption;\n    }\n\n    private drawSelectedOption():void {\n        // Updates the active class on the newly selected option.\n        if (this._renderedOptions) {\n            this.onAvailableOptionsRendered();\n        }\n\n        if (this.selectedOption != undefined && this.optionTemplate) {\n            this.drawTemplate(this._optionTemplateSibling, this.selectedOption);\n        }\n    }\n}\n\n// Value accessor directive for the select to support ngModel.\n@Directive({\n    selector: \"sui-select\",\n    host: {\n        \"(selectedOptionChange)\": \"onChange($event)\",\n        \"(touched)\": \"onTouched()\"\n    },\n    providers: [customValueAccessorFactory(SuiSelectValueAccessor)]\n})\nexport class SuiSelectValueAccessor<T, U> extends CustomValueAccessor<U, SuiSelect<T, U>> {\n    constructor(host:SuiSelect<T, U>) {\n        super(host);\n    }\n}\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { FormsModule } from \"@angular/forms\";\nimport { SuiDropdownModule } from \"../dropdown/internal\";\nimport { SuiUtilityModule } from \"../../misc/util/internal\";\nimport { SuiLocalizationModule } from \"../../behaviors/localization/internal\";\nimport { SuiSelect, SuiSelectValueAccessor } from \"./components/select\";\nimport { SuiSelectOption } from \"./components/select-option\";\nimport { SuiSelectSearch } from \"./directives/select-search\";\nimport { SuiMultiSelect, SuiMultiSelectValueAccessor } from \"./components/multi-select\";\nimport { SuiMultiSelectLabel } from \"./components/multi-select-label\";\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        SuiDropdownModule,\n        SuiUtilityModule,\n        SuiLocalizationModule\n    ],\n    declarations: [\n        SuiSelect,\n        SuiSelectOption,\n        SuiSelectSearch,\n        SuiSelectValueAccessor,\n        SuiMultiSelect,\n        SuiMultiSelectLabel,\n        SuiMultiSelectValueAccessor\n    ],\n    exports: [\n        SuiSelect,\n        SuiSelectOption,\n        SuiSelectSearch,\n        SuiSelectValueAccessor,\n        SuiMultiSelect,\n        SuiMultiSelectValueAccessor\n    ]\n})\nexport class SuiSelectModule {}\n","import { EventEmitter } from \"@angular/core\";\n\nexport type SidebarTransition = \"overlay\" | \"push\" | \"scale down\" | \"uncover\" | \"slide along\" | \"slide out\";\n\nexport const SidebarTransition = {\n    Overlay: \"overlay\" as SidebarTransition,\n    Push: \"push\" as SidebarTransition,\n    ScaleDown: \"scale down\" as SidebarTransition,\n    Uncover: \"uncover\" as SidebarTransition,\n    SlideAlong: \"slide along\" as SidebarTransition,\n    SlideOut: \"slide out\" as SidebarTransition\n};\n\nexport type SidebarDirection = \"left\" | \"right\" | \"top\" | \"bottom\";\n\nexport const SidebarDirection = {\n    Left: \"left\" as SidebarDirection,\n    Right: \"right\" as SidebarDirection,\n    Top: \"top\" as SidebarDirection,\n    Bottom: \"bottom\" as SidebarDirection\n};\n\nexport class SidebarService {\n    public isVisible:boolean;\n    public isAnimating:boolean;\n    public wasJustOpened:boolean;\n\n    public direction:SidebarDirection;\n\n    private _width:number;\n    private _height:number;\n\n    public get width():number {\n        if (this.direction === SidebarDirection.Left) {\n            return this._width;\n        }\n        if (this.direction === SidebarDirection.Right) {\n            return -this._width;\n        }\n        return 0;\n    }\n\n    public set width(width:number) {\n        this._width = width;\n        this.widthChange.emit();\n    }\n\n    public get height():number {\n        if (this.direction === SidebarDirection.Top) {\n            return this._height;\n        }\n        if (this.direction === SidebarDirection.Bottom) {\n            return -this._height;\n        }\n        return 0;\n    }\n\n    public set height(height:number) {\n        this._height = height;\n        this.heightChange.emit();\n    }\n\n    public isVisibleChange:EventEmitter<boolean>;\n    public widthChange:EventEmitter<void>;\n    public heightChange:EventEmitter<void>;\n\n    private _isAnimatingTimeout:number;\n\n    public transition:SidebarTransition;\n\n    constructor(isVisible:boolean = false) {\n        this.isVisible = isVisible;\n        this.isAnimating = false;\n        this.wasJustOpened = false;\n\n        this.isVisibleChange = new EventEmitter<boolean>();\n        this.widthChange = new EventEmitter<void>();\n        this.heightChange = new EventEmitter<void>();\n\n        this.width = 260;\n        this.height = 0;\n\n        this.transition = SidebarTransition.Uncover;\n    }\n\n    public setVisibleState(isVisible:boolean):void {\n        if (this.isVisible !== isVisible) {\n            this.isVisible = isVisible;\n            this.isAnimating = true;\n            this.wasJustOpened = true;\n\n            this.isVisibleChange.emit(isVisible);\n\n            setTimeout(() => this.wasJustOpened = false);\n            clearTimeout(this._isAnimatingTimeout);\n            this._isAnimatingTimeout = window.setTimeout(() => this.isAnimating = false, 500);\n        }\n    }\n\n    public toggleVisibleState():void {\n        this.setVisibleState(!this.isVisible);\n    }\n}\n","import { Component, HostBinding, Input, Output, Renderer2, ElementRef, EventEmitter } from \"@angular/core\";\nimport { SidebarService, SidebarTransition, SidebarDirection } from \"../services/sidebar.service\";\n\n@Component({\n    selector: \"sui-sidebar\",\n    template: `<ng-content></ng-content>`\n})\nexport class SuiSidebar {\n    public service:SidebarService;\n\n    @HostBinding(\"class.ui\")\n    @HostBinding(\"class.sidebar\")\n    @HostBinding(\"class.menu\")\n    public readonly hasClasses:boolean;\n\n    @Input()\n    public get transition():SidebarTransition {\n        return this.service.transition;\n    }\n\n    public set transition(transition:SidebarTransition) {\n        this.service.transition.split(\" \").forEach(c => this.setClass(c, false));\n\n        this.service.transition = transition;\n\n        this.service.transition.split(\" \").forEach(c => this.setClass(c, true));\n    }\n\n    @Input()\n    public get direction():SidebarDirection {\n        return this.service.direction;\n    }\n\n    public set direction(direction:SidebarDirection) {\n        this.setClass(this.service.direction, false);\n\n        this.service.direction = direction;\n\n        this.setClass(this.service.direction, true);\n    }\n\n    @HostBinding(\"class.visible\")\n    @Input()\n    public get isVisible():boolean {\n        return this.service.isVisible;\n    }\n\n    public set isVisible(isVisible:boolean) {\n        this.service.setVisibleState(isVisible);\n    }\n\n    @Output()\n    public get isVisibleChange():EventEmitter<boolean> {\n        return this.service.isVisibleChange;\n    }\n\n    @HostBinding(\"class.animating\")\n    public get isAnimating():boolean {\n        return this.service.isAnimating;\n    }\n\n    constructor(private _renderer:Renderer2, private _element:ElementRef) {\n        this.service = new SidebarService();\n        // We set the default here as well to force the classes to update.\n        this.transition = SidebarTransition.Uncover;\n        this.direction = SidebarDirection.Left;\n\n        setTimeout(() => this.updateDimensions());\n        this.service.isVisibleChange.subscribe(() => this.updateDimensions());\n\n        this.hasClasses = true;\n    }\n\n    private updateDimensions():void {\n        this.service.width = this._element.nativeElement.offsetWidth;\n        this.service.height = this._element.nativeElement.offsetHeight;\n    }\n\n    private setClass(className:string, isAdd:boolean = true):void {\n        if (isAdd) {\n            this._renderer.addClass(this._element.nativeElement, className);\n        } else {\n            this._renderer.removeClass(this._element.nativeElement, className);\n        }\n    }\n\n    public open():void {\n        this.service.setVisibleState(true);\n    }\n\n    public close():void {\n        this.service.setVisibleState(false);\n    }\n\n    public toggle():void {\n        this.service.toggleVisibleState();\n    }\n}\n","import { Component, Input, HostBinding, HostListener, ElementRef, Renderer2 } from \"@angular/core\";\nimport { SidebarService, SidebarTransition } from \"../services/sidebar.service\";\n\n@Component({\n    selector: \"sui-sidebar-sibling\",\n    template: `<ng-content></ng-content>`,\n    styles: [`\n:host {\n    display: block;\n}\n`]\n})\nexport class SuiSidebarSibling {\n    private _service:SidebarService;\n\n    public get service():SidebarService {\n        return this._service;\n    }\n\n    public set service(service:SidebarService) {\n        this._service = service;\n\n        setTimeout(() => this.updateTransform());\n        this._service.isVisibleChange.subscribe(() => this.updateTransform());\n    }\n\n    @Input()\n    public isDimmedWhenVisible:boolean;\n\n    @HostBinding(\"class.visible\")\n    public get isVisible():boolean {\n        if (!this.service) {\n            return false;\n        }\n        return this.service.isVisible;\n    }\n\n    @HostBinding(\"class.dimmed\")\n    public get isDimmed():boolean {\n        if (!this.service) {\n            return false;\n        }\n        return this.service.isVisible && this.isDimmedWhenVisible;\n    }\n\n    @HostBinding(\"class.pusher\")\n    public readonly hasClasses:boolean;\n\n    constructor(private _renderer:Renderer2, private _element:ElementRef) {\n        this.isDimmedWhenVisible = false;\n\n        this.hasClasses = true;\n    }\n\n    private updateTransform():void {\n        this._renderer.removeStyle(this._element.nativeElement, \"transform\");\n        this._renderer.removeStyle(this._element.nativeElement, \"-webkit-transform\");\n\n        if (this.service.isVisible &&\n            this.service.transition !== SidebarTransition.Overlay &&\n            this.service.transition !== SidebarTransition.ScaleDown) {\n\n            const translate = `translate3d(${this.service.width}px, ${this.service.height}px, 0)`;\n            this._renderer.setStyle(this._element.nativeElement, \"transform\", translate);\n            this._renderer.setStyle(this._element.nativeElement, \"-webkit-transform\", translate);\n        }\n    }\n\n    @HostListener(\"click\", [\"$event\"])\n    public onClick(event:MouseEvent):void {\n        if (this.service.isVisible && !this.service.wasJustOpened) {\n            this.service.setVisibleState(false);\n        }\n    }\n}\n","import { Component, AfterContentInit, HostBinding, ContentChild } from \"@angular/core\";\nimport { SidebarService } from \"../services/sidebar.service\";\nimport { SuiSidebar } from \"./sidebar\";\nimport { SuiSidebarSibling } from \"./sidebar-sibling\";\n\n@Component({\n    selector: \"sui-sidebar-container\",\n    template: `<ng-content></ng-content>`,\n    styles: [`\n:host {\n    display: block;\n}\n`]\n})\nexport class SuiSidebarContainer implements AfterContentInit {\n    public service:SidebarService;\n\n    @HostBinding(\"class.pushable\")\n    public readonly hasClasses:boolean;\n\n    @ContentChild(SuiSidebar)\n    public sidebar:SuiSidebar;\n\n    @ContentChild(SuiSidebarSibling)\n    public sibling:SuiSidebarSibling;\n\n    constructor() {\n        this.hasClasses = true;\n    }\n\n    public ngAfterContentInit():void {\n        if (!this.sidebar) {\n            throw new Error(\"You must include a <sui-sidebar> element within the container.\");\n        }\n        this.service = this.sidebar.service;\n\n        if (!this.sibling) {\n            throw new Error(\"You must include a <sui-sidebar-sibling> element within the container.\");\n        }\n        this.sibling.service = this.service;\n    }\n}\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { SuiSidebar } from \"./components/sidebar\";\nimport { SuiSidebarContainer } from \"./components/sidebar-container\";\nimport { SuiSidebarSibling } from \"./components/sidebar-sibling\";\n\n@NgModule({\n    imports: [\n        CommonModule\n    ],\n    declarations: [\n        SuiSidebar,\n        SuiSidebarContainer,\n        SuiSidebarSibling\n    ],\n    exports: [\n        SuiSidebar,\n        SuiSidebarContainer,\n        SuiSidebarSibling\n    ]\n})\nexport class SuiSidebarModule {}\n","import { SuiTabHeader } from \"../directives/tab-header\";\nimport { SuiTabContent } from \"../directives/tab-content\";\n\nexport class Tab {\n    public id:string;\n    public header:SuiTabHeader;\n    public content:SuiTabContent;\n    public index:number;\n\n    constructor(header:SuiTabHeader, content:SuiTabContent) {\n        this.id = header.id;\n        this.header = header;\n        this.content = content;\n\n        // So that the header and content isActive properties are always in sync.\n        this.header.isActiveChange\n            .subscribe(() => this.content.isActive = this.isActive);\n    }\n\n    // Saves accessing .header.isActive every time.\n    public get isActive():boolean {\n        return this.header.isActive;\n    }\n\n    public set isActive(active:boolean) {\n        // Use `setActiveState` so as not to fire 'external changes' event.\n        this.header.setActiveState(active);\n    }\n\n    // Saves accessing .header.isDisabled every time.\n    public get isDisabled():boolean {\n        return this.header.isDisabled;\n    }\n}\n","import { HostBinding, Input, Directive, EventEmitter, HostListener, Output } from \"@angular/core\";\n\n@Directive({\n    selector: \"[suiTabHeader]\"\n})\nexport class SuiTabHeader {\n    @HostBinding(\"class.item\")\n    public readonly hasClasses:boolean;\n\n    @Input(\"suiTabHeader\")\n    public id:string;\n\n    // Internally keeps track of whether the header is active.\n    private _isActive:boolean;\n\n    // Enables use of [(isActive)] so state can be set using booleans.\n    @Output()\n    public isActiveChange:EventEmitter<boolean>;\n\n    // Fires only when `isActive` changes due to user input.\n    public isActiveExternalChange:EventEmitter<boolean>;\n\n    // Fires whenever a tab is activated having previously been deactivated.\n    @Output(\"activate\")\n    public onActivate:EventEmitter<void>;\n\n    // Fires whenever a tab is deactivated having previously been activated.\n    @Output(\"deactivate\")\n    public onDeactivate:EventEmitter<void>;\n\n    @HostBinding(\"class.active\")\n    @Input()\n    public get isActive():boolean {\n        return this._isActive;\n    }\n\n    public set isActive(active:boolean) {\n        let isActive = active;\n        // Only used by @Input(), runs whenever user input changes `isActive`.\n        // Run in timeout because `isDisabled` can prohibit user from changing `isActive`.\n        // so update is delayed to avoid 'changed after checked' error.\n        setTimeout(() => {\n            // Only allow change if tab header is not disabled.\n            isActive = !this.isDisabled ? active : false;\n            this.setActiveState(isActive);\n\n            // Fire 'external change' event as user input has occured.\n            this.isActiveExternalChange.emit(isActive);\n        });\n    }\n\n    private _isDisabled:boolean;\n\n    @HostBinding(\"class.disabled\")\n    @Input()\n    public get isDisabled():boolean {\n        return this._isDisabled;\n    }\n\n    public set isDisabled(disabled:boolean) {\n        // Only update if value provided is different to current one.\n        if (this._isDisabled !== disabled) {\n            this._isDisabled = disabled;\n\n            // If now disabled, then tab header must be deactivated.\n            if (this.isDisabled) {\n                this.isActive = false;\n            }\n        }\n    }\n\n    constructor() {\n        this._isActive = false;\n        this.isActiveChange = new EventEmitter<boolean>();\n        this.isActiveExternalChange = new EventEmitter<boolean>();\n\n        this.onActivate = new EventEmitter<void>();\n        this.onDeactivate = new EventEmitter<void>();\n\n        this.isDisabled = false;\n\n        this.hasClasses = true;\n    }\n\n    // Internally update active state.\n    public setActiveState(active:boolean):void {\n        // If (cast) active value has changed:\n        if (!!this._isActive !== active) {\n            // Update to the new value.\n            this._isActive = active;\n\n            // Fire the appropriate activation event.\n            if (active) {\n                this.onActivate.emit();\n            } else {\n                this.onDeactivate.emit();\n            }\n        }\n\n        // Regardless, emit a change to `isActive`, so [(isActive)] works correctly.\n        this.isActiveChange.emit(active);\n    }\n\n    @HostListener(\"click\")\n    public onClick():void {\n        if (!this.isDisabled) {\n            // Activate the tab when clicked, so long as it isn't disabled.\n            this.isActive = true;\n        }\n    }\n}\n","import { HostBinding, Directive, Input } from \"@angular/core\";\n\n@Directive({\n    selector: \"[suiTabContent]\"\n})\nexport class SuiTabContent {\n    @HostBinding(\"class.tab\")\n    public readonly hasClasses:boolean;\n\n    @Input(\"suiTabContent\")\n    public id:string;\n\n    @HostBinding(\"class.active\")\n    public isActive:boolean;\n\n    constructor() {\n        this.isActive = false;\n\n        this.hasClasses = true;\n    }\n}\n","import { Component, ContentChildren, QueryList, AfterContentInit } from \"@angular/core\";\nimport { SuiTabHeader } from \"../directives/tab-header\";\nimport { SuiTabContent } from \"../directives/tab-content\";\nimport { Tab } from \"../classes/tab\";\n\n@Component({\n    selector: \"sui-tabset\",\n    template: `<ng-content></ng-content>`\n})\nexport class SuiTabset implements AfterContentInit {\n    @ContentChildren(SuiTabHeader)\n    private _tabHeaders:QueryList<SuiTabHeader>;\n\n    @ContentChildren(SuiTabContent)\n    private _tabContents:QueryList<SuiTabContent>;\n\n    // List of all tabs in the tabset.\n    public tabs:Tab[];\n\n    // Keeps track of the currently active tab.\n    private _activeTab:Tab;\n\n    public get activeTab():Tab {\n        return this._activeTab;\n    }\n\n    // When setting a tab as the currently active tab, it automatically gains\n    // `isActive` status (saves littering `isActive = true` everywhere).\n    public set activeTab(tab:Tab) {\n        this._activeTab = tab;\n        tab.isActive = true;\n    }\n\n    // Keeps track of the number of times `internalComponentsUpdated` is called.\n    private _barrierCount:number;\n\n    constructor() {\n        this.tabs = [];\n        this._barrierCount = 0;\n    }\n\n    public ngAfterContentInit():void {\n        // Fire `internalComponentsUpdated` when the query lists change.\n        this._tabHeaders.changes.subscribe(() => this.internalComponentsUpdated());\n        this._tabContents.changes.subscribe(() => this.internalComponentsUpdated());\n\n        // Initially load the tabs.\n        this.loadTabs();\n    }\n\n    // Fires whenever either the tab headers or tab contents query lists update.\n    private internalComponentsUpdated():void {\n        // We are using a 'counting barrier of n = 2', i.e. the code within only runs after the method is called twice.\n        // This is so that both the headers and contents query lists can update before we run code that matches the two up.\n        this._barrierCount++;\n\n        if (this._barrierCount === 2) {\n            // Reset the barrier so it can be called again.\n            this._barrierCount = 0;\n\n            // Update the tabs.\n            this.loadTabs();\n        }\n    }\n\n    // Connects tab headers to tab contents, and creates a tab instance for each pairing.\n    private loadTabs():void {\n        // Remove any tabs that no longer have an associated header.\n        this.tabs = this.tabs.filter(t => !!this._tabHeaders.find(tH => tH === t.header));\n\n        this._tabHeaders\n            // Filter out the loaded headers with attached tab instances.\n            .filter(tH => !this.tabs.find(t => t.header === tH))\n            .forEach(tH => {\n                const content = this._tabContents.find(tC => tC.id === tH.id);\n\n                if (!content) {\n                    // Error if an associated tab content cannot be found for the given header.\n                    throw new Error(\"A [suiTabHeader] must have a related [suiTabContent].\");\n                }\n\n                // Create a new tab instance for this header & content combo.\n                const tab = new Tab(tH, content);\n\n                // Subscribe to any external changes in the tab header's active state. External changes are triggered by user input.\n                tab.header.isActiveExternalChange.subscribe(() => this.onHeaderActiveChanged(tab));\n\n                // Add the new instance to the list of tabs.\n                this.tabs.push(tab);\n            });\n\n        // Assign each tab an index (which denotes the order they physically appear in).\n        this._tabHeaders\n            .forEach((tH, i) => {\n                const tab = this.tabs.find(t => t.header === tH);\n                if (tab) {\n                    tab.index = i;\n                }\n            });\n\n        // Sort the tabs by their index.\n        this.tabs.sort((a, b) => a.index - b.index);\n\n\n        if (!this.activeTab) { // Check if there are no current existing active tabs.\n            // If so, we must activate the first available tab.\n            this.activateFirstTab();\n        } else if (!this.tabs.find(t => t === this.activeTab)) { // O'wise check if current active tab has been deleted.\n            // If so, we must find the closest.\n            // Use `setTimeout` as this causes a 'changed after checked' error o'wise.\n            setTimeout(() => this.activateClosestTab(this.activeTab));\n        }\n\n        if (this.tabs.length === 0) {\n            // Error if there aren't any tabs in the tabset.\n            throw new Error(\"You cannot have no tabs!\");\n        }\n    }\n\n    // Fires whenever a tab header's active state is externally changed.\n    private onHeaderActiveChanged(tab:Tab):void {\n        // If the tab has become activated, but was not previously the active tab:\n        if (tab.isActive && this.activeTab !== tab) {\n            // Deactivate all of the tabs.\n            this.tabs.filter(t => t !== tab).forEach(t => t.isActive = false);\n\n            // Set the currently active tab to this one.\n            this.activeTab = tab;\n        }\n\n        // If the tab has become deactivated, but was previously the active tab:\n        if (!tab.isActive && this.activeTab === tab) {\n            // Activate the closest tab to it.\n            this.activateClosestTab(tab);\n        }\n    }\n\n    // Activate the first tab in the set.\n    public activateFirstTab():void {\n        this.activeTab = this.tabs[0];\n    }\n\n    // Activates the closest available tab to a given one.\n    public activateClosestTab(tab:Tab):void {\n        let nextAvailable:Tab | undefined;\n\n        // When the exited tab's index is higher than all available tabs,\n        if (tab.index >= this.tabs.length) {\n            // Activate the last tab.\n            nextAvailable = this.tabs[this.tabs.length - 1];\n        }\n\n        // If that didn't work, try the following cases:\n        if (!nextAvailable) {\n            if (!this.tabs.find(t => t === tab)) { // When the exited tab no longer exists,\n                // Replace it with a tab at the same index.\n                nextAvailable = this.tabs[tab.index];\n            } else { // Or if the exited tab still exists,\n                // Go to the tab immediately to the left.\n                nextAvailable = this.tabs[Math.max(tab.index - 1, 0)];\n            }\n        }\n\n        // However, if the chosen tab is disabled,\n        if (nextAvailable.isDisabled) {\n            // Activate the closest available tab to it.\n            return this.activateClosestTab(nextAvailable);\n        }\n\n        this.activeTab = nextAvailable;\n    }\n}\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { SuiTabset } from \"./components/tabset\";\nimport { SuiTabHeader } from \"./directives/tab-header\";\nimport { SuiTabContent } from \"./directives/tab-content\";\n\n@NgModule({\n    imports: [\n        CommonModule\n    ],\n    declarations: [\n        SuiTabset,\n        SuiTabHeader,\n        SuiTabContent\n    ],\n    exports: [\n        SuiTabset,\n        SuiTabHeader,\n        SuiTabContent\n    ]\n})\nexport class SuiTabsModule {}\n","import { NgModule } from \"@angular/core\";\n\n// Collections\nimport {\n    SuiMessageModule,\n    SuiPaginationModule\n} from \"./collections/internal\";\n\n// Modules\nimport {\n    SuiAccordionModule,\n    SuiCheckboxModule,\n    SuiCollapseModule,\n    SuiDatepickerModule,\n    SuiDimmerModule,\n    SuiDropdownModule,\n    SuiModalModule,\n    SuiPopupModule,\n    SuiProgressModule,\n    SuiRatingModule,\n    SuiSearchModule,\n    SuiSidebarModule,\n    SuiTabsModule,\n    SuiSelectModule,\n    SuiTransitionModule\n} from \"./modules/internal\";\n\n// Behaviors\nimport {\n    SuiLocalizationModule\n} from \"./behaviors/internal\";\n\n// Misc\nimport {\n    SuiUtilityModule\n} from \"./misc/internal\";\n\n@NgModule({\n    exports: [\n        // Collections\n        SuiMessageModule,\n        SuiPaginationModule,\n\n        // Modules\n        SuiAccordionModule,\n        SuiCheckboxModule,\n        SuiCollapseModule,\n        SuiDatepickerModule,\n        SuiDimmerModule,\n        SuiDropdownModule,\n        SuiModalModule,\n        SuiPopupModule,\n        SuiProgressModule,\n        SuiRatingModule,\n        SuiSearchModule,\n        SuiSelectModule,\n        SuiSidebarModule,\n        SuiTabsModule,\n        SuiTransitionModule,\n\n        // Behaviors\n        SuiLocalizationModule,\n\n        // Misc\n        SuiUtilityModule\n    ]\n})\nexport class SuiModule {}\n"],"names":["(/** @type {?} */ ($extend)).default","tslib_1.__extends","format","isUAWebView[\"default\"]","bowser.mobile","bowser.tablet"],"mappings":"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"}
